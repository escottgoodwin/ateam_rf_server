# source: https://rfql.herokuapp.com/rfql/dev
# timestamp: Thu Nov 01 2018 14:37:16 GMT-0700 (Pacific Daylight Time)

type AdPlaced implements Node {
  id: ID!
  adSource(where: AdSourceWhereInput): AdSource
  job(where: JobWhereInput): Job
  placedBy(where: UserWhereInput): User
  addedDate: DateTime
  copy: String
  adLink: String
  delivered: DateTime
  ran: String
  cost: Float
  paid: DateTime
  applications(where: ApplicationWhereInput, orderBy: ApplicationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Application!]
}

"""A connection to a list of items."""
type AdPlacedConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AdPlacedEdge]!
  aggregate: AggregateAdPlaced!
}

input AdPlacedCreateInput {
  addedDate: DateTime
  copy: String
  adLink: String
  delivered: DateTime
  ran: String
  cost: Float
  paid: DateTime
  adSource: AdSourceCreateOneWithoutAdsInput
  job: JobCreateOneWithoutAds_placedInput
  placedBy: UserCreateOneWithoutAds_placedInput
  applications: ApplicationCreateManyWithoutAdRefInput
}

input AdPlacedCreateManyWithoutAdSourceInput {
  create: [AdPlacedCreateWithoutAdSourceInput!]
  connect: [AdPlacedWhereUniqueInput!]
}

input AdPlacedCreateManyWithoutJobInput {
  create: [AdPlacedCreateWithoutJobInput!]
  connect: [AdPlacedWhereUniqueInput!]
}

input AdPlacedCreateManyWithoutPlacedByInput {
  create: [AdPlacedCreateWithoutPlacedByInput!]
  connect: [AdPlacedWhereUniqueInput!]
}

input AdPlacedCreateOneWithoutApplicationsInput {
  create: AdPlacedCreateWithoutApplicationsInput
  connect: AdPlacedWhereUniqueInput
}

input AdPlacedCreateWithoutAdSourceInput {
  addedDate: DateTime
  copy: String
  adLink: String
  delivered: DateTime
  ran: String
  cost: Float
  paid: DateTime
  job: JobCreateOneWithoutAds_placedInput
  placedBy: UserCreateOneWithoutAds_placedInput
  applications: ApplicationCreateManyWithoutAdRefInput
}

input AdPlacedCreateWithoutApplicationsInput {
  addedDate: DateTime
  copy: String
  adLink: String
  delivered: DateTime
  ran: String
  cost: Float
  paid: DateTime
  adSource: AdSourceCreateOneWithoutAdsInput
  job: JobCreateOneWithoutAds_placedInput
  placedBy: UserCreateOneWithoutAds_placedInput
}

input AdPlacedCreateWithoutJobInput {
  addedDate: DateTime
  copy: String
  adLink: String
  delivered: DateTime
  ran: String
  cost: Float
  paid: DateTime
  adSource: AdSourceCreateOneWithoutAdsInput
  placedBy: UserCreateOneWithoutAds_placedInput
  applications: ApplicationCreateManyWithoutAdRefInput
}

input AdPlacedCreateWithoutPlacedByInput {
  addedDate: DateTime
  copy: String
  adLink: String
  delivered: DateTime
  ran: String
  cost: Float
  paid: DateTime
  adSource: AdSourceCreateOneWithoutAdsInput
  job: JobCreateOneWithoutAds_placedInput
  applications: ApplicationCreateManyWithoutAdRefInput
}

"""An edge in a connection."""
type AdPlacedEdge {
  """The item at the end of the edge."""
  node: AdPlaced!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AdPlacedOrderByInput {
  id_ASC
  id_DESC
  addedDate_ASC
  addedDate_DESC
  copy_ASC
  copy_DESC
  adLink_ASC
  adLink_DESC
  delivered_ASC
  delivered_DESC
  ran_ASC
  ran_DESC
  cost_ASC
  cost_DESC
  paid_ASC
  paid_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type AdPlacedPreviousValues {
  id: ID!
  addedDate: DateTime
  copy: String
  adLink: String
  delivered: DateTime
  ran: String
  cost: Float
  paid: DateTime
}

type AdPlacedSubscriptionPayload {
  mutation: MutationType!
  node: AdPlaced
  updatedFields: [String!]
  previousValues: AdPlacedPreviousValues
}

input AdPlacedSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AdPlacedSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AdPlacedSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AdPlacedSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AdPlacedWhereInput
}

input AdPlacedUpdateInput {
  addedDate: DateTime
  copy: String
  adLink: String
  delivered: DateTime
  ran: String
  cost: Float
  paid: DateTime
  adSource: AdSourceUpdateOneWithoutAdsInput
  job: JobUpdateOneWithoutAds_placedInput
  placedBy: UserUpdateOneWithoutAds_placedInput
  applications: ApplicationUpdateManyWithoutAdRefInput
}

input AdPlacedUpdateManyWithoutAdSourceInput {
  create: [AdPlacedCreateWithoutAdSourceInput!]
  connect: [AdPlacedWhereUniqueInput!]
  disconnect: [AdPlacedWhereUniqueInput!]
  delete: [AdPlacedWhereUniqueInput!]
  update: [AdPlacedUpdateWithWhereUniqueWithoutAdSourceInput!]
  upsert: [AdPlacedUpsertWithWhereUniqueWithoutAdSourceInput!]
}

input AdPlacedUpdateManyWithoutJobInput {
  create: [AdPlacedCreateWithoutJobInput!]
  connect: [AdPlacedWhereUniqueInput!]
  disconnect: [AdPlacedWhereUniqueInput!]
  delete: [AdPlacedWhereUniqueInput!]
  update: [AdPlacedUpdateWithWhereUniqueWithoutJobInput!]
  upsert: [AdPlacedUpsertWithWhereUniqueWithoutJobInput!]
}

input AdPlacedUpdateManyWithoutPlacedByInput {
  create: [AdPlacedCreateWithoutPlacedByInput!]
  connect: [AdPlacedWhereUniqueInput!]
  disconnect: [AdPlacedWhereUniqueInput!]
  delete: [AdPlacedWhereUniqueInput!]
  update: [AdPlacedUpdateWithWhereUniqueWithoutPlacedByInput!]
  upsert: [AdPlacedUpsertWithWhereUniqueWithoutPlacedByInput!]
}

input AdPlacedUpdateOneWithoutApplicationsInput {
  create: AdPlacedCreateWithoutApplicationsInput
  connect: AdPlacedWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AdPlacedUpdateWithoutApplicationsDataInput
  upsert: AdPlacedUpsertWithoutApplicationsInput
}

input AdPlacedUpdateWithoutAdSourceDataInput {
  addedDate: DateTime
  copy: String
  adLink: String
  delivered: DateTime
  ran: String
  cost: Float
  paid: DateTime
  job: JobUpdateOneWithoutAds_placedInput
  placedBy: UserUpdateOneWithoutAds_placedInput
  applications: ApplicationUpdateManyWithoutAdRefInput
}

input AdPlacedUpdateWithoutApplicationsDataInput {
  addedDate: DateTime
  copy: String
  adLink: String
  delivered: DateTime
  ran: String
  cost: Float
  paid: DateTime
  adSource: AdSourceUpdateOneWithoutAdsInput
  job: JobUpdateOneWithoutAds_placedInput
  placedBy: UserUpdateOneWithoutAds_placedInput
}

input AdPlacedUpdateWithoutJobDataInput {
  addedDate: DateTime
  copy: String
  adLink: String
  delivered: DateTime
  ran: String
  cost: Float
  paid: DateTime
  adSource: AdSourceUpdateOneWithoutAdsInput
  placedBy: UserUpdateOneWithoutAds_placedInput
  applications: ApplicationUpdateManyWithoutAdRefInput
}

input AdPlacedUpdateWithoutPlacedByDataInput {
  addedDate: DateTime
  copy: String
  adLink: String
  delivered: DateTime
  ran: String
  cost: Float
  paid: DateTime
  adSource: AdSourceUpdateOneWithoutAdsInput
  job: JobUpdateOneWithoutAds_placedInput
  applications: ApplicationUpdateManyWithoutAdRefInput
}

input AdPlacedUpdateWithWhereUniqueWithoutAdSourceInput {
  where: AdPlacedWhereUniqueInput!
  data: AdPlacedUpdateWithoutAdSourceDataInput!
}

input AdPlacedUpdateWithWhereUniqueWithoutJobInput {
  where: AdPlacedWhereUniqueInput!
  data: AdPlacedUpdateWithoutJobDataInput!
}

input AdPlacedUpdateWithWhereUniqueWithoutPlacedByInput {
  where: AdPlacedWhereUniqueInput!
  data: AdPlacedUpdateWithoutPlacedByDataInput!
}

input AdPlacedUpsertWithoutApplicationsInput {
  update: AdPlacedUpdateWithoutApplicationsDataInput!
  create: AdPlacedCreateWithoutApplicationsInput!
}

input AdPlacedUpsertWithWhereUniqueWithoutAdSourceInput {
  where: AdPlacedWhereUniqueInput!
  update: AdPlacedUpdateWithoutAdSourceDataInput!
  create: AdPlacedCreateWithoutAdSourceInput!
}

input AdPlacedUpsertWithWhereUniqueWithoutJobInput {
  where: AdPlacedWhereUniqueInput!
  update: AdPlacedUpdateWithoutJobDataInput!
  create: AdPlacedCreateWithoutJobInput!
}

input AdPlacedUpsertWithWhereUniqueWithoutPlacedByInput {
  where: AdPlacedWhereUniqueInput!
  update: AdPlacedUpdateWithoutPlacedByDataInput!
  create: AdPlacedCreateWithoutPlacedByInput!
}

input AdPlacedWhereInput {
  """Logical AND on all given filters."""
  AND: [AdPlacedWhereInput!]

  """Logical OR on all given filters."""
  OR: [AdPlacedWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AdPlacedWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  addedDate: DateTime

  """All values that are not equal to given value."""
  addedDate_not: DateTime

  """All values that are contained in given list."""
  addedDate_in: [DateTime!]

  """All values that are not contained in given list."""
  addedDate_not_in: [DateTime!]

  """All values less than the given value."""
  addedDate_lt: DateTime

  """All values less than or equal the given value."""
  addedDate_lte: DateTime

  """All values greater than the given value."""
  addedDate_gt: DateTime

  """All values greater than or equal the given value."""
  addedDate_gte: DateTime
  copy: String

  """All values that are not equal to given value."""
  copy_not: String

  """All values that are contained in given list."""
  copy_in: [String!]

  """All values that are not contained in given list."""
  copy_not_in: [String!]

  """All values less than the given value."""
  copy_lt: String

  """All values less than or equal the given value."""
  copy_lte: String

  """All values greater than the given value."""
  copy_gt: String

  """All values greater than or equal the given value."""
  copy_gte: String

  """All values containing the given string."""
  copy_contains: String

  """All values not containing the given string."""
  copy_not_contains: String

  """All values starting with the given string."""
  copy_starts_with: String

  """All values not starting with the given string."""
  copy_not_starts_with: String

  """All values ending with the given string."""
  copy_ends_with: String

  """All values not ending with the given string."""
  copy_not_ends_with: String
  adLink: String

  """All values that are not equal to given value."""
  adLink_not: String

  """All values that are contained in given list."""
  adLink_in: [String!]

  """All values that are not contained in given list."""
  adLink_not_in: [String!]

  """All values less than the given value."""
  adLink_lt: String

  """All values less than or equal the given value."""
  adLink_lte: String

  """All values greater than the given value."""
  adLink_gt: String

  """All values greater than or equal the given value."""
  adLink_gte: String

  """All values containing the given string."""
  adLink_contains: String

  """All values not containing the given string."""
  adLink_not_contains: String

  """All values starting with the given string."""
  adLink_starts_with: String

  """All values not starting with the given string."""
  adLink_not_starts_with: String

  """All values ending with the given string."""
  adLink_ends_with: String

  """All values not ending with the given string."""
  adLink_not_ends_with: String
  delivered: DateTime

  """All values that are not equal to given value."""
  delivered_not: DateTime

  """All values that are contained in given list."""
  delivered_in: [DateTime!]

  """All values that are not contained in given list."""
  delivered_not_in: [DateTime!]

  """All values less than the given value."""
  delivered_lt: DateTime

  """All values less than or equal the given value."""
  delivered_lte: DateTime

  """All values greater than the given value."""
  delivered_gt: DateTime

  """All values greater than or equal the given value."""
  delivered_gte: DateTime
  ran: String

  """All values that are not equal to given value."""
  ran_not: String

  """All values that are contained in given list."""
  ran_in: [String!]

  """All values that are not contained in given list."""
  ran_not_in: [String!]

  """All values less than the given value."""
  ran_lt: String

  """All values less than or equal the given value."""
  ran_lte: String

  """All values greater than the given value."""
  ran_gt: String

  """All values greater than or equal the given value."""
  ran_gte: String

  """All values containing the given string."""
  ran_contains: String

  """All values not containing the given string."""
  ran_not_contains: String

  """All values starting with the given string."""
  ran_starts_with: String

  """All values not starting with the given string."""
  ran_not_starts_with: String

  """All values ending with the given string."""
  ran_ends_with: String

  """All values not ending with the given string."""
  ran_not_ends_with: String
  cost: Float

  """All values that are not equal to given value."""
  cost_not: Float

  """All values that are contained in given list."""
  cost_in: [Float!]

  """All values that are not contained in given list."""
  cost_not_in: [Float!]

  """All values less than the given value."""
  cost_lt: Float

  """All values less than or equal the given value."""
  cost_lte: Float

  """All values greater than the given value."""
  cost_gt: Float

  """All values greater than or equal the given value."""
  cost_gte: Float
  paid: DateTime

  """All values that are not equal to given value."""
  paid_not: DateTime

  """All values that are contained in given list."""
  paid_in: [DateTime!]

  """All values that are not contained in given list."""
  paid_not_in: [DateTime!]

  """All values less than the given value."""
  paid_lt: DateTime

  """All values less than or equal the given value."""
  paid_lte: DateTime

  """All values greater than the given value."""
  paid_gt: DateTime

  """All values greater than or equal the given value."""
  paid_gte: DateTime
  adSource: AdSourceWhereInput
  job: JobWhereInput
  placedBy: UserWhereInput
  applications_every: ApplicationWhereInput
  applications_some: ApplicationWhereInput
  applications_none: ApplicationWhereInput
}

input AdPlacedWhereUniqueInput {
  id: ID
}

type AdSource implements Node {
  id: ID!
  addedDate: DateTime
  addedBy(where: UserWhereInput): User!
  pubName: String!
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  phone: String
  email: String
  instructions: String
  ads(where: AdPlacedWhereInput, orderBy: AdPlacedOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AdPlaced!]
}

"""A connection to a list of items."""
type AdSourceConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AdSourceEdge]!
  aggregate: AggregateAdSource!
}

input AdSourceCreateInput {
  addedDate: DateTime
  pubName: String!
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  phone: String
  email: String
  instructions: String
  addedBy: UserCreateOneWithoutAd_sources_addedInput!
  ads: AdPlacedCreateManyWithoutAdSourceInput
}

input AdSourceCreateManyWithoutAddedByInput {
  create: [AdSourceCreateWithoutAddedByInput!]
  connect: [AdSourceWhereUniqueInput!]
}

input AdSourceCreateOneWithoutAdsInput {
  create: AdSourceCreateWithoutAdsInput
  connect: AdSourceWhereUniqueInput
}

input AdSourceCreateWithoutAddedByInput {
  addedDate: DateTime
  pubName: String!
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  phone: String
  email: String
  instructions: String
  ads: AdPlacedCreateManyWithoutAdSourceInput
}

input AdSourceCreateWithoutAdsInput {
  addedDate: DateTime
  pubName: String!
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  phone: String
  email: String
  instructions: String
  addedBy: UserCreateOneWithoutAd_sources_addedInput!
}

"""An edge in a connection."""
type AdSourceEdge {
  """The item at the end of the edge."""
  node: AdSource!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AdSourceOrderByInput {
  id_ASC
  id_DESC
  addedDate_ASC
  addedDate_DESC
  pubName_ASC
  pubName_DESC
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  address_ASC
  address_DESC
  city_ASC
  city_DESC
  state_ASC
  state_DESC
  phone_ASC
  phone_DESC
  email_ASC
  email_DESC
  instructions_ASC
  instructions_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type AdSourcePreviousValues {
  id: ID!
  addedDate: DateTime
  pubName: String!
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  phone: String
  email: String
  instructions: String
}

type AdSourceSubscriptionPayload {
  mutation: MutationType!
  node: AdSource
  updatedFields: [String!]
  previousValues: AdSourcePreviousValues
}

input AdSourceSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AdSourceSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AdSourceSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AdSourceSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AdSourceWhereInput
}

input AdSourceUpdateInput {
  addedDate: DateTime
  pubName: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  phone: String
  email: String
  instructions: String
  addedBy: UserUpdateOneWithoutAd_sources_addedInput
  ads: AdPlacedUpdateManyWithoutAdSourceInput
}

input AdSourceUpdateManyWithoutAddedByInput {
  create: [AdSourceCreateWithoutAddedByInput!]
  connect: [AdSourceWhereUniqueInput!]
  disconnect: [AdSourceWhereUniqueInput!]
  delete: [AdSourceWhereUniqueInput!]
  update: [AdSourceUpdateWithWhereUniqueWithoutAddedByInput!]
  upsert: [AdSourceUpsertWithWhereUniqueWithoutAddedByInput!]
}

input AdSourceUpdateOneWithoutAdsInput {
  create: AdSourceCreateWithoutAdsInput
  connect: AdSourceWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AdSourceUpdateWithoutAdsDataInput
  upsert: AdSourceUpsertWithoutAdsInput
}

input AdSourceUpdateWithoutAddedByDataInput {
  addedDate: DateTime
  pubName: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  phone: String
  email: String
  instructions: String
  ads: AdPlacedUpdateManyWithoutAdSourceInput
}

input AdSourceUpdateWithoutAdsDataInput {
  addedDate: DateTime
  pubName: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  phone: String
  email: String
  instructions: String
  addedBy: UserUpdateOneWithoutAd_sources_addedInput
}

input AdSourceUpdateWithWhereUniqueWithoutAddedByInput {
  where: AdSourceWhereUniqueInput!
  data: AdSourceUpdateWithoutAddedByDataInput!
}

input AdSourceUpsertWithoutAdsInput {
  update: AdSourceUpdateWithoutAdsDataInput!
  create: AdSourceCreateWithoutAdsInput!
}

input AdSourceUpsertWithWhereUniqueWithoutAddedByInput {
  where: AdSourceWhereUniqueInput!
  update: AdSourceUpdateWithoutAddedByDataInput!
  create: AdSourceCreateWithoutAddedByInput!
}

input AdSourceWhereInput {
  """Logical AND on all given filters."""
  AND: [AdSourceWhereInput!]

  """Logical OR on all given filters."""
  OR: [AdSourceWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AdSourceWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  addedDate: DateTime

  """All values that are not equal to given value."""
  addedDate_not: DateTime

  """All values that are contained in given list."""
  addedDate_in: [DateTime!]

  """All values that are not contained in given list."""
  addedDate_not_in: [DateTime!]

  """All values less than the given value."""
  addedDate_lt: DateTime

  """All values less than or equal the given value."""
  addedDate_lte: DateTime

  """All values greater than the given value."""
  addedDate_gt: DateTime

  """All values greater than or equal the given value."""
  addedDate_gte: DateTime
  pubName: String

  """All values that are not equal to given value."""
  pubName_not: String

  """All values that are contained in given list."""
  pubName_in: [String!]

  """All values that are not contained in given list."""
  pubName_not_in: [String!]

  """All values less than the given value."""
  pubName_lt: String

  """All values less than or equal the given value."""
  pubName_lte: String

  """All values greater than the given value."""
  pubName_gt: String

  """All values greater than or equal the given value."""
  pubName_gte: String

  """All values containing the given string."""
  pubName_contains: String

  """All values not containing the given string."""
  pubName_not_contains: String

  """All values starting with the given string."""
  pubName_starts_with: String

  """All values not starting with the given string."""
  pubName_not_starts_with: String

  """All values ending with the given string."""
  pubName_ends_with: String

  """All values not ending with the given string."""
  pubName_not_ends_with: String
  firstName: String

  """All values that are not equal to given value."""
  firstName_not: String

  """All values that are contained in given list."""
  firstName_in: [String!]

  """All values that are not contained in given list."""
  firstName_not_in: [String!]

  """All values less than the given value."""
  firstName_lt: String

  """All values less than or equal the given value."""
  firstName_lte: String

  """All values greater than the given value."""
  firstName_gt: String

  """All values greater than or equal the given value."""
  firstName_gte: String

  """All values containing the given string."""
  firstName_contains: String

  """All values not containing the given string."""
  firstName_not_contains: String

  """All values starting with the given string."""
  firstName_starts_with: String

  """All values not starting with the given string."""
  firstName_not_starts_with: String

  """All values ending with the given string."""
  firstName_ends_with: String

  """All values not ending with the given string."""
  firstName_not_ends_with: String
  lastName: String

  """All values that are not equal to given value."""
  lastName_not: String

  """All values that are contained in given list."""
  lastName_in: [String!]

  """All values that are not contained in given list."""
  lastName_not_in: [String!]

  """All values less than the given value."""
  lastName_lt: String

  """All values less than or equal the given value."""
  lastName_lte: String

  """All values greater than the given value."""
  lastName_gt: String

  """All values greater than or equal the given value."""
  lastName_gte: String

  """All values containing the given string."""
  lastName_contains: String

  """All values not containing the given string."""
  lastName_not_contains: String

  """All values starting with the given string."""
  lastName_starts_with: String

  """All values not starting with the given string."""
  lastName_not_starts_with: String

  """All values ending with the given string."""
  lastName_ends_with: String

  """All values not ending with the given string."""
  lastName_not_ends_with: String
  address: String

  """All values that are not equal to given value."""
  address_not: String

  """All values that are contained in given list."""
  address_in: [String!]

  """All values that are not contained in given list."""
  address_not_in: [String!]

  """All values less than the given value."""
  address_lt: String

  """All values less than or equal the given value."""
  address_lte: String

  """All values greater than the given value."""
  address_gt: String

  """All values greater than or equal the given value."""
  address_gte: String

  """All values containing the given string."""
  address_contains: String

  """All values not containing the given string."""
  address_not_contains: String

  """All values starting with the given string."""
  address_starts_with: String

  """All values not starting with the given string."""
  address_not_starts_with: String

  """All values ending with the given string."""
  address_ends_with: String

  """All values not ending with the given string."""
  address_not_ends_with: String
  city: String

  """All values that are not equal to given value."""
  city_not: String

  """All values that are contained in given list."""
  city_in: [String!]

  """All values that are not contained in given list."""
  city_not_in: [String!]

  """All values less than the given value."""
  city_lt: String

  """All values less than or equal the given value."""
  city_lte: String

  """All values greater than the given value."""
  city_gt: String

  """All values greater than or equal the given value."""
  city_gte: String

  """All values containing the given string."""
  city_contains: String

  """All values not containing the given string."""
  city_not_contains: String

  """All values starting with the given string."""
  city_starts_with: String

  """All values not starting with the given string."""
  city_not_starts_with: String

  """All values ending with the given string."""
  city_ends_with: String

  """All values not ending with the given string."""
  city_not_ends_with: String
  state: String

  """All values that are not equal to given value."""
  state_not: String

  """All values that are contained in given list."""
  state_in: [String!]

  """All values that are not contained in given list."""
  state_not_in: [String!]

  """All values less than the given value."""
  state_lt: String

  """All values less than or equal the given value."""
  state_lte: String

  """All values greater than the given value."""
  state_gt: String

  """All values greater than or equal the given value."""
  state_gte: String

  """All values containing the given string."""
  state_contains: String

  """All values not containing the given string."""
  state_not_contains: String

  """All values starting with the given string."""
  state_starts_with: String

  """All values not starting with the given string."""
  state_not_starts_with: String

  """All values ending with the given string."""
  state_ends_with: String

  """All values not ending with the given string."""
  state_not_ends_with: String
  phone: String

  """All values that are not equal to given value."""
  phone_not: String

  """All values that are contained in given list."""
  phone_in: [String!]

  """All values that are not contained in given list."""
  phone_not_in: [String!]

  """All values less than the given value."""
  phone_lt: String

  """All values less than or equal the given value."""
  phone_lte: String

  """All values greater than the given value."""
  phone_gt: String

  """All values greater than or equal the given value."""
  phone_gte: String

  """All values containing the given string."""
  phone_contains: String

  """All values not containing the given string."""
  phone_not_contains: String

  """All values starting with the given string."""
  phone_starts_with: String

  """All values not starting with the given string."""
  phone_not_starts_with: String

  """All values ending with the given string."""
  phone_ends_with: String

  """All values not ending with the given string."""
  phone_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  instructions: String

  """All values that are not equal to given value."""
  instructions_not: String

  """All values that are contained in given list."""
  instructions_in: [String!]

  """All values that are not contained in given list."""
  instructions_not_in: [String!]

  """All values less than the given value."""
  instructions_lt: String

  """All values less than or equal the given value."""
  instructions_lte: String

  """All values greater than the given value."""
  instructions_gt: String

  """All values greater than or equal the given value."""
  instructions_gte: String

  """All values containing the given string."""
  instructions_contains: String

  """All values not containing the given string."""
  instructions_not_contains: String

  """All values starting with the given string."""
  instructions_starts_with: String

  """All values not starting with the given string."""
  instructions_not_starts_with: String

  """All values ending with the given string."""
  instructions_ends_with: String

  """All values not ending with the given string."""
  instructions_not_ends_with: String
  addedBy: UserWhereInput
  ads_every: AdPlacedWhereInput
  ads_some: AdPlacedWhereInput
  ads_none: AdPlacedWhereInput
}

input AdSourceWhereUniqueInput {
  id: ID
}

type AggregateAdPlaced {
  count: Int!
}

type AggregateAdSource {
  count: Int!
}

type AggregateApplication {
  count: Int!
}

type AggregateArticle {
  count: Int!
}

type AggregateBackground {
  count: Int!
}

type AggregateClient {
  count: Int!
}

type AggregateExpense {
  count: Int!
}

type AggregateJob {
  count: Int!
}

type AggregateOutreachCall {
  count: Int!
}

type AggregateOutreachTarget {
  count: Int!
}

type AggregatePayment {
  count: Int!
}

type AggregateReference {
  count: Int!
}

type AggregateScreenCall {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type Application implements Node {
  id: ID!
  job(where: JobWhereInput): Job!
  application(where: UserWhereInput): User!
  adRef(where: AdPlacedWhereInput): AdPlaced
  appDate: DateTime
  withdrawDate: DateTime
  withdrawn: Boolean
  selected: Boolean
  screened: Boolean
  finalist: Boolean
  salary: Float
  references(where: ReferenceWhereInput, orderBy: ReferenceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Reference!]
  screen_call(where: ScreenCallWhereInput): ScreenCall
}

"""A connection to a list of items."""
type ApplicationConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ApplicationEdge]!
  aggregate: AggregateApplication!
}

input ApplicationCreateInput {
  appDate: DateTime
  withdrawDate: DateTime
  withdrawn: Boolean
  selected: Boolean
  screened: Boolean
  finalist: Boolean
  salary: Float
  job: JobCreateOneWithoutApplicationsInput!
  application: UserCreateOneWithoutApplicationsInput!
  adRef: AdPlacedCreateOneWithoutApplicationsInput
  references: ReferenceCreateManyWithoutApplicationInput
  screen_call: ScreenCallCreateOneWithoutApplicationInput
}

input ApplicationCreateManyWithoutAdRefInput {
  create: [ApplicationCreateWithoutAdRefInput!]
  connect: [ApplicationWhereUniqueInput!]
}

input ApplicationCreateManyWithoutApplicationInput {
  create: [ApplicationCreateWithoutApplicationInput!]
  connect: [ApplicationWhereUniqueInput!]
}

input ApplicationCreateManyWithoutJobInput {
  create: [ApplicationCreateWithoutJobInput!]
  connect: [ApplicationWhereUniqueInput!]
}

input ApplicationCreateOneWithoutReferencesInput {
  create: ApplicationCreateWithoutReferencesInput
  connect: ApplicationWhereUniqueInput
}

input ApplicationCreateOneWithoutScreen_callInput {
  create: ApplicationCreateWithoutScreen_callInput
  connect: ApplicationWhereUniqueInput
}

input ApplicationCreateWithoutAdRefInput {
  appDate: DateTime
  withdrawDate: DateTime
  withdrawn: Boolean
  selected: Boolean
  screened: Boolean
  finalist: Boolean
  salary: Float
  job: JobCreateOneWithoutApplicationsInput!
  application: UserCreateOneWithoutApplicationsInput!
  references: ReferenceCreateManyWithoutApplicationInput
  screen_call: ScreenCallCreateOneWithoutApplicationInput
}

input ApplicationCreateWithoutApplicationInput {
  appDate: DateTime
  withdrawDate: DateTime
  withdrawn: Boolean
  selected: Boolean
  screened: Boolean
  finalist: Boolean
  salary: Float
  job: JobCreateOneWithoutApplicationsInput!
  adRef: AdPlacedCreateOneWithoutApplicationsInput
  references: ReferenceCreateManyWithoutApplicationInput
  screen_call: ScreenCallCreateOneWithoutApplicationInput
}

input ApplicationCreateWithoutJobInput {
  appDate: DateTime
  withdrawDate: DateTime
  withdrawn: Boolean
  selected: Boolean
  screened: Boolean
  finalist: Boolean
  salary: Float
  application: UserCreateOneWithoutApplicationsInput!
  adRef: AdPlacedCreateOneWithoutApplicationsInput
  references: ReferenceCreateManyWithoutApplicationInput
  screen_call: ScreenCallCreateOneWithoutApplicationInput
}

input ApplicationCreateWithoutReferencesInput {
  appDate: DateTime
  withdrawDate: DateTime
  withdrawn: Boolean
  selected: Boolean
  screened: Boolean
  finalist: Boolean
  salary: Float
  job: JobCreateOneWithoutApplicationsInput!
  application: UserCreateOneWithoutApplicationsInput!
  adRef: AdPlacedCreateOneWithoutApplicationsInput
  screen_call: ScreenCallCreateOneWithoutApplicationInput
}

input ApplicationCreateWithoutScreen_callInput {
  appDate: DateTime
  withdrawDate: DateTime
  withdrawn: Boolean
  selected: Boolean
  screened: Boolean
  finalist: Boolean
  salary: Float
  job: JobCreateOneWithoutApplicationsInput!
  application: UserCreateOneWithoutApplicationsInput!
  adRef: AdPlacedCreateOneWithoutApplicationsInput
  references: ReferenceCreateManyWithoutApplicationInput
}

"""An edge in a connection."""
type ApplicationEdge {
  """The item at the end of the edge."""
  node: Application!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ApplicationOrderByInput {
  id_ASC
  id_DESC
  appDate_ASC
  appDate_DESC
  withdrawDate_ASC
  withdrawDate_DESC
  withdrawn_ASC
  withdrawn_DESC
  selected_ASC
  selected_DESC
  screened_ASC
  screened_DESC
  finalist_ASC
  finalist_DESC
  salary_ASC
  salary_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ApplicationPreviousValues {
  id: ID!
  appDate: DateTime
  withdrawDate: DateTime
  withdrawn: Boolean
  selected: Boolean
  screened: Boolean
  finalist: Boolean
  salary: Float
}

type ApplicationSubscriptionPayload {
  mutation: MutationType!
  node: Application
  updatedFields: [String!]
  previousValues: ApplicationPreviousValues
}

input ApplicationSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ApplicationSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ApplicationSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ApplicationSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ApplicationWhereInput
}

input ApplicationUpdateInput {
  appDate: DateTime
  withdrawDate: DateTime
  withdrawn: Boolean
  selected: Boolean
  screened: Boolean
  finalist: Boolean
  salary: Float
  job: JobUpdateOneWithoutApplicationsInput
  application: UserUpdateOneWithoutApplicationsInput
  adRef: AdPlacedUpdateOneWithoutApplicationsInput
  references: ReferenceUpdateManyWithoutApplicationInput
  screen_call: ScreenCallUpdateOneWithoutApplicationInput
}

input ApplicationUpdateManyWithoutAdRefInput {
  create: [ApplicationCreateWithoutAdRefInput!]
  connect: [ApplicationWhereUniqueInput!]
  disconnect: [ApplicationWhereUniqueInput!]
  delete: [ApplicationWhereUniqueInput!]
  update: [ApplicationUpdateWithWhereUniqueWithoutAdRefInput!]
  upsert: [ApplicationUpsertWithWhereUniqueWithoutAdRefInput!]
}

input ApplicationUpdateManyWithoutApplicationInput {
  create: [ApplicationCreateWithoutApplicationInput!]
  connect: [ApplicationWhereUniqueInput!]
  disconnect: [ApplicationWhereUniqueInput!]
  delete: [ApplicationWhereUniqueInput!]
  update: [ApplicationUpdateWithWhereUniqueWithoutApplicationInput!]
  upsert: [ApplicationUpsertWithWhereUniqueWithoutApplicationInput!]
}

input ApplicationUpdateManyWithoutJobInput {
  create: [ApplicationCreateWithoutJobInput!]
  connect: [ApplicationWhereUniqueInput!]
  disconnect: [ApplicationWhereUniqueInput!]
  delete: [ApplicationWhereUniqueInput!]
  update: [ApplicationUpdateWithWhereUniqueWithoutJobInput!]
  upsert: [ApplicationUpsertWithWhereUniqueWithoutJobInput!]
}

input ApplicationUpdateOneWithoutReferencesInput {
  create: ApplicationCreateWithoutReferencesInput
  connect: ApplicationWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ApplicationUpdateWithoutReferencesDataInput
  upsert: ApplicationUpsertWithoutReferencesInput
}

input ApplicationUpdateOneWithoutScreen_callInput {
  create: ApplicationCreateWithoutScreen_callInput
  connect: ApplicationWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ApplicationUpdateWithoutScreen_callDataInput
  upsert: ApplicationUpsertWithoutScreen_callInput
}

input ApplicationUpdateWithoutAdRefDataInput {
  appDate: DateTime
  withdrawDate: DateTime
  withdrawn: Boolean
  selected: Boolean
  screened: Boolean
  finalist: Boolean
  salary: Float
  job: JobUpdateOneWithoutApplicationsInput
  application: UserUpdateOneWithoutApplicationsInput
  references: ReferenceUpdateManyWithoutApplicationInput
  screen_call: ScreenCallUpdateOneWithoutApplicationInput
}

input ApplicationUpdateWithoutApplicationDataInput {
  appDate: DateTime
  withdrawDate: DateTime
  withdrawn: Boolean
  selected: Boolean
  screened: Boolean
  finalist: Boolean
  salary: Float
  job: JobUpdateOneWithoutApplicationsInput
  adRef: AdPlacedUpdateOneWithoutApplicationsInput
  references: ReferenceUpdateManyWithoutApplicationInput
  screen_call: ScreenCallUpdateOneWithoutApplicationInput
}

input ApplicationUpdateWithoutJobDataInput {
  appDate: DateTime
  withdrawDate: DateTime
  withdrawn: Boolean
  selected: Boolean
  screened: Boolean
  finalist: Boolean
  salary: Float
  application: UserUpdateOneWithoutApplicationsInput
  adRef: AdPlacedUpdateOneWithoutApplicationsInput
  references: ReferenceUpdateManyWithoutApplicationInput
  screen_call: ScreenCallUpdateOneWithoutApplicationInput
}

input ApplicationUpdateWithoutReferencesDataInput {
  appDate: DateTime
  withdrawDate: DateTime
  withdrawn: Boolean
  selected: Boolean
  screened: Boolean
  finalist: Boolean
  salary: Float
  job: JobUpdateOneWithoutApplicationsInput
  application: UserUpdateOneWithoutApplicationsInput
  adRef: AdPlacedUpdateOneWithoutApplicationsInput
  screen_call: ScreenCallUpdateOneWithoutApplicationInput
}

input ApplicationUpdateWithoutScreen_callDataInput {
  appDate: DateTime
  withdrawDate: DateTime
  withdrawn: Boolean
  selected: Boolean
  screened: Boolean
  finalist: Boolean
  salary: Float
  job: JobUpdateOneWithoutApplicationsInput
  application: UserUpdateOneWithoutApplicationsInput
  adRef: AdPlacedUpdateOneWithoutApplicationsInput
  references: ReferenceUpdateManyWithoutApplicationInput
}

input ApplicationUpdateWithWhereUniqueWithoutAdRefInput {
  where: ApplicationWhereUniqueInput!
  data: ApplicationUpdateWithoutAdRefDataInput!
}

input ApplicationUpdateWithWhereUniqueWithoutApplicationInput {
  where: ApplicationWhereUniqueInput!
  data: ApplicationUpdateWithoutApplicationDataInput!
}

input ApplicationUpdateWithWhereUniqueWithoutJobInput {
  where: ApplicationWhereUniqueInput!
  data: ApplicationUpdateWithoutJobDataInput!
}

input ApplicationUpsertWithoutReferencesInput {
  update: ApplicationUpdateWithoutReferencesDataInput!
  create: ApplicationCreateWithoutReferencesInput!
}

input ApplicationUpsertWithoutScreen_callInput {
  update: ApplicationUpdateWithoutScreen_callDataInput!
  create: ApplicationCreateWithoutScreen_callInput!
}

input ApplicationUpsertWithWhereUniqueWithoutAdRefInput {
  where: ApplicationWhereUniqueInput!
  update: ApplicationUpdateWithoutAdRefDataInput!
  create: ApplicationCreateWithoutAdRefInput!
}

input ApplicationUpsertWithWhereUniqueWithoutApplicationInput {
  where: ApplicationWhereUniqueInput!
  update: ApplicationUpdateWithoutApplicationDataInput!
  create: ApplicationCreateWithoutApplicationInput!
}

input ApplicationUpsertWithWhereUniqueWithoutJobInput {
  where: ApplicationWhereUniqueInput!
  update: ApplicationUpdateWithoutJobDataInput!
  create: ApplicationCreateWithoutJobInput!
}

input ApplicationWhereInput {
  """Logical AND on all given filters."""
  AND: [ApplicationWhereInput!]

  """Logical OR on all given filters."""
  OR: [ApplicationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ApplicationWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  appDate: DateTime

  """All values that are not equal to given value."""
  appDate_not: DateTime

  """All values that are contained in given list."""
  appDate_in: [DateTime!]

  """All values that are not contained in given list."""
  appDate_not_in: [DateTime!]

  """All values less than the given value."""
  appDate_lt: DateTime

  """All values less than or equal the given value."""
  appDate_lte: DateTime

  """All values greater than the given value."""
  appDate_gt: DateTime

  """All values greater than or equal the given value."""
  appDate_gte: DateTime
  withdrawDate: DateTime

  """All values that are not equal to given value."""
  withdrawDate_not: DateTime

  """All values that are contained in given list."""
  withdrawDate_in: [DateTime!]

  """All values that are not contained in given list."""
  withdrawDate_not_in: [DateTime!]

  """All values less than the given value."""
  withdrawDate_lt: DateTime

  """All values less than or equal the given value."""
  withdrawDate_lte: DateTime

  """All values greater than the given value."""
  withdrawDate_gt: DateTime

  """All values greater than or equal the given value."""
  withdrawDate_gte: DateTime
  withdrawn: Boolean

  """All values that are not equal to given value."""
  withdrawn_not: Boolean
  selected: Boolean

  """All values that are not equal to given value."""
  selected_not: Boolean
  screened: Boolean

  """All values that are not equal to given value."""
  screened_not: Boolean
  finalist: Boolean

  """All values that are not equal to given value."""
  finalist_not: Boolean
  salary: Float

  """All values that are not equal to given value."""
  salary_not: Float

  """All values that are contained in given list."""
  salary_in: [Float!]

  """All values that are not contained in given list."""
  salary_not_in: [Float!]

  """All values less than the given value."""
  salary_lt: Float

  """All values less than or equal the given value."""
  salary_lte: Float

  """All values greater than the given value."""
  salary_gt: Float

  """All values greater than or equal the given value."""
  salary_gte: Float
  job: JobWhereInput
  application: UserWhereInput
  adRef: AdPlacedWhereInput
  references_every: ReferenceWhereInput
  references_some: ReferenceWhereInput
  references_none: ReferenceWhereInput
  screen_call: ScreenCallWhereInput
}

input ApplicationWhereUniqueInput {
  id: ID
}

type Article implements Node {
  id: ID!
  addedBy(where: UserWhereInput): User
  applicant(where: UserWhereInput): User
  articleDate: DateTime
  title: String
  summary: String
  link: String
}

"""A connection to a list of items."""
type ArticleConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ArticleEdge]!
  aggregate: AggregateArticle!
}

input ArticleCreateInput {
  articleDate: DateTime
  title: String
  summary: String
  link: String
  addedBy: UserCreateOneWithoutArticles_addedInput
  applicant: UserCreateOneWithoutArticlesInput
}

input ArticleCreateManyWithoutAddedByInput {
  create: [ArticleCreateWithoutAddedByInput!]
  connect: [ArticleWhereUniqueInput!]
}

input ArticleCreateManyWithoutApplicantInput {
  create: [ArticleCreateWithoutApplicantInput!]
  connect: [ArticleWhereUniqueInput!]
}

input ArticleCreateWithoutAddedByInput {
  articleDate: DateTime
  title: String
  summary: String
  link: String
  applicant: UserCreateOneWithoutArticlesInput
}

input ArticleCreateWithoutApplicantInput {
  articleDate: DateTime
  title: String
  summary: String
  link: String
  addedBy: UserCreateOneWithoutArticles_addedInput
}

"""An edge in a connection."""
type ArticleEdge {
  """The item at the end of the edge."""
  node: Article!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ArticleOrderByInput {
  id_ASC
  id_DESC
  articleDate_ASC
  articleDate_DESC
  title_ASC
  title_DESC
  summary_ASC
  summary_DESC
  link_ASC
  link_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ArticlePreviousValues {
  id: ID!
  articleDate: DateTime
  title: String
  summary: String
  link: String
}

type ArticleSubscriptionPayload {
  mutation: MutationType!
  node: Article
  updatedFields: [String!]
  previousValues: ArticlePreviousValues
}

input ArticleSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ArticleSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ArticleSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ArticleSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ArticleWhereInput
}

input ArticleUpdateInput {
  articleDate: DateTime
  title: String
  summary: String
  link: String
  addedBy: UserUpdateOneWithoutArticles_addedInput
  applicant: UserUpdateOneWithoutArticlesInput
}

input ArticleUpdateManyWithoutAddedByInput {
  create: [ArticleCreateWithoutAddedByInput!]
  connect: [ArticleWhereUniqueInput!]
  disconnect: [ArticleWhereUniqueInput!]
  delete: [ArticleWhereUniqueInput!]
  update: [ArticleUpdateWithWhereUniqueWithoutAddedByInput!]
  upsert: [ArticleUpsertWithWhereUniqueWithoutAddedByInput!]
}

input ArticleUpdateManyWithoutApplicantInput {
  create: [ArticleCreateWithoutApplicantInput!]
  connect: [ArticleWhereUniqueInput!]
  disconnect: [ArticleWhereUniqueInput!]
  delete: [ArticleWhereUniqueInput!]
  update: [ArticleUpdateWithWhereUniqueWithoutApplicantInput!]
  upsert: [ArticleUpsertWithWhereUniqueWithoutApplicantInput!]
}

input ArticleUpdateWithoutAddedByDataInput {
  articleDate: DateTime
  title: String
  summary: String
  link: String
  applicant: UserUpdateOneWithoutArticlesInput
}

input ArticleUpdateWithoutApplicantDataInput {
  articleDate: DateTime
  title: String
  summary: String
  link: String
  addedBy: UserUpdateOneWithoutArticles_addedInput
}

input ArticleUpdateWithWhereUniqueWithoutAddedByInput {
  where: ArticleWhereUniqueInput!
  data: ArticleUpdateWithoutAddedByDataInput!
}

input ArticleUpdateWithWhereUniqueWithoutApplicantInput {
  where: ArticleWhereUniqueInput!
  data: ArticleUpdateWithoutApplicantDataInput!
}

input ArticleUpsertWithWhereUniqueWithoutAddedByInput {
  where: ArticleWhereUniqueInput!
  update: ArticleUpdateWithoutAddedByDataInput!
  create: ArticleCreateWithoutAddedByInput!
}

input ArticleUpsertWithWhereUniqueWithoutApplicantInput {
  where: ArticleWhereUniqueInput!
  update: ArticleUpdateWithoutApplicantDataInput!
  create: ArticleCreateWithoutApplicantInput!
}

input ArticleWhereInput {
  """Logical AND on all given filters."""
  AND: [ArticleWhereInput!]

  """Logical OR on all given filters."""
  OR: [ArticleWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ArticleWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  articleDate: DateTime

  """All values that are not equal to given value."""
  articleDate_not: DateTime

  """All values that are contained in given list."""
  articleDate_in: [DateTime!]

  """All values that are not contained in given list."""
  articleDate_not_in: [DateTime!]

  """All values less than the given value."""
  articleDate_lt: DateTime

  """All values less than or equal the given value."""
  articleDate_lte: DateTime

  """All values greater than the given value."""
  articleDate_gt: DateTime

  """All values greater than or equal the given value."""
  articleDate_gte: DateTime
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  summary: String

  """All values that are not equal to given value."""
  summary_not: String

  """All values that are contained in given list."""
  summary_in: [String!]

  """All values that are not contained in given list."""
  summary_not_in: [String!]

  """All values less than the given value."""
  summary_lt: String

  """All values less than or equal the given value."""
  summary_lte: String

  """All values greater than the given value."""
  summary_gt: String

  """All values greater than or equal the given value."""
  summary_gte: String

  """All values containing the given string."""
  summary_contains: String

  """All values not containing the given string."""
  summary_not_contains: String

  """All values starting with the given string."""
  summary_starts_with: String

  """All values not starting with the given string."""
  summary_not_starts_with: String

  """All values ending with the given string."""
  summary_ends_with: String

  """All values not ending with the given string."""
  summary_not_ends_with: String
  link: String

  """All values that are not equal to given value."""
  link_not: String

  """All values that are contained in given list."""
  link_in: [String!]

  """All values that are not contained in given list."""
  link_not_in: [String!]

  """All values less than the given value."""
  link_lt: String

  """All values less than or equal the given value."""
  link_lte: String

  """All values greater than the given value."""
  link_gt: String

  """All values greater than or equal the given value."""
  link_gte: String

  """All values containing the given string."""
  link_contains: String

  """All values not containing the given string."""
  link_not_contains: String

  """All values starting with the given string."""
  link_starts_with: String

  """All values not starting with the given string."""
  link_not_starts_with: String

  """All values ending with the given string."""
  link_ends_with: String

  """All values not ending with the given string."""
  link_not_ends_with: String
  addedBy: UserWhereInput
  applicant: UserWhereInput
}

input ArticleWhereUniqueInput {
  id: ID
}

type Background implements Node {
  id: ID!
  orderedBy(where: UserWhereInput): User
  applicant(where: UserWhereInput): User
  backgroundDate: DateTime
  type: String
  link: String
}

"""A connection to a list of items."""
type BackgroundConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [BackgroundEdge]!
  aggregate: AggregateBackground!
}

input BackgroundCreateInput {
  backgroundDate: DateTime
  type: String
  link: String
  orderedBy: UserCreateOneWithoutBackgrounds_orderedInput
  applicant: UserCreateOneWithoutBackgroundInput
}

input BackgroundCreateManyWithoutOrderedByInput {
  create: [BackgroundCreateWithoutOrderedByInput!]
  connect: [BackgroundWhereUniqueInput!]
}

input BackgroundCreateOneWithoutApplicantInput {
  create: BackgroundCreateWithoutApplicantInput
  connect: BackgroundWhereUniqueInput
}

input BackgroundCreateWithoutApplicantInput {
  backgroundDate: DateTime
  type: String
  link: String
  orderedBy: UserCreateOneWithoutBackgrounds_orderedInput
}

input BackgroundCreateWithoutOrderedByInput {
  backgroundDate: DateTime
  type: String
  link: String
  applicant: UserCreateOneWithoutBackgroundInput
}

"""An edge in a connection."""
type BackgroundEdge {
  """The item at the end of the edge."""
  node: Background!

  """A cursor for use in pagination."""
  cursor: String!
}

enum BackgroundOrderByInput {
  id_ASC
  id_DESC
  backgroundDate_ASC
  backgroundDate_DESC
  type_ASC
  type_DESC
  link_ASC
  link_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type BackgroundPreviousValues {
  id: ID!
  backgroundDate: DateTime
  type: String
  link: String
}

type BackgroundSubscriptionPayload {
  mutation: MutationType!
  node: Background
  updatedFields: [String!]
  previousValues: BackgroundPreviousValues
}

input BackgroundSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [BackgroundSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [BackgroundSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [BackgroundSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: BackgroundWhereInput
}

input BackgroundUpdateInput {
  backgroundDate: DateTime
  type: String
  link: String
  orderedBy: UserUpdateOneWithoutBackgrounds_orderedInput
  applicant: UserUpdateOneWithoutBackgroundInput
}

input BackgroundUpdateManyWithoutOrderedByInput {
  create: [BackgroundCreateWithoutOrderedByInput!]
  connect: [BackgroundWhereUniqueInput!]
  disconnect: [BackgroundWhereUniqueInput!]
  delete: [BackgroundWhereUniqueInput!]
  update: [BackgroundUpdateWithWhereUniqueWithoutOrderedByInput!]
  upsert: [BackgroundUpsertWithWhereUniqueWithoutOrderedByInput!]
}

input BackgroundUpdateOneWithoutApplicantInput {
  create: BackgroundCreateWithoutApplicantInput
  connect: BackgroundWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: BackgroundUpdateWithoutApplicantDataInput
  upsert: BackgroundUpsertWithoutApplicantInput
}

input BackgroundUpdateWithoutApplicantDataInput {
  backgroundDate: DateTime
  type: String
  link: String
  orderedBy: UserUpdateOneWithoutBackgrounds_orderedInput
}

input BackgroundUpdateWithoutOrderedByDataInput {
  backgroundDate: DateTime
  type: String
  link: String
  applicant: UserUpdateOneWithoutBackgroundInput
}

input BackgroundUpdateWithWhereUniqueWithoutOrderedByInput {
  where: BackgroundWhereUniqueInput!
  data: BackgroundUpdateWithoutOrderedByDataInput!
}

input BackgroundUpsertWithoutApplicantInput {
  update: BackgroundUpdateWithoutApplicantDataInput!
  create: BackgroundCreateWithoutApplicantInput!
}

input BackgroundUpsertWithWhereUniqueWithoutOrderedByInput {
  where: BackgroundWhereUniqueInput!
  update: BackgroundUpdateWithoutOrderedByDataInput!
  create: BackgroundCreateWithoutOrderedByInput!
}

input BackgroundWhereInput {
  """Logical AND on all given filters."""
  AND: [BackgroundWhereInput!]

  """Logical OR on all given filters."""
  OR: [BackgroundWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [BackgroundWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  backgroundDate: DateTime

  """All values that are not equal to given value."""
  backgroundDate_not: DateTime

  """All values that are contained in given list."""
  backgroundDate_in: [DateTime!]

  """All values that are not contained in given list."""
  backgroundDate_not_in: [DateTime!]

  """All values less than the given value."""
  backgroundDate_lt: DateTime

  """All values less than or equal the given value."""
  backgroundDate_lte: DateTime

  """All values greater than the given value."""
  backgroundDate_gt: DateTime

  """All values greater than or equal the given value."""
  backgroundDate_gte: DateTime
  type: String

  """All values that are not equal to given value."""
  type_not: String

  """All values that are contained in given list."""
  type_in: [String!]

  """All values that are not contained in given list."""
  type_not_in: [String!]

  """All values less than the given value."""
  type_lt: String

  """All values less than or equal the given value."""
  type_lte: String

  """All values greater than the given value."""
  type_gt: String

  """All values greater than or equal the given value."""
  type_gte: String

  """All values containing the given string."""
  type_contains: String

  """All values not containing the given string."""
  type_not_contains: String

  """All values starting with the given string."""
  type_starts_with: String

  """All values not starting with the given string."""
  type_not_starts_with: String

  """All values ending with the given string."""
  type_ends_with: String

  """All values not ending with the given string."""
  type_not_ends_with: String
  link: String

  """All values that are not equal to given value."""
  link_not: String

  """All values that are contained in given list."""
  link_in: [String!]

  """All values that are not contained in given list."""
  link_not_in: [String!]

  """All values less than the given value."""
  link_lt: String

  """All values less than or equal the given value."""
  link_lte: String

  """All values greater than the given value."""
  link_gt: String

  """All values greater than or equal the given value."""
  link_gte: String

  """All values containing the given string."""
  link_contains: String

  """All values not containing the given string."""
  link_not_contains: String

  """All values starting with the given string."""
  link_starts_with: String

  """All values not starting with the given string."""
  link_not_starts_with: String

  """All values ending with the given string."""
  link_ends_with: String

  """All values not ending with the given string."""
  link_not_ends_with: String
  orderedBy: UserWhereInput
  applicant: UserWhereInput
}

input BackgroundWhereUniqueInput {
  id: ID
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Client implements Node {
  id: ID!
  clientName: String!
  addedBy(where: UserWhereInput): User
  addedDate: DateTime
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  email: String
  jobs(where: JobWhereInput, orderBy: JobOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Job!]
  personnel(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
}

"""A connection to a list of items."""
type ClientConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ClientEdge]!
  aggregate: AggregateClient!
}

input ClientCreateInput {
  clientName: String!
  addedDate: DateTime
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  email: String
  addedBy: UserCreateOneWithoutClients_addedInput
  jobs: JobCreateManyWithoutClientInput
  personnel: UserCreateManyWithoutClientInput
}

input ClientCreateManyWithoutAddedByInput {
  create: [ClientCreateWithoutAddedByInput!]
  connect: [ClientWhereUniqueInput!]
}

input ClientCreateOneWithoutJobsInput {
  create: ClientCreateWithoutJobsInput
  connect: ClientWhereUniqueInput
}

input ClientCreateOneWithoutPersonnelInput {
  create: ClientCreateWithoutPersonnelInput
  connect: ClientWhereUniqueInput
}

input ClientCreateWithoutAddedByInput {
  clientName: String!
  addedDate: DateTime
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  email: String
  jobs: JobCreateManyWithoutClientInput
  personnel: UserCreateManyWithoutClientInput
}

input ClientCreateWithoutJobsInput {
  clientName: String!
  addedDate: DateTime
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  email: String
  addedBy: UserCreateOneWithoutClients_addedInput
  personnel: UserCreateManyWithoutClientInput
}

input ClientCreateWithoutPersonnelInput {
  clientName: String!
  addedDate: DateTime
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  email: String
  addedBy: UserCreateOneWithoutClients_addedInput
  jobs: JobCreateManyWithoutClientInput
}

"""An edge in a connection."""
type ClientEdge {
  """The item at the end of the edge."""
  node: Client!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ClientOrderByInput {
  id_ASC
  id_DESC
  clientName_ASC
  clientName_DESC
  addedDate_ASC
  addedDate_DESC
  address_ASC
  address_DESC
  city_ASC
  city_DESC
  state_ASC
  state_DESC
  zip_ASC
  zip_DESC
  phone_ASC
  phone_DESC
  email_ASC
  email_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ClientPreviousValues {
  id: ID!
  clientName: String!
  addedDate: DateTime
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  email: String
}

type ClientSubscriptionPayload {
  mutation: MutationType!
  node: Client
  updatedFields: [String!]
  previousValues: ClientPreviousValues
}

input ClientSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ClientSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ClientSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ClientSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ClientWhereInput
}

input ClientUpdateInput {
  clientName: String
  addedDate: DateTime
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  email: String
  addedBy: UserUpdateOneWithoutClients_addedInput
  jobs: JobUpdateManyWithoutClientInput
  personnel: UserUpdateManyWithoutClientInput
}

input ClientUpdateManyWithoutAddedByInput {
  create: [ClientCreateWithoutAddedByInput!]
  connect: [ClientWhereUniqueInput!]
  disconnect: [ClientWhereUniqueInput!]
  delete: [ClientWhereUniqueInput!]
  update: [ClientUpdateWithWhereUniqueWithoutAddedByInput!]
  upsert: [ClientUpsertWithWhereUniqueWithoutAddedByInput!]
}

input ClientUpdateOneWithoutJobsInput {
  create: ClientCreateWithoutJobsInput
  connect: ClientWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ClientUpdateWithoutJobsDataInput
  upsert: ClientUpsertWithoutJobsInput
}

input ClientUpdateOneWithoutPersonnelInput {
  create: ClientCreateWithoutPersonnelInput
  connect: ClientWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ClientUpdateWithoutPersonnelDataInput
  upsert: ClientUpsertWithoutPersonnelInput
}

input ClientUpdateWithoutAddedByDataInput {
  clientName: String
  addedDate: DateTime
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  email: String
  jobs: JobUpdateManyWithoutClientInput
  personnel: UserUpdateManyWithoutClientInput
}

input ClientUpdateWithoutJobsDataInput {
  clientName: String
  addedDate: DateTime
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  email: String
  addedBy: UserUpdateOneWithoutClients_addedInput
  personnel: UserUpdateManyWithoutClientInput
}

input ClientUpdateWithoutPersonnelDataInput {
  clientName: String
  addedDate: DateTime
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  email: String
  addedBy: UserUpdateOneWithoutClients_addedInput
  jobs: JobUpdateManyWithoutClientInput
}

input ClientUpdateWithWhereUniqueWithoutAddedByInput {
  where: ClientWhereUniqueInput!
  data: ClientUpdateWithoutAddedByDataInput!
}

input ClientUpsertWithoutJobsInput {
  update: ClientUpdateWithoutJobsDataInput!
  create: ClientCreateWithoutJobsInput!
}

input ClientUpsertWithoutPersonnelInput {
  update: ClientUpdateWithoutPersonnelDataInput!
  create: ClientCreateWithoutPersonnelInput!
}

input ClientUpsertWithWhereUniqueWithoutAddedByInput {
  where: ClientWhereUniqueInput!
  update: ClientUpdateWithoutAddedByDataInput!
  create: ClientCreateWithoutAddedByInput!
}

input ClientWhereInput {
  """Logical AND on all given filters."""
  AND: [ClientWhereInput!]

  """Logical OR on all given filters."""
  OR: [ClientWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ClientWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  clientName: String

  """All values that are not equal to given value."""
  clientName_not: String

  """All values that are contained in given list."""
  clientName_in: [String!]

  """All values that are not contained in given list."""
  clientName_not_in: [String!]

  """All values less than the given value."""
  clientName_lt: String

  """All values less than or equal the given value."""
  clientName_lte: String

  """All values greater than the given value."""
  clientName_gt: String

  """All values greater than or equal the given value."""
  clientName_gte: String

  """All values containing the given string."""
  clientName_contains: String

  """All values not containing the given string."""
  clientName_not_contains: String

  """All values starting with the given string."""
  clientName_starts_with: String

  """All values not starting with the given string."""
  clientName_not_starts_with: String

  """All values ending with the given string."""
  clientName_ends_with: String

  """All values not ending with the given string."""
  clientName_not_ends_with: String
  addedDate: DateTime

  """All values that are not equal to given value."""
  addedDate_not: DateTime

  """All values that are contained in given list."""
  addedDate_in: [DateTime!]

  """All values that are not contained in given list."""
  addedDate_not_in: [DateTime!]

  """All values less than the given value."""
  addedDate_lt: DateTime

  """All values less than or equal the given value."""
  addedDate_lte: DateTime

  """All values greater than the given value."""
  addedDate_gt: DateTime

  """All values greater than or equal the given value."""
  addedDate_gte: DateTime
  address: String

  """All values that are not equal to given value."""
  address_not: String

  """All values that are contained in given list."""
  address_in: [String!]

  """All values that are not contained in given list."""
  address_not_in: [String!]

  """All values less than the given value."""
  address_lt: String

  """All values less than or equal the given value."""
  address_lte: String

  """All values greater than the given value."""
  address_gt: String

  """All values greater than or equal the given value."""
  address_gte: String

  """All values containing the given string."""
  address_contains: String

  """All values not containing the given string."""
  address_not_contains: String

  """All values starting with the given string."""
  address_starts_with: String

  """All values not starting with the given string."""
  address_not_starts_with: String

  """All values ending with the given string."""
  address_ends_with: String

  """All values not ending with the given string."""
  address_not_ends_with: String
  city: String

  """All values that are not equal to given value."""
  city_not: String

  """All values that are contained in given list."""
  city_in: [String!]

  """All values that are not contained in given list."""
  city_not_in: [String!]

  """All values less than the given value."""
  city_lt: String

  """All values less than or equal the given value."""
  city_lte: String

  """All values greater than the given value."""
  city_gt: String

  """All values greater than or equal the given value."""
  city_gte: String

  """All values containing the given string."""
  city_contains: String

  """All values not containing the given string."""
  city_not_contains: String

  """All values starting with the given string."""
  city_starts_with: String

  """All values not starting with the given string."""
  city_not_starts_with: String

  """All values ending with the given string."""
  city_ends_with: String

  """All values not ending with the given string."""
  city_not_ends_with: String
  state: String

  """All values that are not equal to given value."""
  state_not: String

  """All values that are contained in given list."""
  state_in: [String!]

  """All values that are not contained in given list."""
  state_not_in: [String!]

  """All values less than the given value."""
  state_lt: String

  """All values less than or equal the given value."""
  state_lte: String

  """All values greater than the given value."""
  state_gt: String

  """All values greater than or equal the given value."""
  state_gte: String

  """All values containing the given string."""
  state_contains: String

  """All values not containing the given string."""
  state_not_contains: String

  """All values starting with the given string."""
  state_starts_with: String

  """All values not starting with the given string."""
  state_not_starts_with: String

  """All values ending with the given string."""
  state_ends_with: String

  """All values not ending with the given string."""
  state_not_ends_with: String
  zip: Int

  """All values that are not equal to given value."""
  zip_not: Int

  """All values that are contained in given list."""
  zip_in: [Int!]

  """All values that are not contained in given list."""
  zip_not_in: [Int!]

  """All values less than the given value."""
  zip_lt: Int

  """All values less than or equal the given value."""
  zip_lte: Int

  """All values greater than the given value."""
  zip_gt: Int

  """All values greater than or equal the given value."""
  zip_gte: Int
  phone: String

  """All values that are not equal to given value."""
  phone_not: String

  """All values that are contained in given list."""
  phone_in: [String!]

  """All values that are not contained in given list."""
  phone_not_in: [String!]

  """All values less than the given value."""
  phone_lt: String

  """All values less than or equal the given value."""
  phone_lte: String

  """All values greater than the given value."""
  phone_gt: String

  """All values greater than or equal the given value."""
  phone_gte: String

  """All values containing the given string."""
  phone_contains: String

  """All values not containing the given string."""
  phone_not_contains: String

  """All values starting with the given string."""
  phone_starts_with: String

  """All values not starting with the given string."""
  phone_not_starts_with: String

  """All values ending with the given string."""
  phone_ends_with: String

  """All values not ending with the given string."""
  phone_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  addedBy: UserWhereInput
  jobs_every: JobWhereInput
  jobs_some: JobWhereInput
  jobs_none: JobWhereInput
  personnel_every: UserWhereInput
  personnel_some: UserWhereInput
  personnel_none: UserWhereInput
}

input ClientWhereUniqueInput {
  id: ID
}

scalar DateTime

type Expense implements Node {
  id: ID!
  job(where: JobWhereInput): Job
  consultant(where: UserWhereInput): User
  expenseDate: DateTime
  expensePaidBy(where: UserWhereInput): User
  expensePaidDate: DateTime
  type: String
  amount: Float
  link: String
}

"""A connection to a list of items."""
type ExpenseConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ExpenseEdge]!
  aggregate: AggregateExpense!
}

input ExpenseCreateInput {
  expenseDate: DateTime
  expensePaidDate: DateTime
  type: String
  amount: Float
  link: String
  job: JobCreateOneWithoutExpensesInput
  consultant: UserCreateOneWithoutExpensesInput
  expensePaidBy: UserCreateOneWithoutExpenses_paidInput
}

input ExpenseCreateManyWithoutConsultantInput {
  create: [ExpenseCreateWithoutConsultantInput!]
  connect: [ExpenseWhereUniqueInput!]
}

input ExpenseCreateManyWithoutExpensePaidByInput {
  create: [ExpenseCreateWithoutExpensePaidByInput!]
  connect: [ExpenseWhereUniqueInput!]
}

input ExpenseCreateManyWithoutJobInput {
  create: [ExpenseCreateWithoutJobInput!]
  connect: [ExpenseWhereUniqueInput!]
}

input ExpenseCreateWithoutConsultantInput {
  expenseDate: DateTime
  expensePaidDate: DateTime
  type: String
  amount: Float
  link: String
  job: JobCreateOneWithoutExpensesInput
  expensePaidBy: UserCreateOneWithoutExpenses_paidInput
}

input ExpenseCreateWithoutExpensePaidByInput {
  expenseDate: DateTime
  expensePaidDate: DateTime
  type: String
  amount: Float
  link: String
  job: JobCreateOneWithoutExpensesInput
  consultant: UserCreateOneWithoutExpensesInput
}

input ExpenseCreateWithoutJobInput {
  expenseDate: DateTime
  expensePaidDate: DateTime
  type: String
  amount: Float
  link: String
  consultant: UserCreateOneWithoutExpensesInput
  expensePaidBy: UserCreateOneWithoutExpenses_paidInput
}

"""An edge in a connection."""
type ExpenseEdge {
  """The item at the end of the edge."""
  node: Expense!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ExpenseOrderByInput {
  id_ASC
  id_DESC
  expenseDate_ASC
  expenseDate_DESC
  expensePaidDate_ASC
  expensePaidDate_DESC
  type_ASC
  type_DESC
  amount_ASC
  amount_DESC
  link_ASC
  link_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ExpensePreviousValues {
  id: ID!
  expenseDate: DateTime
  expensePaidDate: DateTime
  type: String
  amount: Float
  link: String
}

type ExpenseSubscriptionPayload {
  mutation: MutationType!
  node: Expense
  updatedFields: [String!]
  previousValues: ExpensePreviousValues
}

input ExpenseSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ExpenseSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ExpenseSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ExpenseSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ExpenseWhereInput
}

input ExpenseUpdateInput {
  expenseDate: DateTime
  expensePaidDate: DateTime
  type: String
  amount: Float
  link: String
  job: JobUpdateOneWithoutExpensesInput
  consultant: UserUpdateOneWithoutExpensesInput
  expensePaidBy: UserUpdateOneWithoutExpenses_paidInput
}

input ExpenseUpdateManyWithoutConsultantInput {
  create: [ExpenseCreateWithoutConsultantInput!]
  connect: [ExpenseWhereUniqueInput!]
  disconnect: [ExpenseWhereUniqueInput!]
  delete: [ExpenseWhereUniqueInput!]
  update: [ExpenseUpdateWithWhereUniqueWithoutConsultantInput!]
  upsert: [ExpenseUpsertWithWhereUniqueWithoutConsultantInput!]
}

input ExpenseUpdateManyWithoutExpensePaidByInput {
  create: [ExpenseCreateWithoutExpensePaidByInput!]
  connect: [ExpenseWhereUniqueInput!]
  disconnect: [ExpenseWhereUniqueInput!]
  delete: [ExpenseWhereUniqueInput!]
  update: [ExpenseUpdateWithWhereUniqueWithoutExpensePaidByInput!]
  upsert: [ExpenseUpsertWithWhereUniqueWithoutExpensePaidByInput!]
}

input ExpenseUpdateManyWithoutJobInput {
  create: [ExpenseCreateWithoutJobInput!]
  connect: [ExpenseWhereUniqueInput!]
  disconnect: [ExpenseWhereUniqueInput!]
  delete: [ExpenseWhereUniqueInput!]
  update: [ExpenseUpdateWithWhereUniqueWithoutJobInput!]
  upsert: [ExpenseUpsertWithWhereUniqueWithoutJobInput!]
}

input ExpenseUpdateWithoutConsultantDataInput {
  expenseDate: DateTime
  expensePaidDate: DateTime
  type: String
  amount: Float
  link: String
  job: JobUpdateOneWithoutExpensesInput
  expensePaidBy: UserUpdateOneWithoutExpenses_paidInput
}

input ExpenseUpdateWithoutExpensePaidByDataInput {
  expenseDate: DateTime
  expensePaidDate: DateTime
  type: String
  amount: Float
  link: String
  job: JobUpdateOneWithoutExpensesInput
  consultant: UserUpdateOneWithoutExpensesInput
}

input ExpenseUpdateWithoutJobDataInput {
  expenseDate: DateTime
  expensePaidDate: DateTime
  type: String
  amount: Float
  link: String
  consultant: UserUpdateOneWithoutExpensesInput
  expensePaidBy: UserUpdateOneWithoutExpenses_paidInput
}

input ExpenseUpdateWithWhereUniqueWithoutConsultantInput {
  where: ExpenseWhereUniqueInput!
  data: ExpenseUpdateWithoutConsultantDataInput!
}

input ExpenseUpdateWithWhereUniqueWithoutExpensePaidByInput {
  where: ExpenseWhereUniqueInput!
  data: ExpenseUpdateWithoutExpensePaidByDataInput!
}

input ExpenseUpdateWithWhereUniqueWithoutJobInput {
  where: ExpenseWhereUniqueInput!
  data: ExpenseUpdateWithoutJobDataInput!
}

input ExpenseUpsertWithWhereUniqueWithoutConsultantInput {
  where: ExpenseWhereUniqueInput!
  update: ExpenseUpdateWithoutConsultantDataInput!
  create: ExpenseCreateWithoutConsultantInput!
}

input ExpenseUpsertWithWhereUniqueWithoutExpensePaidByInput {
  where: ExpenseWhereUniqueInput!
  update: ExpenseUpdateWithoutExpensePaidByDataInput!
  create: ExpenseCreateWithoutExpensePaidByInput!
}

input ExpenseUpsertWithWhereUniqueWithoutJobInput {
  where: ExpenseWhereUniqueInput!
  update: ExpenseUpdateWithoutJobDataInput!
  create: ExpenseCreateWithoutJobInput!
}

input ExpenseWhereInput {
  """Logical AND on all given filters."""
  AND: [ExpenseWhereInput!]

  """Logical OR on all given filters."""
  OR: [ExpenseWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ExpenseWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  expenseDate: DateTime

  """All values that are not equal to given value."""
  expenseDate_not: DateTime

  """All values that are contained in given list."""
  expenseDate_in: [DateTime!]

  """All values that are not contained in given list."""
  expenseDate_not_in: [DateTime!]

  """All values less than the given value."""
  expenseDate_lt: DateTime

  """All values less than or equal the given value."""
  expenseDate_lte: DateTime

  """All values greater than the given value."""
  expenseDate_gt: DateTime

  """All values greater than or equal the given value."""
  expenseDate_gte: DateTime
  expensePaidDate: DateTime

  """All values that are not equal to given value."""
  expensePaidDate_not: DateTime

  """All values that are contained in given list."""
  expensePaidDate_in: [DateTime!]

  """All values that are not contained in given list."""
  expensePaidDate_not_in: [DateTime!]

  """All values less than the given value."""
  expensePaidDate_lt: DateTime

  """All values less than or equal the given value."""
  expensePaidDate_lte: DateTime

  """All values greater than the given value."""
  expensePaidDate_gt: DateTime

  """All values greater than or equal the given value."""
  expensePaidDate_gte: DateTime
  type: String

  """All values that are not equal to given value."""
  type_not: String

  """All values that are contained in given list."""
  type_in: [String!]

  """All values that are not contained in given list."""
  type_not_in: [String!]

  """All values less than the given value."""
  type_lt: String

  """All values less than or equal the given value."""
  type_lte: String

  """All values greater than the given value."""
  type_gt: String

  """All values greater than or equal the given value."""
  type_gte: String

  """All values containing the given string."""
  type_contains: String

  """All values not containing the given string."""
  type_not_contains: String

  """All values starting with the given string."""
  type_starts_with: String

  """All values not starting with the given string."""
  type_not_starts_with: String

  """All values ending with the given string."""
  type_ends_with: String

  """All values not ending with the given string."""
  type_not_ends_with: String
  amount: Float

  """All values that are not equal to given value."""
  amount_not: Float

  """All values that are contained in given list."""
  amount_in: [Float!]

  """All values that are not contained in given list."""
  amount_not_in: [Float!]

  """All values less than the given value."""
  amount_lt: Float

  """All values less than or equal the given value."""
  amount_lte: Float

  """All values greater than the given value."""
  amount_gt: Float

  """All values greater than or equal the given value."""
  amount_gte: Float
  link: String

  """All values that are not equal to given value."""
  link_not: String

  """All values that are contained in given list."""
  link_in: [String!]

  """All values that are not contained in given list."""
  link_not_in: [String!]

  """All values less than the given value."""
  link_lt: String

  """All values less than or equal the given value."""
  link_lte: String

  """All values greater than the given value."""
  link_gt: String

  """All values greater than or equal the given value."""
  link_gte: String

  """All values containing the given string."""
  link_contains: String

  """All values not containing the given string."""
  link_not_contains: String

  """All values starting with the given string."""
  link_starts_with: String

  """All values not starting with the given string."""
  link_not_starts_with: String

  """All values ending with the given string."""
  link_ends_with: String

  """All values not ending with the given string."""
  link_not_ends_with: String
  job: JobWhereInput
  consultant: UserWhereInput
  expensePaidBy: UserWhereInput
}

input ExpenseWhereUniqueInput {
  id: ID
}

type Job implements Node {
  id: ID!
  main_contact(where: UserWhereInput): User
  payment_contact(where: UserWhereInput): User
  jobTitle: String!
  addedBy(where: UserWhereInput): User
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  placed(where: UserWhereInput): User
  applications(where: ApplicationWhereInput, orderBy: ApplicationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Application!]
  consultants(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  client(where: ClientWhereInput): Client
  ads_placed(where: AdPlacedWhereInput, orderBy: AdPlacedOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AdPlaced!]
  outreach_calls(where: OutreachCallWhereInput, orderBy: OutreachCallOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OutreachCall!]
  expenses(where: ExpenseWhereInput, orderBy: ExpenseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Expense!]
  payments(where: PaymentWhereInput, orderBy: PaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Payment!]
  targets(where: OutreachTargetWhereInput, orderBy: OutreachTargetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OutreachTarget!]
}

"""A connection to a list of items."""
type JobConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [JobEdge]!
  aggregate: AggregateJob!
}

input JobCreateInput {
  jobTitle: String!
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserCreateOneInput
  payment_contact: UserCreateOneInput
  addedBy: UserCreateOneWithoutJobs_addedInput
  placed: UserCreateOneInput
  applications: ApplicationCreateManyWithoutJobInput
  consultants: UserCreateManyWithoutConsultant_jobsInput
  client: ClientCreateOneWithoutJobsInput
  ads_placed: AdPlacedCreateManyWithoutJobInput
  outreach_calls: OutreachCallCreateManyWithoutJobInput
  expenses: ExpenseCreateManyWithoutJobInput
  payments: PaymentCreateManyWithoutJobInput
  targets: OutreachTargetCreateManyWithoutJobsInput
}

input JobCreateManyWithoutAddedByInput {
  create: [JobCreateWithoutAddedByInput!]
  connect: [JobWhereUniqueInput!]
}

input JobCreateManyWithoutClientInput {
  create: [JobCreateWithoutClientInput!]
  connect: [JobWhereUniqueInput!]
}

input JobCreateManyWithoutConsultantsInput {
  create: [JobCreateWithoutConsultantsInput!]
  connect: [JobWhereUniqueInput!]
}

input JobCreateManyWithoutTargetsInput {
  create: [JobCreateWithoutTargetsInput!]
  connect: [JobWhereUniqueInput!]
}

input JobCreateOneInput {
  create: JobCreateInput
  connect: JobWhereUniqueInput
}

input JobCreateOneWithoutAds_placedInput {
  create: JobCreateWithoutAds_placedInput
  connect: JobWhereUniqueInput
}

input JobCreateOneWithoutApplicationsInput {
  create: JobCreateWithoutApplicationsInput
  connect: JobWhereUniqueInput
}

input JobCreateOneWithoutExpensesInput {
  create: JobCreateWithoutExpensesInput
  connect: JobWhereUniqueInput
}

input JobCreateOneWithoutOutreach_callsInput {
  create: JobCreateWithoutOutreach_callsInput
  connect: JobWhereUniqueInput
}

input JobCreateOneWithoutPaymentsInput {
  create: JobCreateWithoutPaymentsInput
  connect: JobWhereUniqueInput
}

input JobCreateWithoutAddedByInput {
  jobTitle: String!
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserCreateOneInput
  payment_contact: UserCreateOneInput
  placed: UserCreateOneInput
  applications: ApplicationCreateManyWithoutJobInput
  consultants: UserCreateManyWithoutConsultant_jobsInput
  client: ClientCreateOneWithoutJobsInput
  ads_placed: AdPlacedCreateManyWithoutJobInput
  outreach_calls: OutreachCallCreateManyWithoutJobInput
  expenses: ExpenseCreateManyWithoutJobInput
  payments: PaymentCreateManyWithoutJobInput
  targets: OutreachTargetCreateManyWithoutJobsInput
}

input JobCreateWithoutAds_placedInput {
  jobTitle: String!
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserCreateOneInput
  payment_contact: UserCreateOneInput
  addedBy: UserCreateOneWithoutJobs_addedInput
  placed: UserCreateOneInput
  applications: ApplicationCreateManyWithoutJobInput
  consultants: UserCreateManyWithoutConsultant_jobsInput
  client: ClientCreateOneWithoutJobsInput
  outreach_calls: OutreachCallCreateManyWithoutJobInput
  expenses: ExpenseCreateManyWithoutJobInput
  payments: PaymentCreateManyWithoutJobInput
  targets: OutreachTargetCreateManyWithoutJobsInput
}

input JobCreateWithoutApplicationsInput {
  jobTitle: String!
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserCreateOneInput
  payment_contact: UserCreateOneInput
  addedBy: UserCreateOneWithoutJobs_addedInput
  placed: UserCreateOneInput
  consultants: UserCreateManyWithoutConsultant_jobsInput
  client: ClientCreateOneWithoutJobsInput
  ads_placed: AdPlacedCreateManyWithoutJobInput
  outreach_calls: OutreachCallCreateManyWithoutJobInput
  expenses: ExpenseCreateManyWithoutJobInput
  payments: PaymentCreateManyWithoutJobInput
  targets: OutreachTargetCreateManyWithoutJobsInput
}

input JobCreateWithoutClientInput {
  jobTitle: String!
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserCreateOneInput
  payment_contact: UserCreateOneInput
  addedBy: UserCreateOneWithoutJobs_addedInput
  placed: UserCreateOneInput
  applications: ApplicationCreateManyWithoutJobInput
  consultants: UserCreateManyWithoutConsultant_jobsInput
  ads_placed: AdPlacedCreateManyWithoutJobInput
  outreach_calls: OutreachCallCreateManyWithoutJobInput
  expenses: ExpenseCreateManyWithoutJobInput
  payments: PaymentCreateManyWithoutJobInput
  targets: OutreachTargetCreateManyWithoutJobsInput
}

input JobCreateWithoutConsultantsInput {
  jobTitle: String!
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserCreateOneInput
  payment_contact: UserCreateOneInput
  addedBy: UserCreateOneWithoutJobs_addedInput
  placed: UserCreateOneInput
  applications: ApplicationCreateManyWithoutJobInput
  client: ClientCreateOneWithoutJobsInput
  ads_placed: AdPlacedCreateManyWithoutJobInput
  outreach_calls: OutreachCallCreateManyWithoutJobInput
  expenses: ExpenseCreateManyWithoutJobInput
  payments: PaymentCreateManyWithoutJobInput
  targets: OutreachTargetCreateManyWithoutJobsInput
}

input JobCreateWithoutExpensesInput {
  jobTitle: String!
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserCreateOneInput
  payment_contact: UserCreateOneInput
  addedBy: UserCreateOneWithoutJobs_addedInput
  placed: UserCreateOneInput
  applications: ApplicationCreateManyWithoutJobInput
  consultants: UserCreateManyWithoutConsultant_jobsInput
  client: ClientCreateOneWithoutJobsInput
  ads_placed: AdPlacedCreateManyWithoutJobInput
  outreach_calls: OutreachCallCreateManyWithoutJobInput
  payments: PaymentCreateManyWithoutJobInput
  targets: OutreachTargetCreateManyWithoutJobsInput
}

input JobCreateWithoutOutreach_callsInput {
  jobTitle: String!
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserCreateOneInput
  payment_contact: UserCreateOneInput
  addedBy: UserCreateOneWithoutJobs_addedInput
  placed: UserCreateOneInput
  applications: ApplicationCreateManyWithoutJobInput
  consultants: UserCreateManyWithoutConsultant_jobsInput
  client: ClientCreateOneWithoutJobsInput
  ads_placed: AdPlacedCreateManyWithoutJobInput
  expenses: ExpenseCreateManyWithoutJobInput
  payments: PaymentCreateManyWithoutJobInput
  targets: OutreachTargetCreateManyWithoutJobsInput
}

input JobCreateWithoutPaymentsInput {
  jobTitle: String!
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserCreateOneInput
  payment_contact: UserCreateOneInput
  addedBy: UserCreateOneWithoutJobs_addedInput
  placed: UserCreateOneInput
  applications: ApplicationCreateManyWithoutJobInput
  consultants: UserCreateManyWithoutConsultant_jobsInput
  client: ClientCreateOneWithoutJobsInput
  ads_placed: AdPlacedCreateManyWithoutJobInput
  outreach_calls: OutreachCallCreateManyWithoutJobInput
  expenses: ExpenseCreateManyWithoutJobInput
  targets: OutreachTargetCreateManyWithoutJobsInput
}

input JobCreateWithoutTargetsInput {
  jobTitle: String!
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserCreateOneInput
  payment_contact: UserCreateOneInput
  addedBy: UserCreateOneWithoutJobs_addedInput
  placed: UserCreateOneInput
  applications: ApplicationCreateManyWithoutJobInput
  consultants: UserCreateManyWithoutConsultant_jobsInput
  client: ClientCreateOneWithoutJobsInput
  ads_placed: AdPlacedCreateManyWithoutJobInput
  outreach_calls: OutreachCallCreateManyWithoutJobInput
  expenses: ExpenseCreateManyWithoutJobInput
  payments: PaymentCreateManyWithoutJobInput
}

"""An edge in a connection."""
type JobEdge {
  """The item at the end of the edge."""
  node: Job!

  """A cursor for use in pagination."""
  cursor: String!
}

enum JobOrderByInput {
  id_ASC
  id_DESC
  jobTitle_ASC
  jobTitle_DESC
  addedDate_ASC
  addedDate_DESC
  location_ASC
  location_DESC
  description_ASC
  description_DESC
  address_ASC
  address_DESC
  city_ASC
  city_DESC
  state_ASC
  state_DESC
  created_ASC
  created_DESC
  brochure_sent_ASC
  brochure_sent_DESC
  app_deadline_ASC
  app_deadline_DESC
  screening_deadline_ASC
  screening_deadline_DESC
  presentation_ASC
  presentation_DESC
  background_deadline_ASC
  background_deadline_DESC
  final_interview_ASC
  final_interview_DESC
  placement_date_ASC
  placement_date_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type JobPreviousValues {
  id: ID!
  jobTitle: String!
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
}

type JobSubscriptionPayload {
  mutation: MutationType!
  node: Job
  updatedFields: [String!]
  previousValues: JobPreviousValues
}

input JobSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [JobSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [JobSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [JobSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: JobWhereInput
}

input JobUpdateDataInput {
  jobTitle: String
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserUpdateOneInput
  payment_contact: UserUpdateOneInput
  addedBy: UserUpdateOneWithoutJobs_addedInput
  placed: UserUpdateOneInput
  applications: ApplicationUpdateManyWithoutJobInput
  consultants: UserUpdateManyWithoutConsultant_jobsInput
  client: ClientUpdateOneWithoutJobsInput
  ads_placed: AdPlacedUpdateManyWithoutJobInput
  outreach_calls: OutreachCallUpdateManyWithoutJobInput
  expenses: ExpenseUpdateManyWithoutJobInput
  payments: PaymentUpdateManyWithoutJobInput
  targets: OutreachTargetUpdateManyWithoutJobsInput
}

input JobUpdateInput {
  jobTitle: String
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserUpdateOneInput
  payment_contact: UserUpdateOneInput
  addedBy: UserUpdateOneWithoutJobs_addedInput
  placed: UserUpdateOneInput
  applications: ApplicationUpdateManyWithoutJobInput
  consultants: UserUpdateManyWithoutConsultant_jobsInput
  client: ClientUpdateOneWithoutJobsInput
  ads_placed: AdPlacedUpdateManyWithoutJobInput
  outreach_calls: OutreachCallUpdateManyWithoutJobInput
  expenses: ExpenseUpdateManyWithoutJobInput
  payments: PaymentUpdateManyWithoutJobInput
  targets: OutreachTargetUpdateManyWithoutJobsInput
}

input JobUpdateManyWithoutAddedByInput {
  create: [JobCreateWithoutAddedByInput!]
  connect: [JobWhereUniqueInput!]
  disconnect: [JobWhereUniqueInput!]
  delete: [JobWhereUniqueInput!]
  update: [JobUpdateWithWhereUniqueWithoutAddedByInput!]
  upsert: [JobUpsertWithWhereUniqueWithoutAddedByInput!]
}

input JobUpdateManyWithoutClientInput {
  create: [JobCreateWithoutClientInput!]
  connect: [JobWhereUniqueInput!]
  disconnect: [JobWhereUniqueInput!]
  delete: [JobWhereUniqueInput!]
  update: [JobUpdateWithWhereUniqueWithoutClientInput!]
  upsert: [JobUpsertWithWhereUniqueWithoutClientInput!]
}

input JobUpdateManyWithoutConsultantsInput {
  create: [JobCreateWithoutConsultantsInput!]
  connect: [JobWhereUniqueInput!]
  disconnect: [JobWhereUniqueInput!]
  delete: [JobWhereUniqueInput!]
  update: [JobUpdateWithWhereUniqueWithoutConsultantsInput!]
  upsert: [JobUpsertWithWhereUniqueWithoutConsultantsInput!]
}

input JobUpdateManyWithoutTargetsInput {
  create: [JobCreateWithoutTargetsInput!]
  connect: [JobWhereUniqueInput!]
  disconnect: [JobWhereUniqueInput!]
  delete: [JobWhereUniqueInput!]
  update: [JobUpdateWithWhereUniqueWithoutTargetsInput!]
  upsert: [JobUpsertWithWhereUniqueWithoutTargetsInput!]
}

input JobUpdateOneInput {
  create: JobCreateInput
  connect: JobWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: JobUpdateDataInput
  upsert: JobUpsertNestedInput
}

input JobUpdateOneWithoutAds_placedInput {
  create: JobCreateWithoutAds_placedInput
  connect: JobWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: JobUpdateWithoutAds_placedDataInput
  upsert: JobUpsertWithoutAds_placedInput
}

input JobUpdateOneWithoutApplicationsInput {
  create: JobCreateWithoutApplicationsInput
  connect: JobWhereUniqueInput
  delete: Boolean
  update: JobUpdateWithoutApplicationsDataInput
  upsert: JobUpsertWithoutApplicationsInput
}

input JobUpdateOneWithoutExpensesInput {
  create: JobCreateWithoutExpensesInput
  connect: JobWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: JobUpdateWithoutExpensesDataInput
  upsert: JobUpsertWithoutExpensesInput
}

input JobUpdateOneWithoutOutreach_callsInput {
  create: JobCreateWithoutOutreach_callsInput
  connect: JobWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: JobUpdateWithoutOutreach_callsDataInput
  upsert: JobUpsertWithoutOutreach_callsInput
}

input JobUpdateOneWithoutPaymentsInput {
  create: JobCreateWithoutPaymentsInput
  connect: JobWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: JobUpdateWithoutPaymentsDataInput
  upsert: JobUpsertWithoutPaymentsInput
}

input JobUpdateWithoutAddedByDataInput {
  jobTitle: String
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserUpdateOneInput
  payment_contact: UserUpdateOneInput
  placed: UserUpdateOneInput
  applications: ApplicationUpdateManyWithoutJobInput
  consultants: UserUpdateManyWithoutConsultant_jobsInput
  client: ClientUpdateOneWithoutJobsInput
  ads_placed: AdPlacedUpdateManyWithoutJobInput
  outreach_calls: OutreachCallUpdateManyWithoutJobInput
  expenses: ExpenseUpdateManyWithoutJobInput
  payments: PaymentUpdateManyWithoutJobInput
  targets: OutreachTargetUpdateManyWithoutJobsInput
}

input JobUpdateWithoutAds_placedDataInput {
  jobTitle: String
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserUpdateOneInput
  payment_contact: UserUpdateOneInput
  addedBy: UserUpdateOneWithoutJobs_addedInput
  placed: UserUpdateOneInput
  applications: ApplicationUpdateManyWithoutJobInput
  consultants: UserUpdateManyWithoutConsultant_jobsInput
  client: ClientUpdateOneWithoutJobsInput
  outreach_calls: OutreachCallUpdateManyWithoutJobInput
  expenses: ExpenseUpdateManyWithoutJobInput
  payments: PaymentUpdateManyWithoutJobInput
  targets: OutreachTargetUpdateManyWithoutJobsInput
}

input JobUpdateWithoutApplicationsDataInput {
  jobTitle: String
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserUpdateOneInput
  payment_contact: UserUpdateOneInput
  addedBy: UserUpdateOneWithoutJobs_addedInput
  placed: UserUpdateOneInput
  consultants: UserUpdateManyWithoutConsultant_jobsInput
  client: ClientUpdateOneWithoutJobsInput
  ads_placed: AdPlacedUpdateManyWithoutJobInput
  outreach_calls: OutreachCallUpdateManyWithoutJobInput
  expenses: ExpenseUpdateManyWithoutJobInput
  payments: PaymentUpdateManyWithoutJobInput
  targets: OutreachTargetUpdateManyWithoutJobsInput
}

input JobUpdateWithoutClientDataInput {
  jobTitle: String
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserUpdateOneInput
  payment_contact: UserUpdateOneInput
  addedBy: UserUpdateOneWithoutJobs_addedInput
  placed: UserUpdateOneInput
  applications: ApplicationUpdateManyWithoutJobInput
  consultants: UserUpdateManyWithoutConsultant_jobsInput
  ads_placed: AdPlacedUpdateManyWithoutJobInput
  outreach_calls: OutreachCallUpdateManyWithoutJobInput
  expenses: ExpenseUpdateManyWithoutJobInput
  payments: PaymentUpdateManyWithoutJobInput
  targets: OutreachTargetUpdateManyWithoutJobsInput
}

input JobUpdateWithoutConsultantsDataInput {
  jobTitle: String
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserUpdateOneInput
  payment_contact: UserUpdateOneInput
  addedBy: UserUpdateOneWithoutJobs_addedInput
  placed: UserUpdateOneInput
  applications: ApplicationUpdateManyWithoutJobInput
  client: ClientUpdateOneWithoutJobsInput
  ads_placed: AdPlacedUpdateManyWithoutJobInput
  outreach_calls: OutreachCallUpdateManyWithoutJobInput
  expenses: ExpenseUpdateManyWithoutJobInput
  payments: PaymentUpdateManyWithoutJobInput
  targets: OutreachTargetUpdateManyWithoutJobsInput
}

input JobUpdateWithoutExpensesDataInput {
  jobTitle: String
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserUpdateOneInput
  payment_contact: UserUpdateOneInput
  addedBy: UserUpdateOneWithoutJobs_addedInput
  placed: UserUpdateOneInput
  applications: ApplicationUpdateManyWithoutJobInput
  consultants: UserUpdateManyWithoutConsultant_jobsInput
  client: ClientUpdateOneWithoutJobsInput
  ads_placed: AdPlacedUpdateManyWithoutJobInput
  outreach_calls: OutreachCallUpdateManyWithoutJobInput
  payments: PaymentUpdateManyWithoutJobInput
  targets: OutreachTargetUpdateManyWithoutJobsInput
}

input JobUpdateWithoutOutreach_callsDataInput {
  jobTitle: String
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserUpdateOneInput
  payment_contact: UserUpdateOneInput
  addedBy: UserUpdateOneWithoutJobs_addedInput
  placed: UserUpdateOneInput
  applications: ApplicationUpdateManyWithoutJobInput
  consultants: UserUpdateManyWithoutConsultant_jobsInput
  client: ClientUpdateOneWithoutJobsInput
  ads_placed: AdPlacedUpdateManyWithoutJobInput
  expenses: ExpenseUpdateManyWithoutJobInput
  payments: PaymentUpdateManyWithoutJobInput
  targets: OutreachTargetUpdateManyWithoutJobsInput
}

input JobUpdateWithoutPaymentsDataInput {
  jobTitle: String
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserUpdateOneInput
  payment_contact: UserUpdateOneInput
  addedBy: UserUpdateOneWithoutJobs_addedInput
  placed: UserUpdateOneInput
  applications: ApplicationUpdateManyWithoutJobInput
  consultants: UserUpdateManyWithoutConsultant_jobsInput
  client: ClientUpdateOneWithoutJobsInput
  ads_placed: AdPlacedUpdateManyWithoutJobInput
  outreach_calls: OutreachCallUpdateManyWithoutJobInput
  expenses: ExpenseUpdateManyWithoutJobInput
  targets: OutreachTargetUpdateManyWithoutJobsInput
}

input JobUpdateWithoutTargetsDataInput {
  jobTitle: String
  addedDate: DateTime
  location: String
  description: String
  address: String
  city: String
  state: String
  created: DateTime
  brochure_sent: DateTime
  app_deadline: DateTime
  screening_deadline: DateTime
  presentation: DateTime
  background_deadline: DateTime
  final_interview: DateTime
  placement_date: DateTime
  main_contact: UserUpdateOneInput
  payment_contact: UserUpdateOneInput
  addedBy: UserUpdateOneWithoutJobs_addedInput
  placed: UserUpdateOneInput
  applications: ApplicationUpdateManyWithoutJobInput
  consultants: UserUpdateManyWithoutConsultant_jobsInput
  client: ClientUpdateOneWithoutJobsInput
  ads_placed: AdPlacedUpdateManyWithoutJobInput
  outreach_calls: OutreachCallUpdateManyWithoutJobInput
  expenses: ExpenseUpdateManyWithoutJobInput
  payments: PaymentUpdateManyWithoutJobInput
}

input JobUpdateWithWhereUniqueWithoutAddedByInput {
  where: JobWhereUniqueInput!
  data: JobUpdateWithoutAddedByDataInput!
}

input JobUpdateWithWhereUniqueWithoutClientInput {
  where: JobWhereUniqueInput!
  data: JobUpdateWithoutClientDataInput!
}

input JobUpdateWithWhereUniqueWithoutConsultantsInput {
  where: JobWhereUniqueInput!
  data: JobUpdateWithoutConsultantsDataInput!
}

input JobUpdateWithWhereUniqueWithoutTargetsInput {
  where: JobWhereUniqueInput!
  data: JobUpdateWithoutTargetsDataInput!
}

input JobUpsertNestedInput {
  update: JobUpdateDataInput!
  create: JobCreateInput!
}

input JobUpsertWithoutAds_placedInput {
  update: JobUpdateWithoutAds_placedDataInput!
  create: JobCreateWithoutAds_placedInput!
}

input JobUpsertWithoutApplicationsInput {
  update: JobUpdateWithoutApplicationsDataInput!
  create: JobCreateWithoutApplicationsInput!
}

input JobUpsertWithoutExpensesInput {
  update: JobUpdateWithoutExpensesDataInput!
  create: JobCreateWithoutExpensesInput!
}

input JobUpsertWithoutOutreach_callsInput {
  update: JobUpdateWithoutOutreach_callsDataInput!
  create: JobCreateWithoutOutreach_callsInput!
}

input JobUpsertWithoutPaymentsInput {
  update: JobUpdateWithoutPaymentsDataInput!
  create: JobCreateWithoutPaymentsInput!
}

input JobUpsertWithWhereUniqueWithoutAddedByInput {
  where: JobWhereUniqueInput!
  update: JobUpdateWithoutAddedByDataInput!
  create: JobCreateWithoutAddedByInput!
}

input JobUpsertWithWhereUniqueWithoutClientInput {
  where: JobWhereUniqueInput!
  update: JobUpdateWithoutClientDataInput!
  create: JobCreateWithoutClientInput!
}

input JobUpsertWithWhereUniqueWithoutConsultantsInput {
  where: JobWhereUniqueInput!
  update: JobUpdateWithoutConsultantsDataInput!
  create: JobCreateWithoutConsultantsInput!
}

input JobUpsertWithWhereUniqueWithoutTargetsInput {
  where: JobWhereUniqueInput!
  update: JobUpdateWithoutTargetsDataInput!
  create: JobCreateWithoutTargetsInput!
}

input JobWhereInput {
  """Logical AND on all given filters."""
  AND: [JobWhereInput!]

  """Logical OR on all given filters."""
  OR: [JobWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [JobWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  jobTitle: String

  """All values that are not equal to given value."""
  jobTitle_not: String

  """All values that are contained in given list."""
  jobTitle_in: [String!]

  """All values that are not contained in given list."""
  jobTitle_not_in: [String!]

  """All values less than the given value."""
  jobTitle_lt: String

  """All values less than or equal the given value."""
  jobTitle_lte: String

  """All values greater than the given value."""
  jobTitle_gt: String

  """All values greater than or equal the given value."""
  jobTitle_gte: String

  """All values containing the given string."""
  jobTitle_contains: String

  """All values not containing the given string."""
  jobTitle_not_contains: String

  """All values starting with the given string."""
  jobTitle_starts_with: String

  """All values not starting with the given string."""
  jobTitle_not_starts_with: String

  """All values ending with the given string."""
  jobTitle_ends_with: String

  """All values not ending with the given string."""
  jobTitle_not_ends_with: String
  addedDate: DateTime

  """All values that are not equal to given value."""
  addedDate_not: DateTime

  """All values that are contained in given list."""
  addedDate_in: [DateTime!]

  """All values that are not contained in given list."""
  addedDate_not_in: [DateTime!]

  """All values less than the given value."""
  addedDate_lt: DateTime

  """All values less than or equal the given value."""
  addedDate_lte: DateTime

  """All values greater than the given value."""
  addedDate_gt: DateTime

  """All values greater than or equal the given value."""
  addedDate_gte: DateTime
  location: String

  """All values that are not equal to given value."""
  location_not: String

  """All values that are contained in given list."""
  location_in: [String!]

  """All values that are not contained in given list."""
  location_not_in: [String!]

  """All values less than the given value."""
  location_lt: String

  """All values less than or equal the given value."""
  location_lte: String

  """All values greater than the given value."""
  location_gt: String

  """All values greater than or equal the given value."""
  location_gte: String

  """All values containing the given string."""
  location_contains: String

  """All values not containing the given string."""
  location_not_contains: String

  """All values starting with the given string."""
  location_starts_with: String

  """All values not starting with the given string."""
  location_not_starts_with: String

  """All values ending with the given string."""
  location_ends_with: String

  """All values not ending with the given string."""
  location_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  address: String

  """All values that are not equal to given value."""
  address_not: String

  """All values that are contained in given list."""
  address_in: [String!]

  """All values that are not contained in given list."""
  address_not_in: [String!]

  """All values less than the given value."""
  address_lt: String

  """All values less than or equal the given value."""
  address_lte: String

  """All values greater than the given value."""
  address_gt: String

  """All values greater than or equal the given value."""
  address_gte: String

  """All values containing the given string."""
  address_contains: String

  """All values not containing the given string."""
  address_not_contains: String

  """All values starting with the given string."""
  address_starts_with: String

  """All values not starting with the given string."""
  address_not_starts_with: String

  """All values ending with the given string."""
  address_ends_with: String

  """All values not ending with the given string."""
  address_not_ends_with: String
  city: String

  """All values that are not equal to given value."""
  city_not: String

  """All values that are contained in given list."""
  city_in: [String!]

  """All values that are not contained in given list."""
  city_not_in: [String!]

  """All values less than the given value."""
  city_lt: String

  """All values less than or equal the given value."""
  city_lte: String

  """All values greater than the given value."""
  city_gt: String

  """All values greater than or equal the given value."""
  city_gte: String

  """All values containing the given string."""
  city_contains: String

  """All values not containing the given string."""
  city_not_contains: String

  """All values starting with the given string."""
  city_starts_with: String

  """All values not starting with the given string."""
  city_not_starts_with: String

  """All values ending with the given string."""
  city_ends_with: String

  """All values not ending with the given string."""
  city_not_ends_with: String
  state: String

  """All values that are not equal to given value."""
  state_not: String

  """All values that are contained in given list."""
  state_in: [String!]

  """All values that are not contained in given list."""
  state_not_in: [String!]

  """All values less than the given value."""
  state_lt: String

  """All values less than or equal the given value."""
  state_lte: String

  """All values greater than the given value."""
  state_gt: String

  """All values greater than or equal the given value."""
  state_gte: String

  """All values containing the given string."""
  state_contains: String

  """All values not containing the given string."""
  state_not_contains: String

  """All values starting with the given string."""
  state_starts_with: String

  """All values not starting with the given string."""
  state_not_starts_with: String

  """All values ending with the given string."""
  state_ends_with: String

  """All values not ending with the given string."""
  state_not_ends_with: String
  created: DateTime

  """All values that are not equal to given value."""
  created_not: DateTime

  """All values that are contained in given list."""
  created_in: [DateTime!]

  """All values that are not contained in given list."""
  created_not_in: [DateTime!]

  """All values less than the given value."""
  created_lt: DateTime

  """All values less than or equal the given value."""
  created_lte: DateTime

  """All values greater than the given value."""
  created_gt: DateTime

  """All values greater than or equal the given value."""
  created_gte: DateTime
  brochure_sent: DateTime

  """All values that are not equal to given value."""
  brochure_sent_not: DateTime

  """All values that are contained in given list."""
  brochure_sent_in: [DateTime!]

  """All values that are not contained in given list."""
  brochure_sent_not_in: [DateTime!]

  """All values less than the given value."""
  brochure_sent_lt: DateTime

  """All values less than or equal the given value."""
  brochure_sent_lte: DateTime

  """All values greater than the given value."""
  brochure_sent_gt: DateTime

  """All values greater than or equal the given value."""
  brochure_sent_gte: DateTime
  app_deadline: DateTime

  """All values that are not equal to given value."""
  app_deadline_not: DateTime

  """All values that are contained in given list."""
  app_deadline_in: [DateTime!]

  """All values that are not contained in given list."""
  app_deadline_not_in: [DateTime!]

  """All values less than the given value."""
  app_deadline_lt: DateTime

  """All values less than or equal the given value."""
  app_deadline_lte: DateTime

  """All values greater than the given value."""
  app_deadline_gt: DateTime

  """All values greater than or equal the given value."""
  app_deadline_gte: DateTime
  screening_deadline: DateTime

  """All values that are not equal to given value."""
  screening_deadline_not: DateTime

  """All values that are contained in given list."""
  screening_deadline_in: [DateTime!]

  """All values that are not contained in given list."""
  screening_deadline_not_in: [DateTime!]

  """All values less than the given value."""
  screening_deadline_lt: DateTime

  """All values less than or equal the given value."""
  screening_deadline_lte: DateTime

  """All values greater than the given value."""
  screening_deadline_gt: DateTime

  """All values greater than or equal the given value."""
  screening_deadline_gte: DateTime
  presentation: DateTime

  """All values that are not equal to given value."""
  presentation_not: DateTime

  """All values that are contained in given list."""
  presentation_in: [DateTime!]

  """All values that are not contained in given list."""
  presentation_not_in: [DateTime!]

  """All values less than the given value."""
  presentation_lt: DateTime

  """All values less than or equal the given value."""
  presentation_lte: DateTime

  """All values greater than the given value."""
  presentation_gt: DateTime

  """All values greater than or equal the given value."""
  presentation_gte: DateTime
  background_deadline: DateTime

  """All values that are not equal to given value."""
  background_deadline_not: DateTime

  """All values that are contained in given list."""
  background_deadline_in: [DateTime!]

  """All values that are not contained in given list."""
  background_deadline_not_in: [DateTime!]

  """All values less than the given value."""
  background_deadline_lt: DateTime

  """All values less than or equal the given value."""
  background_deadline_lte: DateTime

  """All values greater than the given value."""
  background_deadline_gt: DateTime

  """All values greater than or equal the given value."""
  background_deadline_gte: DateTime
  final_interview: DateTime

  """All values that are not equal to given value."""
  final_interview_not: DateTime

  """All values that are contained in given list."""
  final_interview_in: [DateTime!]

  """All values that are not contained in given list."""
  final_interview_not_in: [DateTime!]

  """All values less than the given value."""
  final_interview_lt: DateTime

  """All values less than or equal the given value."""
  final_interview_lte: DateTime

  """All values greater than the given value."""
  final_interview_gt: DateTime

  """All values greater than or equal the given value."""
  final_interview_gte: DateTime
  placement_date: DateTime

  """All values that are not equal to given value."""
  placement_date_not: DateTime

  """All values that are contained in given list."""
  placement_date_in: [DateTime!]

  """All values that are not contained in given list."""
  placement_date_not_in: [DateTime!]

  """All values less than the given value."""
  placement_date_lt: DateTime

  """All values less than or equal the given value."""
  placement_date_lte: DateTime

  """All values greater than the given value."""
  placement_date_gt: DateTime

  """All values greater than or equal the given value."""
  placement_date_gte: DateTime
  main_contact: UserWhereInput
  payment_contact: UserWhereInput
  addedBy: UserWhereInput
  placed: UserWhereInput
  applications_every: ApplicationWhereInput
  applications_some: ApplicationWhereInput
  applications_none: ApplicationWhereInput
  consultants_every: UserWhereInput
  consultants_some: UserWhereInput
  consultants_none: UserWhereInput
  client: ClientWhereInput
  ads_placed_every: AdPlacedWhereInput
  ads_placed_some: AdPlacedWhereInput
  ads_placed_none: AdPlacedWhereInput
  outreach_calls_every: OutreachCallWhereInput
  outreach_calls_some: OutreachCallWhereInput
  outreach_calls_none: OutreachCallWhereInput
  expenses_every: ExpenseWhereInput
  expenses_some: ExpenseWhereInput
  expenses_none: ExpenseWhereInput
  payments_every: PaymentWhereInput
  payments_some: PaymentWhereInput
  payments_none: PaymentWhereInput
  targets_every: OutreachTargetWhereInput
  targets_some: OutreachTargetWhereInput
  targets_none: OutreachTargetWhereInput
  _MagicalBackRelation_ReferenceByJob_every: ReferenceWhereInput
  _MagicalBackRelation_ReferenceByJob_some: ReferenceWhereInput
  _MagicalBackRelation_ReferenceByJob_none: ReferenceWhereInput
  _MagicalBackRelation_ScreenCallByJob_every: ScreenCallWhereInput
  _MagicalBackRelation_ScreenCallByJob_some: ScreenCallWhereInput
  _MagicalBackRelation_ScreenCallByJob_none: ScreenCallWhereInput
}

input JobWhereUniqueInput {
  id: ID
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createClient(data: ClientCreateInput!): Client!
  createAdPlaced(data: AdPlacedCreateInput!): AdPlaced!
  createAdSource(data: AdSourceCreateInput!): AdSource!
  createOutreachTarget(data: OutreachTargetCreateInput!): OutreachTarget!
  createApplication(data: ApplicationCreateInput!): Application!
  createOutreachCall(data: OutreachCallCreateInput!): OutreachCall!
  createScreenCall(data: ScreenCallCreateInput!): ScreenCall!
  createReference(data: ReferenceCreateInput!): Reference!
  createBackground(data: BackgroundCreateInput!): Background!
  createArticle(data: ArticleCreateInput!): Article!
  createExpense(data: ExpenseCreateInput!): Expense!
  createPayment(data: PaymentCreateInput!): Payment!
  createJob(data: JobCreateInput!): Job!
  createUser(data: UserCreateInput!): User!
  updateClient(data: ClientUpdateInput!, where: ClientWhereUniqueInput!): Client
  updateAdPlaced(data: AdPlacedUpdateInput!, where: AdPlacedWhereUniqueInput!): AdPlaced
  updateAdSource(data: AdSourceUpdateInput!, where: AdSourceWhereUniqueInput!): AdSource
  updateOutreachTarget(data: OutreachTargetUpdateInput!, where: OutreachTargetWhereUniqueInput!): OutreachTarget
  updateApplication(data: ApplicationUpdateInput!, where: ApplicationWhereUniqueInput!): Application
  updateOutreachCall(data: OutreachCallUpdateInput!, where: OutreachCallWhereUniqueInput!): OutreachCall
  updateScreenCall(data: ScreenCallUpdateInput!, where: ScreenCallWhereUniqueInput!): ScreenCall
  updateReference(data: ReferenceUpdateInput!, where: ReferenceWhereUniqueInput!): Reference
  updateBackground(data: BackgroundUpdateInput!, where: BackgroundWhereUniqueInput!): Background
  updateArticle(data: ArticleUpdateInput!, where: ArticleWhereUniqueInput!): Article
  updateExpense(data: ExpenseUpdateInput!, where: ExpenseWhereUniqueInput!): Expense
  updatePayment(data: PaymentUpdateInput!, where: PaymentWhereUniqueInput!): Payment
  updateJob(data: JobUpdateInput!, where: JobWhereUniqueInput!): Job
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  deleteClient(where: ClientWhereUniqueInput!): Client
  deleteAdPlaced(where: AdPlacedWhereUniqueInput!): AdPlaced
  deleteAdSource(where: AdSourceWhereUniqueInput!): AdSource
  deleteOutreachTarget(where: OutreachTargetWhereUniqueInput!): OutreachTarget
  deleteApplication(where: ApplicationWhereUniqueInput!): Application
  deleteOutreachCall(where: OutreachCallWhereUniqueInput!): OutreachCall
  deleteScreenCall(where: ScreenCallWhereUniqueInput!): ScreenCall
  deleteReference(where: ReferenceWhereUniqueInput!): Reference
  deleteBackground(where: BackgroundWhereUniqueInput!): Background
  deleteArticle(where: ArticleWhereUniqueInput!): Article
  deleteExpense(where: ExpenseWhereUniqueInput!): Expense
  deletePayment(where: PaymentWhereUniqueInput!): Payment
  deleteJob(where: JobWhereUniqueInput!): Job
  deleteUser(where: UserWhereUniqueInput!): User
  upsertClient(where: ClientWhereUniqueInput!, create: ClientCreateInput!, update: ClientUpdateInput!): Client!
  upsertAdPlaced(where: AdPlacedWhereUniqueInput!, create: AdPlacedCreateInput!, update: AdPlacedUpdateInput!): AdPlaced!
  upsertAdSource(where: AdSourceWhereUniqueInput!, create: AdSourceCreateInput!, update: AdSourceUpdateInput!): AdSource!
  upsertOutreachTarget(where: OutreachTargetWhereUniqueInput!, create: OutreachTargetCreateInput!, update: OutreachTargetUpdateInput!): OutreachTarget!
  upsertApplication(where: ApplicationWhereUniqueInput!, create: ApplicationCreateInput!, update: ApplicationUpdateInput!): Application!
  upsertOutreachCall(where: OutreachCallWhereUniqueInput!, create: OutreachCallCreateInput!, update: OutreachCallUpdateInput!): OutreachCall!
  upsertScreenCall(where: ScreenCallWhereUniqueInput!, create: ScreenCallCreateInput!, update: ScreenCallUpdateInput!): ScreenCall!
  upsertReference(where: ReferenceWhereUniqueInput!, create: ReferenceCreateInput!, update: ReferenceUpdateInput!): Reference!
  upsertBackground(where: BackgroundWhereUniqueInput!, create: BackgroundCreateInput!, update: BackgroundUpdateInput!): Background!
  upsertArticle(where: ArticleWhereUniqueInput!, create: ArticleCreateInput!, update: ArticleUpdateInput!): Article!
  upsertExpense(where: ExpenseWhereUniqueInput!, create: ExpenseCreateInput!, update: ExpenseUpdateInput!): Expense!
  upsertPayment(where: PaymentWhereUniqueInput!, create: PaymentCreateInput!, update: PaymentUpdateInput!): Payment!
  upsertJob(where: JobWhereUniqueInput!, create: JobCreateInput!, update: JobUpdateInput!): Job!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  updateManyClients(data: ClientUpdateInput!, where: ClientWhereInput): BatchPayload!
  updateManyAdPlaceds(data: AdPlacedUpdateInput!, where: AdPlacedWhereInput): BatchPayload!
  updateManyAdSources(data: AdSourceUpdateInput!, where: AdSourceWhereInput): BatchPayload!
  updateManyOutreachTargets(data: OutreachTargetUpdateInput!, where: OutreachTargetWhereInput): BatchPayload!
  updateManyApplications(data: ApplicationUpdateInput!, where: ApplicationWhereInput): BatchPayload!
  updateManyOutreachCalls(data: OutreachCallUpdateInput!, where: OutreachCallWhereInput): BatchPayload!
  updateManyScreenCalls(data: ScreenCallUpdateInput!, where: ScreenCallWhereInput): BatchPayload!
  updateManyReferences(data: ReferenceUpdateInput!, where: ReferenceWhereInput): BatchPayload!
  updateManyBackgrounds(data: BackgroundUpdateInput!, where: BackgroundWhereInput): BatchPayload!
  updateManyArticles(data: ArticleUpdateInput!, where: ArticleWhereInput): BatchPayload!
  updateManyExpenses(data: ExpenseUpdateInput!, where: ExpenseWhereInput): BatchPayload!
  updateManyPayments(data: PaymentUpdateInput!, where: PaymentWhereInput): BatchPayload!
  updateManyJobs(data: JobUpdateInput!, where: JobWhereInput): BatchPayload!
  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!
  deleteManyClients(where: ClientWhereInput): BatchPayload!
  deleteManyAdPlaceds(where: AdPlacedWhereInput): BatchPayload!
  deleteManyAdSources(where: AdSourceWhereInput): BatchPayload!
  deleteManyOutreachTargets(where: OutreachTargetWhereInput): BatchPayload!
  deleteManyApplications(where: ApplicationWhereInput): BatchPayload!
  deleteManyOutreachCalls(where: OutreachCallWhereInput): BatchPayload!
  deleteManyScreenCalls(where: ScreenCallWhereInput): BatchPayload!
  deleteManyReferences(where: ReferenceWhereInput): BatchPayload!
  deleteManyBackgrounds(where: BackgroundWhereInput): BatchPayload!
  deleteManyArticles(where: ArticleWhereInput): BatchPayload!
  deleteManyExpenses(where: ExpenseWhereInput): BatchPayload!
  deleteManyPayments(where: PaymentWhereInput): BatchPayload!
  deleteManyJobs(where: JobWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

type OutreachCall implements Node {
  id: ID!
  target(where: OutreachTargetWhereInput): OutreachTarget
  caller(where: UserWhereInput): User
  job(where: JobWhereInput): Job
  lm: DateTime
  call_date: DateTime
  notes: String
  referral: String
}

"""A connection to a list of items."""
type OutreachCallConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [OutreachCallEdge]!
  aggregate: AggregateOutreachCall!
}

input OutreachCallCreateInput {
  lm: DateTime
  call_date: DateTime
  notes: String
  referral: String
  target: OutreachTargetCreateOneWithoutCallsInput
  caller: UserCreateOneWithoutOutreach_callsInput
  job: JobCreateOneWithoutOutreach_callsInput
}

input OutreachCallCreateManyWithoutCallerInput {
  create: [OutreachCallCreateWithoutCallerInput!]
  connect: [OutreachCallWhereUniqueInput!]
}

input OutreachCallCreateManyWithoutJobInput {
  create: [OutreachCallCreateWithoutJobInput!]
  connect: [OutreachCallWhereUniqueInput!]
}

input OutreachCallCreateManyWithoutTargetInput {
  create: [OutreachCallCreateWithoutTargetInput!]
  connect: [OutreachCallWhereUniqueInput!]
}

input OutreachCallCreateWithoutCallerInput {
  lm: DateTime
  call_date: DateTime
  notes: String
  referral: String
  target: OutreachTargetCreateOneWithoutCallsInput
  job: JobCreateOneWithoutOutreach_callsInput
}

input OutreachCallCreateWithoutJobInput {
  lm: DateTime
  call_date: DateTime
  notes: String
  referral: String
  target: OutreachTargetCreateOneWithoutCallsInput
  caller: UserCreateOneWithoutOutreach_callsInput
}

input OutreachCallCreateWithoutTargetInput {
  lm: DateTime
  call_date: DateTime
  notes: String
  referral: String
  caller: UserCreateOneWithoutOutreach_callsInput
  job: JobCreateOneWithoutOutreach_callsInput
}

"""An edge in a connection."""
type OutreachCallEdge {
  """The item at the end of the edge."""
  node: OutreachCall!

  """A cursor for use in pagination."""
  cursor: String!
}

enum OutreachCallOrderByInput {
  id_ASC
  id_DESC
  lm_ASC
  lm_DESC
  call_date_ASC
  call_date_DESC
  notes_ASC
  notes_DESC
  referral_ASC
  referral_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type OutreachCallPreviousValues {
  id: ID!
  lm: DateTime
  call_date: DateTime
  notes: String
  referral: String
}

type OutreachCallSubscriptionPayload {
  mutation: MutationType!
  node: OutreachCall
  updatedFields: [String!]
  previousValues: OutreachCallPreviousValues
}

input OutreachCallSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [OutreachCallSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [OutreachCallSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [OutreachCallSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: OutreachCallWhereInput
}

input OutreachCallUpdateInput {
  lm: DateTime
  call_date: DateTime
  notes: String
  referral: String
  target: OutreachTargetUpdateOneWithoutCallsInput
  caller: UserUpdateOneWithoutOutreach_callsInput
  job: JobUpdateOneWithoutOutreach_callsInput
}

input OutreachCallUpdateManyWithoutCallerInput {
  create: [OutreachCallCreateWithoutCallerInput!]
  connect: [OutreachCallWhereUniqueInput!]
  disconnect: [OutreachCallWhereUniqueInput!]
  delete: [OutreachCallWhereUniqueInput!]
  update: [OutreachCallUpdateWithWhereUniqueWithoutCallerInput!]
  upsert: [OutreachCallUpsertWithWhereUniqueWithoutCallerInput!]
}

input OutreachCallUpdateManyWithoutJobInput {
  create: [OutreachCallCreateWithoutJobInput!]
  connect: [OutreachCallWhereUniqueInput!]
  disconnect: [OutreachCallWhereUniqueInput!]
  delete: [OutreachCallWhereUniqueInput!]
  update: [OutreachCallUpdateWithWhereUniqueWithoutJobInput!]
  upsert: [OutreachCallUpsertWithWhereUniqueWithoutJobInput!]
}

input OutreachCallUpdateManyWithoutTargetInput {
  create: [OutreachCallCreateWithoutTargetInput!]
  connect: [OutreachCallWhereUniqueInput!]
  disconnect: [OutreachCallWhereUniqueInput!]
  delete: [OutreachCallWhereUniqueInput!]
  update: [OutreachCallUpdateWithWhereUniqueWithoutTargetInput!]
  upsert: [OutreachCallUpsertWithWhereUniqueWithoutTargetInput!]
}

input OutreachCallUpdateWithoutCallerDataInput {
  lm: DateTime
  call_date: DateTime
  notes: String
  referral: String
  target: OutreachTargetUpdateOneWithoutCallsInput
  job: JobUpdateOneWithoutOutreach_callsInput
}

input OutreachCallUpdateWithoutJobDataInput {
  lm: DateTime
  call_date: DateTime
  notes: String
  referral: String
  target: OutreachTargetUpdateOneWithoutCallsInput
  caller: UserUpdateOneWithoutOutreach_callsInput
}

input OutreachCallUpdateWithoutTargetDataInput {
  lm: DateTime
  call_date: DateTime
  notes: String
  referral: String
  caller: UserUpdateOneWithoutOutreach_callsInput
  job: JobUpdateOneWithoutOutreach_callsInput
}

input OutreachCallUpdateWithWhereUniqueWithoutCallerInput {
  where: OutreachCallWhereUniqueInput!
  data: OutreachCallUpdateWithoutCallerDataInput!
}

input OutreachCallUpdateWithWhereUniqueWithoutJobInput {
  where: OutreachCallWhereUniqueInput!
  data: OutreachCallUpdateWithoutJobDataInput!
}

input OutreachCallUpdateWithWhereUniqueWithoutTargetInput {
  where: OutreachCallWhereUniqueInput!
  data: OutreachCallUpdateWithoutTargetDataInput!
}

input OutreachCallUpsertWithWhereUniqueWithoutCallerInput {
  where: OutreachCallWhereUniqueInput!
  update: OutreachCallUpdateWithoutCallerDataInput!
  create: OutreachCallCreateWithoutCallerInput!
}

input OutreachCallUpsertWithWhereUniqueWithoutJobInput {
  where: OutreachCallWhereUniqueInput!
  update: OutreachCallUpdateWithoutJobDataInput!
  create: OutreachCallCreateWithoutJobInput!
}

input OutreachCallUpsertWithWhereUniqueWithoutTargetInput {
  where: OutreachCallWhereUniqueInput!
  update: OutreachCallUpdateWithoutTargetDataInput!
  create: OutreachCallCreateWithoutTargetInput!
}

input OutreachCallWhereInput {
  """Logical AND on all given filters."""
  AND: [OutreachCallWhereInput!]

  """Logical OR on all given filters."""
  OR: [OutreachCallWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [OutreachCallWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  lm: DateTime

  """All values that are not equal to given value."""
  lm_not: DateTime

  """All values that are contained in given list."""
  lm_in: [DateTime!]

  """All values that are not contained in given list."""
  lm_not_in: [DateTime!]

  """All values less than the given value."""
  lm_lt: DateTime

  """All values less than or equal the given value."""
  lm_lte: DateTime

  """All values greater than the given value."""
  lm_gt: DateTime

  """All values greater than or equal the given value."""
  lm_gte: DateTime
  call_date: DateTime

  """All values that are not equal to given value."""
  call_date_not: DateTime

  """All values that are contained in given list."""
  call_date_in: [DateTime!]

  """All values that are not contained in given list."""
  call_date_not_in: [DateTime!]

  """All values less than the given value."""
  call_date_lt: DateTime

  """All values less than or equal the given value."""
  call_date_lte: DateTime

  """All values greater than the given value."""
  call_date_gt: DateTime

  """All values greater than or equal the given value."""
  call_date_gte: DateTime
  notes: String

  """All values that are not equal to given value."""
  notes_not: String

  """All values that are contained in given list."""
  notes_in: [String!]

  """All values that are not contained in given list."""
  notes_not_in: [String!]

  """All values less than the given value."""
  notes_lt: String

  """All values less than or equal the given value."""
  notes_lte: String

  """All values greater than the given value."""
  notes_gt: String

  """All values greater than or equal the given value."""
  notes_gte: String

  """All values containing the given string."""
  notes_contains: String

  """All values not containing the given string."""
  notes_not_contains: String

  """All values starting with the given string."""
  notes_starts_with: String

  """All values not starting with the given string."""
  notes_not_starts_with: String

  """All values ending with the given string."""
  notes_ends_with: String

  """All values not ending with the given string."""
  notes_not_ends_with: String
  referral: String

  """All values that are not equal to given value."""
  referral_not: String

  """All values that are contained in given list."""
  referral_in: [String!]

  """All values that are not contained in given list."""
  referral_not_in: [String!]

  """All values less than the given value."""
  referral_lt: String

  """All values less than or equal the given value."""
  referral_lte: String

  """All values greater than the given value."""
  referral_gt: String

  """All values greater than or equal the given value."""
  referral_gte: String

  """All values containing the given string."""
  referral_contains: String

  """All values not containing the given string."""
  referral_not_contains: String

  """All values starting with the given string."""
  referral_starts_with: String

  """All values not starting with the given string."""
  referral_not_starts_with: String

  """All values ending with the given string."""
  referral_ends_with: String

  """All values not ending with the given string."""
  referral_not_ends_with: String
  target: OutreachTargetWhereInput
  caller: UserWhereInput
  job: JobWhereInput
}

input OutreachCallWhereUniqueInput {
  id: ID
}

type OutreachTarget implements Node {
  id: ID!
  addedBy(where: UserWhereInput): User!
  userId(where: UserWhereInput): User
  added: DateTime
  firstName: String
  lastName: String
  organization: String
  title: String
  address: String
  city: String
  state: String
  phone: String
  email: String
  calls(where: OutreachCallWhereInput, orderBy: OutreachCallOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OutreachCall!]
  jobs(where: JobWhereInput, orderBy: JobOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Job!]
}

"""A connection to a list of items."""
type OutreachTargetConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [OutreachTargetEdge]!
  aggregate: AggregateOutreachTarget!
}

input OutreachTargetCreateInput {
  added: DateTime
  firstName: String
  lastName: String
  organization: String
  title: String
  address: String
  city: String
  state: String
  phone: String
  email: String
  addedBy: UserCreateOneWithoutOutreach_targets_addedInput!
  userId: UserCreateOneWithoutOutreach_targetInput
  calls: OutreachCallCreateManyWithoutTargetInput
  jobs: JobCreateManyWithoutTargetsInput
}

input OutreachTargetCreateManyWithoutAddedByInput {
  create: [OutreachTargetCreateWithoutAddedByInput!]
  connect: [OutreachTargetWhereUniqueInput!]
}

input OutreachTargetCreateManyWithoutJobsInput {
  create: [OutreachTargetCreateWithoutJobsInput!]
  connect: [OutreachTargetWhereUniqueInput!]
}

input OutreachTargetCreateOneWithoutCallsInput {
  create: OutreachTargetCreateWithoutCallsInput
  connect: OutreachTargetWhereUniqueInput
}

input OutreachTargetCreateOneWithoutUserIdInput {
  create: OutreachTargetCreateWithoutUserIdInput
  connect: OutreachTargetWhereUniqueInput
}

input OutreachTargetCreateWithoutAddedByInput {
  added: DateTime
  firstName: String
  lastName: String
  organization: String
  title: String
  address: String
  city: String
  state: String
  phone: String
  email: String
  userId: UserCreateOneWithoutOutreach_targetInput
  calls: OutreachCallCreateManyWithoutTargetInput
  jobs: JobCreateManyWithoutTargetsInput
}

input OutreachTargetCreateWithoutCallsInput {
  added: DateTime
  firstName: String
  lastName: String
  organization: String
  title: String
  address: String
  city: String
  state: String
  phone: String
  email: String
  addedBy: UserCreateOneWithoutOutreach_targets_addedInput!
  userId: UserCreateOneWithoutOutreach_targetInput
  jobs: JobCreateManyWithoutTargetsInput
}

input OutreachTargetCreateWithoutJobsInput {
  added: DateTime
  firstName: String
  lastName: String
  organization: String
  title: String
  address: String
  city: String
  state: String
  phone: String
  email: String
  addedBy: UserCreateOneWithoutOutreach_targets_addedInput!
  userId: UserCreateOneWithoutOutreach_targetInput
  calls: OutreachCallCreateManyWithoutTargetInput
}

input OutreachTargetCreateWithoutUserIdInput {
  added: DateTime
  firstName: String
  lastName: String
  organization: String
  title: String
  address: String
  city: String
  state: String
  phone: String
  email: String
  addedBy: UserCreateOneWithoutOutreach_targets_addedInput!
  calls: OutreachCallCreateManyWithoutTargetInput
  jobs: JobCreateManyWithoutTargetsInput
}

"""An edge in a connection."""
type OutreachTargetEdge {
  """The item at the end of the edge."""
  node: OutreachTarget!

  """A cursor for use in pagination."""
  cursor: String!
}

enum OutreachTargetOrderByInput {
  id_ASC
  id_DESC
  added_ASC
  added_DESC
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  organization_ASC
  organization_DESC
  title_ASC
  title_DESC
  address_ASC
  address_DESC
  city_ASC
  city_DESC
  state_ASC
  state_DESC
  phone_ASC
  phone_DESC
  email_ASC
  email_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type OutreachTargetPreviousValues {
  id: ID!
  added: DateTime
  firstName: String
  lastName: String
  organization: String
  title: String
  address: String
  city: String
  state: String
  phone: String
  email: String
}

type OutreachTargetSubscriptionPayload {
  mutation: MutationType!
  node: OutreachTarget
  updatedFields: [String!]
  previousValues: OutreachTargetPreviousValues
}

input OutreachTargetSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [OutreachTargetSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [OutreachTargetSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [OutreachTargetSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: OutreachTargetWhereInput
}

input OutreachTargetUpdateInput {
  added: DateTime
  firstName: String
  lastName: String
  organization: String
  title: String
  address: String
  city: String
  state: String
  phone: String
  email: String
  addedBy: UserUpdateOneWithoutOutreach_targets_addedInput
  userId: UserUpdateOneWithoutOutreach_targetInput
  calls: OutreachCallUpdateManyWithoutTargetInput
  jobs: JobUpdateManyWithoutTargetsInput
}

input OutreachTargetUpdateManyWithoutAddedByInput {
  create: [OutreachTargetCreateWithoutAddedByInput!]
  connect: [OutreachTargetWhereUniqueInput!]
  disconnect: [OutreachTargetWhereUniqueInput!]
  delete: [OutreachTargetWhereUniqueInput!]
  update: [OutreachTargetUpdateWithWhereUniqueWithoutAddedByInput!]
  upsert: [OutreachTargetUpsertWithWhereUniqueWithoutAddedByInput!]
}

input OutreachTargetUpdateManyWithoutJobsInput {
  create: [OutreachTargetCreateWithoutJobsInput!]
  connect: [OutreachTargetWhereUniqueInput!]
  disconnect: [OutreachTargetWhereUniqueInput!]
  delete: [OutreachTargetWhereUniqueInput!]
  update: [OutreachTargetUpdateWithWhereUniqueWithoutJobsInput!]
  upsert: [OutreachTargetUpsertWithWhereUniqueWithoutJobsInput!]
}

input OutreachTargetUpdateOneWithoutCallsInput {
  create: OutreachTargetCreateWithoutCallsInput
  connect: OutreachTargetWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: OutreachTargetUpdateWithoutCallsDataInput
  upsert: OutreachTargetUpsertWithoutCallsInput
}

input OutreachTargetUpdateOneWithoutUserIdInput {
  create: OutreachTargetCreateWithoutUserIdInput
  connect: OutreachTargetWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: OutreachTargetUpdateWithoutUserIdDataInput
  upsert: OutreachTargetUpsertWithoutUserIdInput
}

input OutreachTargetUpdateWithoutAddedByDataInput {
  added: DateTime
  firstName: String
  lastName: String
  organization: String
  title: String
  address: String
  city: String
  state: String
  phone: String
  email: String
  userId: UserUpdateOneWithoutOutreach_targetInput
  calls: OutreachCallUpdateManyWithoutTargetInput
  jobs: JobUpdateManyWithoutTargetsInput
}

input OutreachTargetUpdateWithoutCallsDataInput {
  added: DateTime
  firstName: String
  lastName: String
  organization: String
  title: String
  address: String
  city: String
  state: String
  phone: String
  email: String
  addedBy: UserUpdateOneWithoutOutreach_targets_addedInput
  userId: UserUpdateOneWithoutOutreach_targetInput
  jobs: JobUpdateManyWithoutTargetsInput
}

input OutreachTargetUpdateWithoutJobsDataInput {
  added: DateTime
  firstName: String
  lastName: String
  organization: String
  title: String
  address: String
  city: String
  state: String
  phone: String
  email: String
  addedBy: UserUpdateOneWithoutOutreach_targets_addedInput
  userId: UserUpdateOneWithoutOutreach_targetInput
  calls: OutreachCallUpdateManyWithoutTargetInput
}

input OutreachTargetUpdateWithoutUserIdDataInput {
  added: DateTime
  firstName: String
  lastName: String
  organization: String
  title: String
  address: String
  city: String
  state: String
  phone: String
  email: String
  addedBy: UserUpdateOneWithoutOutreach_targets_addedInput
  calls: OutreachCallUpdateManyWithoutTargetInput
  jobs: JobUpdateManyWithoutTargetsInput
}

input OutreachTargetUpdateWithWhereUniqueWithoutAddedByInput {
  where: OutreachTargetWhereUniqueInput!
  data: OutreachTargetUpdateWithoutAddedByDataInput!
}

input OutreachTargetUpdateWithWhereUniqueWithoutJobsInput {
  where: OutreachTargetWhereUniqueInput!
  data: OutreachTargetUpdateWithoutJobsDataInput!
}

input OutreachTargetUpsertWithoutCallsInput {
  update: OutreachTargetUpdateWithoutCallsDataInput!
  create: OutreachTargetCreateWithoutCallsInput!
}

input OutreachTargetUpsertWithoutUserIdInput {
  update: OutreachTargetUpdateWithoutUserIdDataInput!
  create: OutreachTargetCreateWithoutUserIdInput!
}

input OutreachTargetUpsertWithWhereUniqueWithoutAddedByInput {
  where: OutreachTargetWhereUniqueInput!
  update: OutreachTargetUpdateWithoutAddedByDataInput!
  create: OutreachTargetCreateWithoutAddedByInput!
}

input OutreachTargetUpsertWithWhereUniqueWithoutJobsInput {
  where: OutreachTargetWhereUniqueInput!
  update: OutreachTargetUpdateWithoutJobsDataInput!
  create: OutreachTargetCreateWithoutJobsInput!
}

input OutreachTargetWhereInput {
  """Logical AND on all given filters."""
  AND: [OutreachTargetWhereInput!]

  """Logical OR on all given filters."""
  OR: [OutreachTargetWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [OutreachTargetWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  added: DateTime

  """All values that are not equal to given value."""
  added_not: DateTime

  """All values that are contained in given list."""
  added_in: [DateTime!]

  """All values that are not contained in given list."""
  added_not_in: [DateTime!]

  """All values less than the given value."""
  added_lt: DateTime

  """All values less than or equal the given value."""
  added_lte: DateTime

  """All values greater than the given value."""
  added_gt: DateTime

  """All values greater than or equal the given value."""
  added_gte: DateTime
  firstName: String

  """All values that are not equal to given value."""
  firstName_not: String

  """All values that are contained in given list."""
  firstName_in: [String!]

  """All values that are not contained in given list."""
  firstName_not_in: [String!]

  """All values less than the given value."""
  firstName_lt: String

  """All values less than or equal the given value."""
  firstName_lte: String

  """All values greater than the given value."""
  firstName_gt: String

  """All values greater than or equal the given value."""
  firstName_gte: String

  """All values containing the given string."""
  firstName_contains: String

  """All values not containing the given string."""
  firstName_not_contains: String

  """All values starting with the given string."""
  firstName_starts_with: String

  """All values not starting with the given string."""
  firstName_not_starts_with: String

  """All values ending with the given string."""
  firstName_ends_with: String

  """All values not ending with the given string."""
  firstName_not_ends_with: String
  lastName: String

  """All values that are not equal to given value."""
  lastName_not: String

  """All values that are contained in given list."""
  lastName_in: [String!]

  """All values that are not contained in given list."""
  lastName_not_in: [String!]

  """All values less than the given value."""
  lastName_lt: String

  """All values less than or equal the given value."""
  lastName_lte: String

  """All values greater than the given value."""
  lastName_gt: String

  """All values greater than or equal the given value."""
  lastName_gte: String

  """All values containing the given string."""
  lastName_contains: String

  """All values not containing the given string."""
  lastName_not_contains: String

  """All values starting with the given string."""
  lastName_starts_with: String

  """All values not starting with the given string."""
  lastName_not_starts_with: String

  """All values ending with the given string."""
  lastName_ends_with: String

  """All values not ending with the given string."""
  lastName_not_ends_with: String
  organization: String

  """All values that are not equal to given value."""
  organization_not: String

  """All values that are contained in given list."""
  organization_in: [String!]

  """All values that are not contained in given list."""
  organization_not_in: [String!]

  """All values less than the given value."""
  organization_lt: String

  """All values less than or equal the given value."""
  organization_lte: String

  """All values greater than the given value."""
  organization_gt: String

  """All values greater than or equal the given value."""
  organization_gte: String

  """All values containing the given string."""
  organization_contains: String

  """All values not containing the given string."""
  organization_not_contains: String

  """All values starting with the given string."""
  organization_starts_with: String

  """All values not starting with the given string."""
  organization_not_starts_with: String

  """All values ending with the given string."""
  organization_ends_with: String

  """All values not ending with the given string."""
  organization_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  address: String

  """All values that are not equal to given value."""
  address_not: String

  """All values that are contained in given list."""
  address_in: [String!]

  """All values that are not contained in given list."""
  address_not_in: [String!]

  """All values less than the given value."""
  address_lt: String

  """All values less than or equal the given value."""
  address_lte: String

  """All values greater than the given value."""
  address_gt: String

  """All values greater than or equal the given value."""
  address_gte: String

  """All values containing the given string."""
  address_contains: String

  """All values not containing the given string."""
  address_not_contains: String

  """All values starting with the given string."""
  address_starts_with: String

  """All values not starting with the given string."""
  address_not_starts_with: String

  """All values ending with the given string."""
  address_ends_with: String

  """All values not ending with the given string."""
  address_not_ends_with: String
  city: String

  """All values that are not equal to given value."""
  city_not: String

  """All values that are contained in given list."""
  city_in: [String!]

  """All values that are not contained in given list."""
  city_not_in: [String!]

  """All values less than the given value."""
  city_lt: String

  """All values less than or equal the given value."""
  city_lte: String

  """All values greater than the given value."""
  city_gt: String

  """All values greater than or equal the given value."""
  city_gte: String

  """All values containing the given string."""
  city_contains: String

  """All values not containing the given string."""
  city_not_contains: String

  """All values starting with the given string."""
  city_starts_with: String

  """All values not starting with the given string."""
  city_not_starts_with: String

  """All values ending with the given string."""
  city_ends_with: String

  """All values not ending with the given string."""
  city_not_ends_with: String
  state: String

  """All values that are not equal to given value."""
  state_not: String

  """All values that are contained in given list."""
  state_in: [String!]

  """All values that are not contained in given list."""
  state_not_in: [String!]

  """All values less than the given value."""
  state_lt: String

  """All values less than or equal the given value."""
  state_lte: String

  """All values greater than the given value."""
  state_gt: String

  """All values greater than or equal the given value."""
  state_gte: String

  """All values containing the given string."""
  state_contains: String

  """All values not containing the given string."""
  state_not_contains: String

  """All values starting with the given string."""
  state_starts_with: String

  """All values not starting with the given string."""
  state_not_starts_with: String

  """All values ending with the given string."""
  state_ends_with: String

  """All values not ending with the given string."""
  state_not_ends_with: String
  phone: String

  """All values that are not equal to given value."""
  phone_not: String

  """All values that are contained in given list."""
  phone_in: [String!]

  """All values that are not contained in given list."""
  phone_not_in: [String!]

  """All values less than the given value."""
  phone_lt: String

  """All values less than or equal the given value."""
  phone_lte: String

  """All values greater than the given value."""
  phone_gt: String

  """All values greater than or equal the given value."""
  phone_gte: String

  """All values containing the given string."""
  phone_contains: String

  """All values not containing the given string."""
  phone_not_contains: String

  """All values starting with the given string."""
  phone_starts_with: String

  """All values not starting with the given string."""
  phone_not_starts_with: String

  """All values ending with the given string."""
  phone_ends_with: String

  """All values not ending with the given string."""
  phone_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  addedBy: UserWhereInput
  userId: UserWhereInput
  calls_every: OutreachCallWhereInput
  calls_some: OutreachCallWhereInput
  calls_none: OutreachCallWhereInput
  jobs_every: JobWhereInput
  jobs_some: JobWhereInput
  jobs_none: JobWhereInput
}

input OutreachTargetWhereUniqueInput {
  id: ID
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Payment implements Node {
  id: ID!
  job(where: JobWhereInput): Job
  paidBy(where: UserWhereInput): User
  billDate: DateTime
  paidDate: DateTime
  phase: String
  amount: Float
}

"""A connection to a list of items."""
type PaymentConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PaymentEdge]!
  aggregate: AggregatePayment!
}

input PaymentCreateInput {
  billDate: DateTime
  paidDate: DateTime
  phase: String
  amount: Float
  job: JobCreateOneWithoutPaymentsInput
  paidBy: UserCreateOneInput
}

input PaymentCreateManyWithoutJobInput {
  create: [PaymentCreateWithoutJobInput!]
  connect: [PaymentWhereUniqueInput!]
}

input PaymentCreateWithoutJobInput {
  billDate: DateTime
  paidDate: DateTime
  phase: String
  amount: Float
  paidBy: UserCreateOneInput
}

"""An edge in a connection."""
type PaymentEdge {
  """The item at the end of the edge."""
  node: Payment!

  """A cursor for use in pagination."""
  cursor: String!
}

enum PaymentOrderByInput {
  id_ASC
  id_DESC
  billDate_ASC
  billDate_DESC
  paidDate_ASC
  paidDate_DESC
  phase_ASC
  phase_DESC
  amount_ASC
  amount_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type PaymentPreviousValues {
  id: ID!
  billDate: DateTime
  paidDate: DateTime
  phase: String
  amount: Float
}

type PaymentSubscriptionPayload {
  mutation: MutationType!
  node: Payment
  updatedFields: [String!]
  previousValues: PaymentPreviousValues
}

input PaymentSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PaymentSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PaymentSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PaymentSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PaymentWhereInput
}

input PaymentUpdateInput {
  billDate: DateTime
  paidDate: DateTime
  phase: String
  amount: Float
  job: JobUpdateOneWithoutPaymentsInput
  paidBy: UserUpdateOneInput
}

input PaymentUpdateManyWithoutJobInput {
  create: [PaymentCreateWithoutJobInput!]
  connect: [PaymentWhereUniqueInput!]
  disconnect: [PaymentWhereUniqueInput!]
  delete: [PaymentWhereUniqueInput!]
  update: [PaymentUpdateWithWhereUniqueWithoutJobInput!]
  upsert: [PaymentUpsertWithWhereUniqueWithoutJobInput!]
}

input PaymentUpdateWithoutJobDataInput {
  billDate: DateTime
  paidDate: DateTime
  phase: String
  amount: Float
  paidBy: UserUpdateOneInput
}

input PaymentUpdateWithWhereUniqueWithoutJobInput {
  where: PaymentWhereUniqueInput!
  data: PaymentUpdateWithoutJobDataInput!
}

input PaymentUpsertWithWhereUniqueWithoutJobInput {
  where: PaymentWhereUniqueInput!
  update: PaymentUpdateWithoutJobDataInput!
  create: PaymentCreateWithoutJobInput!
}

input PaymentWhereInput {
  """Logical AND on all given filters."""
  AND: [PaymentWhereInput!]

  """Logical OR on all given filters."""
  OR: [PaymentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PaymentWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  billDate: DateTime

  """All values that are not equal to given value."""
  billDate_not: DateTime

  """All values that are contained in given list."""
  billDate_in: [DateTime!]

  """All values that are not contained in given list."""
  billDate_not_in: [DateTime!]

  """All values less than the given value."""
  billDate_lt: DateTime

  """All values less than or equal the given value."""
  billDate_lte: DateTime

  """All values greater than the given value."""
  billDate_gt: DateTime

  """All values greater than or equal the given value."""
  billDate_gte: DateTime
  paidDate: DateTime

  """All values that are not equal to given value."""
  paidDate_not: DateTime

  """All values that are contained in given list."""
  paidDate_in: [DateTime!]

  """All values that are not contained in given list."""
  paidDate_not_in: [DateTime!]

  """All values less than the given value."""
  paidDate_lt: DateTime

  """All values less than or equal the given value."""
  paidDate_lte: DateTime

  """All values greater than the given value."""
  paidDate_gt: DateTime

  """All values greater than or equal the given value."""
  paidDate_gte: DateTime
  phase: String

  """All values that are not equal to given value."""
  phase_not: String

  """All values that are contained in given list."""
  phase_in: [String!]

  """All values that are not contained in given list."""
  phase_not_in: [String!]

  """All values less than the given value."""
  phase_lt: String

  """All values less than or equal the given value."""
  phase_lte: String

  """All values greater than the given value."""
  phase_gt: String

  """All values greater than or equal the given value."""
  phase_gte: String

  """All values containing the given string."""
  phase_contains: String

  """All values not containing the given string."""
  phase_not_contains: String

  """All values starting with the given string."""
  phase_starts_with: String

  """All values not starting with the given string."""
  phase_not_starts_with: String

  """All values ending with the given string."""
  phase_ends_with: String

  """All values not ending with the given string."""
  phase_not_ends_with: String
  amount: Float

  """All values that are not equal to given value."""
  amount_not: Float

  """All values that are contained in given list."""
  amount_in: [Float!]

  """All values that are not contained in given list."""
  amount_not_in: [Float!]

  """All values less than the given value."""
  amount_lt: Float

  """All values less than or equal the given value."""
  amount_lte: Float

  """All values greater than the given value."""
  amount_gt: Float

  """All values greater than or equal the given value."""
  amount_gte: Float
  job: JobWhereInput
  paidBy: UserWhereInput
}

input PaymentWhereUniqueInput {
  id: ID
}

type Query {
  clients(where: ClientWhereInput, orderBy: ClientOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Client]!
  adPlaceds(where: AdPlacedWhereInput, orderBy: AdPlacedOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AdPlaced]!
  adSources(where: AdSourceWhereInput, orderBy: AdSourceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AdSource]!
  outreachTargets(where: OutreachTargetWhereInput, orderBy: OutreachTargetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OutreachTarget]!
  applications(where: ApplicationWhereInput, orderBy: ApplicationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Application]!
  outreachCalls(where: OutreachCallWhereInput, orderBy: OutreachCallOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OutreachCall]!
  screenCalls(where: ScreenCallWhereInput, orderBy: ScreenCallOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ScreenCall]!
  references(where: ReferenceWhereInput, orderBy: ReferenceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Reference]!
  backgrounds(where: BackgroundWhereInput, orderBy: BackgroundOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Background]!
  articles(where: ArticleWhereInput, orderBy: ArticleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Article]!
  expenses(where: ExpenseWhereInput, orderBy: ExpenseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Expense]!
  payments(where: PaymentWhereInput, orderBy: PaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Payment]!
  jobs(where: JobWhereInput, orderBy: JobOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Job]!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  client(where: ClientWhereUniqueInput!): Client
  adPlaced(where: AdPlacedWhereUniqueInput!): AdPlaced
  adSource(where: AdSourceWhereUniqueInput!): AdSource
  outreachTarget(where: OutreachTargetWhereUniqueInput!): OutreachTarget
  application(where: ApplicationWhereUniqueInput!): Application
  outreachCall(where: OutreachCallWhereUniqueInput!): OutreachCall
  screenCall(where: ScreenCallWhereUniqueInput!): ScreenCall
  reference(where: ReferenceWhereUniqueInput!): Reference
  background(where: BackgroundWhereUniqueInput!): Background
  article(where: ArticleWhereUniqueInput!): Article
  expense(where: ExpenseWhereUniqueInput!): Expense
  payment(where: PaymentWhereUniqueInput!): Payment
  job(where: JobWhereUniqueInput!): Job
  user(where: UserWhereUniqueInput!): User
  clientsConnection(where: ClientWhereInput, orderBy: ClientOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ClientConnection!
  adPlacedsConnection(where: AdPlacedWhereInput, orderBy: AdPlacedOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AdPlacedConnection!
  adSourcesConnection(where: AdSourceWhereInput, orderBy: AdSourceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AdSourceConnection!
  outreachTargetsConnection(where: OutreachTargetWhereInput, orderBy: OutreachTargetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OutreachTargetConnection!
  applicationsConnection(where: ApplicationWhereInput, orderBy: ApplicationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ApplicationConnection!
  outreachCallsConnection(where: OutreachCallWhereInput, orderBy: OutreachCallOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OutreachCallConnection!
  screenCallsConnection(where: ScreenCallWhereInput, orderBy: ScreenCallOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ScreenCallConnection!
  referencesConnection(where: ReferenceWhereInput, orderBy: ReferenceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ReferenceConnection!
  backgroundsConnection(where: BackgroundWhereInput, orderBy: BackgroundOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BackgroundConnection!
  articlesConnection(where: ArticleWhereInput, orderBy: ArticleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ArticleConnection!
  expensesConnection(where: ExpenseWhereInput, orderBy: ExpenseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ExpenseConnection!
  paymentsConnection(where: PaymentWhereInput, orderBy: PaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PaymentConnection!
  jobsConnection(where: JobWhereInput, orderBy: JobOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): JobConnection!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Reference implements Node {
  id: ID!
  job(where: JobWhereInput): Job
  applicant(where: UserWhereInput): User
  application(where: ApplicationWhereInput): Application
  caller(where: UserWhereInput): User
  callDate: DateTime
  notes: String
  lm: DateTime
  firstName: String
  lastName: String
  title: String
  relation: String
  email: String
  phone: String
}

"""A connection to a list of items."""
type ReferenceConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ReferenceEdge]!
  aggregate: AggregateReference!
}

input ReferenceCreateInput {
  callDate: DateTime
  notes: String
  lm: DateTime
  firstName: String
  lastName: String
  title: String
  relation: String
  email: String
  phone: String
  job: JobCreateOneInput
  applicant: UserCreateOneWithoutReferencesInput
  application: ApplicationCreateOneWithoutReferencesInput
  caller: UserCreateOneWithoutReference_callsInput
}

input ReferenceCreateManyWithoutApplicantInput {
  create: [ReferenceCreateWithoutApplicantInput!]
  connect: [ReferenceWhereUniqueInput!]
}

input ReferenceCreateManyWithoutApplicationInput {
  create: [ReferenceCreateWithoutApplicationInput!]
  connect: [ReferenceWhereUniqueInput!]
}

input ReferenceCreateManyWithoutCallerInput {
  create: [ReferenceCreateWithoutCallerInput!]
  connect: [ReferenceWhereUniqueInput!]
}

input ReferenceCreateWithoutApplicantInput {
  callDate: DateTime
  notes: String
  lm: DateTime
  firstName: String
  lastName: String
  title: String
  relation: String
  email: String
  phone: String
  job: JobCreateOneInput
  application: ApplicationCreateOneWithoutReferencesInput
  caller: UserCreateOneWithoutReference_callsInput
}

input ReferenceCreateWithoutApplicationInput {
  callDate: DateTime
  notes: String
  lm: DateTime
  firstName: String
  lastName: String
  title: String
  relation: String
  email: String
  phone: String
  job: JobCreateOneInput
  applicant: UserCreateOneWithoutReferencesInput
  caller: UserCreateOneWithoutReference_callsInput
}

input ReferenceCreateWithoutCallerInput {
  callDate: DateTime
  notes: String
  lm: DateTime
  firstName: String
  lastName: String
  title: String
  relation: String
  email: String
  phone: String
  job: JobCreateOneInput
  applicant: UserCreateOneWithoutReferencesInput
  application: ApplicationCreateOneWithoutReferencesInput
}

"""An edge in a connection."""
type ReferenceEdge {
  """The item at the end of the edge."""
  node: Reference!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ReferenceOrderByInput {
  id_ASC
  id_DESC
  callDate_ASC
  callDate_DESC
  notes_ASC
  notes_DESC
  lm_ASC
  lm_DESC
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  title_ASC
  title_DESC
  relation_ASC
  relation_DESC
  email_ASC
  email_DESC
  phone_ASC
  phone_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ReferencePreviousValues {
  id: ID!
  callDate: DateTime
  notes: String
  lm: DateTime
  firstName: String
  lastName: String
  title: String
  relation: String
  email: String
  phone: String
}

type ReferenceSubscriptionPayload {
  mutation: MutationType!
  node: Reference
  updatedFields: [String!]
  previousValues: ReferencePreviousValues
}

input ReferenceSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ReferenceSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ReferenceSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ReferenceSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ReferenceWhereInput
}

input ReferenceUpdateInput {
  callDate: DateTime
  notes: String
  lm: DateTime
  firstName: String
  lastName: String
  title: String
  relation: String
  email: String
  phone: String
  job: JobUpdateOneInput
  applicant: UserUpdateOneWithoutReferencesInput
  application: ApplicationUpdateOneWithoutReferencesInput
  caller: UserUpdateOneWithoutReference_callsInput
}

input ReferenceUpdateManyWithoutApplicantInput {
  create: [ReferenceCreateWithoutApplicantInput!]
  connect: [ReferenceWhereUniqueInput!]
  disconnect: [ReferenceWhereUniqueInput!]
  delete: [ReferenceWhereUniqueInput!]
  update: [ReferenceUpdateWithWhereUniqueWithoutApplicantInput!]
  upsert: [ReferenceUpsertWithWhereUniqueWithoutApplicantInput!]
}

input ReferenceUpdateManyWithoutApplicationInput {
  create: [ReferenceCreateWithoutApplicationInput!]
  connect: [ReferenceWhereUniqueInput!]
  disconnect: [ReferenceWhereUniqueInput!]
  delete: [ReferenceWhereUniqueInput!]
  update: [ReferenceUpdateWithWhereUniqueWithoutApplicationInput!]
  upsert: [ReferenceUpsertWithWhereUniqueWithoutApplicationInput!]
}

input ReferenceUpdateManyWithoutCallerInput {
  create: [ReferenceCreateWithoutCallerInput!]
  connect: [ReferenceWhereUniqueInput!]
  disconnect: [ReferenceWhereUniqueInput!]
  delete: [ReferenceWhereUniqueInput!]
  update: [ReferenceUpdateWithWhereUniqueWithoutCallerInput!]
  upsert: [ReferenceUpsertWithWhereUniqueWithoutCallerInput!]
}

input ReferenceUpdateWithoutApplicantDataInput {
  callDate: DateTime
  notes: String
  lm: DateTime
  firstName: String
  lastName: String
  title: String
  relation: String
  email: String
  phone: String
  job: JobUpdateOneInput
  application: ApplicationUpdateOneWithoutReferencesInput
  caller: UserUpdateOneWithoutReference_callsInput
}

input ReferenceUpdateWithoutApplicationDataInput {
  callDate: DateTime
  notes: String
  lm: DateTime
  firstName: String
  lastName: String
  title: String
  relation: String
  email: String
  phone: String
  job: JobUpdateOneInput
  applicant: UserUpdateOneWithoutReferencesInput
  caller: UserUpdateOneWithoutReference_callsInput
}

input ReferenceUpdateWithoutCallerDataInput {
  callDate: DateTime
  notes: String
  lm: DateTime
  firstName: String
  lastName: String
  title: String
  relation: String
  email: String
  phone: String
  job: JobUpdateOneInput
  applicant: UserUpdateOneWithoutReferencesInput
  application: ApplicationUpdateOneWithoutReferencesInput
}

input ReferenceUpdateWithWhereUniqueWithoutApplicantInput {
  where: ReferenceWhereUniqueInput!
  data: ReferenceUpdateWithoutApplicantDataInput!
}

input ReferenceUpdateWithWhereUniqueWithoutApplicationInput {
  where: ReferenceWhereUniqueInput!
  data: ReferenceUpdateWithoutApplicationDataInput!
}

input ReferenceUpdateWithWhereUniqueWithoutCallerInput {
  where: ReferenceWhereUniqueInput!
  data: ReferenceUpdateWithoutCallerDataInput!
}

input ReferenceUpsertWithWhereUniqueWithoutApplicantInput {
  where: ReferenceWhereUniqueInput!
  update: ReferenceUpdateWithoutApplicantDataInput!
  create: ReferenceCreateWithoutApplicantInput!
}

input ReferenceUpsertWithWhereUniqueWithoutApplicationInput {
  where: ReferenceWhereUniqueInput!
  update: ReferenceUpdateWithoutApplicationDataInput!
  create: ReferenceCreateWithoutApplicationInput!
}

input ReferenceUpsertWithWhereUniqueWithoutCallerInput {
  where: ReferenceWhereUniqueInput!
  update: ReferenceUpdateWithoutCallerDataInput!
  create: ReferenceCreateWithoutCallerInput!
}

input ReferenceWhereInput {
  """Logical AND on all given filters."""
  AND: [ReferenceWhereInput!]

  """Logical OR on all given filters."""
  OR: [ReferenceWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ReferenceWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  callDate: DateTime

  """All values that are not equal to given value."""
  callDate_not: DateTime

  """All values that are contained in given list."""
  callDate_in: [DateTime!]

  """All values that are not contained in given list."""
  callDate_not_in: [DateTime!]

  """All values less than the given value."""
  callDate_lt: DateTime

  """All values less than or equal the given value."""
  callDate_lte: DateTime

  """All values greater than the given value."""
  callDate_gt: DateTime

  """All values greater than or equal the given value."""
  callDate_gte: DateTime
  notes: String

  """All values that are not equal to given value."""
  notes_not: String

  """All values that are contained in given list."""
  notes_in: [String!]

  """All values that are not contained in given list."""
  notes_not_in: [String!]

  """All values less than the given value."""
  notes_lt: String

  """All values less than or equal the given value."""
  notes_lte: String

  """All values greater than the given value."""
  notes_gt: String

  """All values greater than or equal the given value."""
  notes_gte: String

  """All values containing the given string."""
  notes_contains: String

  """All values not containing the given string."""
  notes_not_contains: String

  """All values starting with the given string."""
  notes_starts_with: String

  """All values not starting with the given string."""
  notes_not_starts_with: String

  """All values ending with the given string."""
  notes_ends_with: String

  """All values not ending with the given string."""
  notes_not_ends_with: String
  lm: DateTime

  """All values that are not equal to given value."""
  lm_not: DateTime

  """All values that are contained in given list."""
  lm_in: [DateTime!]

  """All values that are not contained in given list."""
  lm_not_in: [DateTime!]

  """All values less than the given value."""
  lm_lt: DateTime

  """All values less than or equal the given value."""
  lm_lte: DateTime

  """All values greater than the given value."""
  lm_gt: DateTime

  """All values greater than or equal the given value."""
  lm_gte: DateTime
  firstName: String

  """All values that are not equal to given value."""
  firstName_not: String

  """All values that are contained in given list."""
  firstName_in: [String!]

  """All values that are not contained in given list."""
  firstName_not_in: [String!]

  """All values less than the given value."""
  firstName_lt: String

  """All values less than or equal the given value."""
  firstName_lte: String

  """All values greater than the given value."""
  firstName_gt: String

  """All values greater than or equal the given value."""
  firstName_gte: String

  """All values containing the given string."""
  firstName_contains: String

  """All values not containing the given string."""
  firstName_not_contains: String

  """All values starting with the given string."""
  firstName_starts_with: String

  """All values not starting with the given string."""
  firstName_not_starts_with: String

  """All values ending with the given string."""
  firstName_ends_with: String

  """All values not ending with the given string."""
  firstName_not_ends_with: String
  lastName: String

  """All values that are not equal to given value."""
  lastName_not: String

  """All values that are contained in given list."""
  lastName_in: [String!]

  """All values that are not contained in given list."""
  lastName_not_in: [String!]

  """All values less than the given value."""
  lastName_lt: String

  """All values less than or equal the given value."""
  lastName_lte: String

  """All values greater than the given value."""
  lastName_gt: String

  """All values greater than or equal the given value."""
  lastName_gte: String

  """All values containing the given string."""
  lastName_contains: String

  """All values not containing the given string."""
  lastName_not_contains: String

  """All values starting with the given string."""
  lastName_starts_with: String

  """All values not starting with the given string."""
  lastName_not_starts_with: String

  """All values ending with the given string."""
  lastName_ends_with: String

  """All values not ending with the given string."""
  lastName_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  relation: String

  """All values that are not equal to given value."""
  relation_not: String

  """All values that are contained in given list."""
  relation_in: [String!]

  """All values that are not contained in given list."""
  relation_not_in: [String!]

  """All values less than the given value."""
  relation_lt: String

  """All values less than or equal the given value."""
  relation_lte: String

  """All values greater than the given value."""
  relation_gt: String

  """All values greater than or equal the given value."""
  relation_gte: String

  """All values containing the given string."""
  relation_contains: String

  """All values not containing the given string."""
  relation_not_contains: String

  """All values starting with the given string."""
  relation_starts_with: String

  """All values not starting with the given string."""
  relation_not_starts_with: String

  """All values ending with the given string."""
  relation_ends_with: String

  """All values not ending with the given string."""
  relation_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  phone: String

  """All values that are not equal to given value."""
  phone_not: String

  """All values that are contained in given list."""
  phone_in: [String!]

  """All values that are not contained in given list."""
  phone_not_in: [String!]

  """All values less than the given value."""
  phone_lt: String

  """All values less than or equal the given value."""
  phone_lte: String

  """All values greater than the given value."""
  phone_gt: String

  """All values greater than or equal the given value."""
  phone_gte: String

  """All values containing the given string."""
  phone_contains: String

  """All values not containing the given string."""
  phone_not_contains: String

  """All values starting with the given string."""
  phone_starts_with: String

  """All values not starting with the given string."""
  phone_not_starts_with: String

  """All values ending with the given string."""
  phone_ends_with: String

  """All values not ending with the given string."""
  phone_not_ends_with: String
  job: JobWhereInput
  applicant: UserWhereInput
  application: ApplicationWhereInput
  caller: UserWhereInput
}

input ReferenceWhereUniqueInput {
  id: ID
}

type ScreenCall implements Node {
  id: ID!
  job(where: JobWhereInput): Job
  applicant(where: UserWhereInput): User
  application(where: ApplicationWhereInput): Application
  caller(where: UserWhereInput): User
  lm: DateTime
  callDate: DateTime
  notes: String
}

"""A connection to a list of items."""
type ScreenCallConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ScreenCallEdge]!
  aggregate: AggregateScreenCall!
}

input ScreenCallCreateInput {
  lm: DateTime
  callDate: DateTime
  notes: String
  job: JobCreateOneInput
  applicant: UserCreateOneWithoutApplicant_screen_callsInput
  application: ApplicationCreateOneWithoutScreen_callInput
  caller: UserCreateOneWithoutConsultant_screen_callsInput
}

input ScreenCallCreateManyWithoutApplicantInput {
  create: [ScreenCallCreateWithoutApplicantInput!]
  connect: [ScreenCallWhereUniqueInput!]
}

input ScreenCallCreateManyWithoutCallerInput {
  create: [ScreenCallCreateWithoutCallerInput!]
  connect: [ScreenCallWhereUniqueInput!]
}

input ScreenCallCreateOneWithoutApplicationInput {
  create: ScreenCallCreateWithoutApplicationInput
  connect: ScreenCallWhereUniqueInput
}

input ScreenCallCreateWithoutApplicantInput {
  lm: DateTime
  callDate: DateTime
  notes: String
  job: JobCreateOneInput
  application: ApplicationCreateOneWithoutScreen_callInput
  caller: UserCreateOneWithoutConsultant_screen_callsInput
}

input ScreenCallCreateWithoutApplicationInput {
  lm: DateTime
  callDate: DateTime
  notes: String
  job: JobCreateOneInput
  applicant: UserCreateOneWithoutApplicant_screen_callsInput
  caller: UserCreateOneWithoutConsultant_screen_callsInput
}

input ScreenCallCreateWithoutCallerInput {
  lm: DateTime
  callDate: DateTime
  notes: String
  job: JobCreateOneInput
  applicant: UserCreateOneWithoutApplicant_screen_callsInput
  application: ApplicationCreateOneWithoutScreen_callInput
}

"""An edge in a connection."""
type ScreenCallEdge {
  """The item at the end of the edge."""
  node: ScreenCall!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ScreenCallOrderByInput {
  id_ASC
  id_DESC
  lm_ASC
  lm_DESC
  callDate_ASC
  callDate_DESC
  notes_ASC
  notes_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ScreenCallPreviousValues {
  id: ID!
  lm: DateTime
  callDate: DateTime
  notes: String
}

type ScreenCallSubscriptionPayload {
  mutation: MutationType!
  node: ScreenCall
  updatedFields: [String!]
  previousValues: ScreenCallPreviousValues
}

input ScreenCallSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ScreenCallSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ScreenCallSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ScreenCallSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ScreenCallWhereInput
}

input ScreenCallUpdateInput {
  lm: DateTime
  callDate: DateTime
  notes: String
  job: JobUpdateOneInput
  applicant: UserUpdateOneWithoutApplicant_screen_callsInput
  application: ApplicationUpdateOneWithoutScreen_callInput
  caller: UserUpdateOneWithoutConsultant_screen_callsInput
}

input ScreenCallUpdateManyWithoutApplicantInput {
  create: [ScreenCallCreateWithoutApplicantInput!]
  connect: [ScreenCallWhereUniqueInput!]
  disconnect: [ScreenCallWhereUniqueInput!]
  delete: [ScreenCallWhereUniqueInput!]
  update: [ScreenCallUpdateWithWhereUniqueWithoutApplicantInput!]
  upsert: [ScreenCallUpsertWithWhereUniqueWithoutApplicantInput!]
}

input ScreenCallUpdateManyWithoutCallerInput {
  create: [ScreenCallCreateWithoutCallerInput!]
  connect: [ScreenCallWhereUniqueInput!]
  disconnect: [ScreenCallWhereUniqueInput!]
  delete: [ScreenCallWhereUniqueInput!]
  update: [ScreenCallUpdateWithWhereUniqueWithoutCallerInput!]
  upsert: [ScreenCallUpsertWithWhereUniqueWithoutCallerInput!]
}

input ScreenCallUpdateOneWithoutApplicationInput {
  create: ScreenCallCreateWithoutApplicationInput
  connect: ScreenCallWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ScreenCallUpdateWithoutApplicationDataInput
  upsert: ScreenCallUpsertWithoutApplicationInput
}

input ScreenCallUpdateWithoutApplicantDataInput {
  lm: DateTime
  callDate: DateTime
  notes: String
  job: JobUpdateOneInput
  application: ApplicationUpdateOneWithoutScreen_callInput
  caller: UserUpdateOneWithoutConsultant_screen_callsInput
}

input ScreenCallUpdateWithoutApplicationDataInput {
  lm: DateTime
  callDate: DateTime
  notes: String
  job: JobUpdateOneInput
  applicant: UserUpdateOneWithoutApplicant_screen_callsInput
  caller: UserUpdateOneWithoutConsultant_screen_callsInput
}

input ScreenCallUpdateWithoutCallerDataInput {
  lm: DateTime
  callDate: DateTime
  notes: String
  job: JobUpdateOneInput
  applicant: UserUpdateOneWithoutApplicant_screen_callsInput
  application: ApplicationUpdateOneWithoutScreen_callInput
}

input ScreenCallUpdateWithWhereUniqueWithoutApplicantInput {
  where: ScreenCallWhereUniqueInput!
  data: ScreenCallUpdateWithoutApplicantDataInput!
}

input ScreenCallUpdateWithWhereUniqueWithoutCallerInput {
  where: ScreenCallWhereUniqueInput!
  data: ScreenCallUpdateWithoutCallerDataInput!
}

input ScreenCallUpsertWithoutApplicationInput {
  update: ScreenCallUpdateWithoutApplicationDataInput!
  create: ScreenCallCreateWithoutApplicationInput!
}

input ScreenCallUpsertWithWhereUniqueWithoutApplicantInput {
  where: ScreenCallWhereUniqueInput!
  update: ScreenCallUpdateWithoutApplicantDataInput!
  create: ScreenCallCreateWithoutApplicantInput!
}

input ScreenCallUpsertWithWhereUniqueWithoutCallerInput {
  where: ScreenCallWhereUniqueInput!
  update: ScreenCallUpdateWithoutCallerDataInput!
  create: ScreenCallCreateWithoutCallerInput!
}

input ScreenCallWhereInput {
  """Logical AND on all given filters."""
  AND: [ScreenCallWhereInput!]

  """Logical OR on all given filters."""
  OR: [ScreenCallWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ScreenCallWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  lm: DateTime

  """All values that are not equal to given value."""
  lm_not: DateTime

  """All values that are contained in given list."""
  lm_in: [DateTime!]

  """All values that are not contained in given list."""
  lm_not_in: [DateTime!]

  """All values less than the given value."""
  lm_lt: DateTime

  """All values less than or equal the given value."""
  lm_lte: DateTime

  """All values greater than the given value."""
  lm_gt: DateTime

  """All values greater than or equal the given value."""
  lm_gte: DateTime
  callDate: DateTime

  """All values that are not equal to given value."""
  callDate_not: DateTime

  """All values that are contained in given list."""
  callDate_in: [DateTime!]

  """All values that are not contained in given list."""
  callDate_not_in: [DateTime!]

  """All values less than the given value."""
  callDate_lt: DateTime

  """All values less than or equal the given value."""
  callDate_lte: DateTime

  """All values greater than the given value."""
  callDate_gt: DateTime

  """All values greater than or equal the given value."""
  callDate_gte: DateTime
  notes: String

  """All values that are not equal to given value."""
  notes_not: String

  """All values that are contained in given list."""
  notes_in: [String!]

  """All values that are not contained in given list."""
  notes_not_in: [String!]

  """All values less than the given value."""
  notes_lt: String

  """All values less than or equal the given value."""
  notes_lte: String

  """All values greater than the given value."""
  notes_gt: String

  """All values greater than or equal the given value."""
  notes_gte: String

  """All values containing the given string."""
  notes_contains: String

  """All values not containing the given string."""
  notes_not_contains: String

  """All values starting with the given string."""
  notes_starts_with: String

  """All values not starting with the given string."""
  notes_not_starts_with: String

  """All values ending with the given string."""
  notes_ends_with: String

  """All values not ending with the given string."""
  notes_not_ends_with: String
  job: JobWhereInput
  applicant: UserWhereInput
  application: ApplicationWhereInput
  caller: UserWhereInput
}

input ScreenCallWhereUniqueInput {
  id: ID
}

type Subscription {
  client(where: ClientSubscriptionWhereInput): ClientSubscriptionPayload
  adPlaced(where: AdPlacedSubscriptionWhereInput): AdPlacedSubscriptionPayload
  adSource(where: AdSourceSubscriptionWhereInput): AdSourceSubscriptionPayload
  outreachTarget(where: OutreachTargetSubscriptionWhereInput): OutreachTargetSubscriptionPayload
  application(where: ApplicationSubscriptionWhereInput): ApplicationSubscriptionPayload
  outreachCall(where: OutreachCallSubscriptionWhereInput): OutreachCallSubscriptionPayload
  screenCall(where: ScreenCallSubscriptionWhereInput): ScreenCallSubscriptionPayload
  reference(where: ReferenceSubscriptionWhereInput): ReferenceSubscriptionPayload
  background(where: BackgroundSubscriptionWhereInput): BackgroundSubscriptionPayload
  article(where: ArticleSubscriptionWhereInput): ArticleSubscriptionPayload
  expense(where: ExpenseSubscriptionWhereInput): ExpenseSubscriptionPayload
  payment(where: PaymentSubscriptionWhereInput): PaymentSubscriptionPayload
  job(where: JobSubscriptionWhereInput): JobSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type User implements Node {
  id: ID!
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications(where: ApplicationWhereInput, orderBy: ApplicationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Application!]
  consultant_jobs(where: JobWhereInput, orderBy: JobOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Job!]
  client(where: ClientWhereInput): Client
  clients_added(where: ClientWhereInput, orderBy: ClientOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Client!]
  jobs_added(where: JobWhereInput, orderBy: JobOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Job!]
  references(where: ReferenceWhereInput, orderBy: ReferenceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Reference!]
  applicant_screen_calls(where: ScreenCallWhereInput, orderBy: ScreenCallOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ScreenCall!]
  background(where: BackgroundWhereInput): Background
  articles(where: ArticleWhereInput, orderBy: ArticleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Article!]
  expenses(where: ExpenseWhereInput, orderBy: ExpenseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Expense!]
  outreach_target(where: OutreachTargetWhereInput): OutreachTarget
  ad_sources_added(where: AdSourceWhereInput, orderBy: AdSourceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AdSource!]
  ads_placed(where: AdPlacedWhereInput, orderBy: AdPlacedOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AdPlaced!]
  outreach_targets_added(where: OutreachTargetWhereInput, orderBy: OutreachTargetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OutreachTarget!]
  outreach_calls(where: OutreachCallWhereInput, orderBy: OutreachCallOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OutreachCall!]
  consultant_screen_calls(where: ScreenCallWhereInput, orderBy: ScreenCallOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ScreenCall!]
  reference_calls(where: ReferenceWhereInput, orderBy: ReferenceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Reference!]
  backgrounds_ordered(where: BackgroundWhereInput, orderBy: BackgroundOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Background!]
  articles_added(where: ArticleWhereInput, orderBy: ArticleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Article!]
  expenses_paid(where: ExpenseWhereInput, orderBy: ExpenseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Expense!]
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationCreateManyWithoutApplicationInput
  consultant_jobs: JobCreateManyWithoutConsultantsInput
  client: ClientCreateOneWithoutPersonnelInput
  clients_added: ClientCreateManyWithoutAddedByInput
  jobs_added: JobCreateManyWithoutAddedByInput
  references: ReferenceCreateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallCreateManyWithoutApplicantInput
  background: BackgroundCreateOneWithoutApplicantInput
  articles: ArticleCreateManyWithoutApplicantInput
  expenses: ExpenseCreateManyWithoutConsultantInput
  outreach_target: OutreachTargetCreateOneWithoutUserIdInput
  ad_sources_added: AdSourceCreateManyWithoutAddedByInput
  ads_placed: AdPlacedCreateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetCreateManyWithoutAddedByInput
  outreach_calls: OutreachCallCreateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallCreateManyWithoutCallerInput
  reference_calls: ReferenceCreateManyWithoutCallerInput
  backgrounds_ordered: BackgroundCreateManyWithoutOrderedByInput
  articles_added: ArticleCreateManyWithoutAddedByInput
  expenses_paid: ExpenseCreateManyWithoutExpensePaidByInput
}

input UserCreateManyWithoutClientInput {
  create: [UserCreateWithoutClientInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateManyWithoutConsultant_jobsInput {
  create: [UserCreateWithoutConsultant_jobsInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutAd_sources_addedInput {
  create: UserCreateWithoutAd_sources_addedInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutAds_placedInput {
  create: UserCreateWithoutAds_placedInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutApplicant_screen_callsInput {
  create: UserCreateWithoutApplicant_screen_callsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutApplicationsInput {
  create: UserCreateWithoutApplicationsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutArticles_addedInput {
  create: UserCreateWithoutArticles_addedInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutArticlesInput {
  create: UserCreateWithoutArticlesInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutBackgroundInput {
  create: UserCreateWithoutBackgroundInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutBackgrounds_orderedInput {
  create: UserCreateWithoutBackgrounds_orderedInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutClients_addedInput {
  create: UserCreateWithoutClients_addedInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutConsultant_screen_callsInput {
  create: UserCreateWithoutConsultant_screen_callsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutExpenses_paidInput {
  create: UserCreateWithoutExpenses_paidInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutExpensesInput {
  create: UserCreateWithoutExpensesInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutJobs_addedInput {
  create: UserCreateWithoutJobs_addedInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutOutreach_callsInput {
  create: UserCreateWithoutOutreach_callsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutOutreach_targetInput {
  create: UserCreateWithoutOutreach_targetInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutOutreach_targets_addedInput {
  create: UserCreateWithoutOutreach_targets_addedInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutReference_callsInput {
  create: UserCreateWithoutReference_callsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutReferencesInput {
  create: UserCreateWithoutReferencesInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutAd_sources_addedInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationCreateManyWithoutApplicationInput
  consultant_jobs: JobCreateManyWithoutConsultantsInput
  client: ClientCreateOneWithoutPersonnelInput
  clients_added: ClientCreateManyWithoutAddedByInput
  jobs_added: JobCreateManyWithoutAddedByInput
  references: ReferenceCreateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallCreateManyWithoutApplicantInput
  background: BackgroundCreateOneWithoutApplicantInput
  articles: ArticleCreateManyWithoutApplicantInput
  expenses: ExpenseCreateManyWithoutConsultantInput
  outreach_target: OutreachTargetCreateOneWithoutUserIdInput
  ads_placed: AdPlacedCreateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetCreateManyWithoutAddedByInput
  outreach_calls: OutreachCallCreateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallCreateManyWithoutCallerInput
  reference_calls: ReferenceCreateManyWithoutCallerInput
  backgrounds_ordered: BackgroundCreateManyWithoutOrderedByInput
  articles_added: ArticleCreateManyWithoutAddedByInput
  expenses_paid: ExpenseCreateManyWithoutExpensePaidByInput
}

input UserCreateWithoutAds_placedInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationCreateManyWithoutApplicationInput
  consultant_jobs: JobCreateManyWithoutConsultantsInput
  client: ClientCreateOneWithoutPersonnelInput
  clients_added: ClientCreateManyWithoutAddedByInput
  jobs_added: JobCreateManyWithoutAddedByInput
  references: ReferenceCreateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallCreateManyWithoutApplicantInput
  background: BackgroundCreateOneWithoutApplicantInput
  articles: ArticleCreateManyWithoutApplicantInput
  expenses: ExpenseCreateManyWithoutConsultantInput
  outreach_target: OutreachTargetCreateOneWithoutUserIdInput
  ad_sources_added: AdSourceCreateManyWithoutAddedByInput
  outreach_targets_added: OutreachTargetCreateManyWithoutAddedByInput
  outreach_calls: OutreachCallCreateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallCreateManyWithoutCallerInput
  reference_calls: ReferenceCreateManyWithoutCallerInput
  backgrounds_ordered: BackgroundCreateManyWithoutOrderedByInput
  articles_added: ArticleCreateManyWithoutAddedByInput
  expenses_paid: ExpenseCreateManyWithoutExpensePaidByInput
}

input UserCreateWithoutApplicant_screen_callsInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationCreateManyWithoutApplicationInput
  consultant_jobs: JobCreateManyWithoutConsultantsInput
  client: ClientCreateOneWithoutPersonnelInput
  clients_added: ClientCreateManyWithoutAddedByInput
  jobs_added: JobCreateManyWithoutAddedByInput
  references: ReferenceCreateManyWithoutApplicantInput
  background: BackgroundCreateOneWithoutApplicantInput
  articles: ArticleCreateManyWithoutApplicantInput
  expenses: ExpenseCreateManyWithoutConsultantInput
  outreach_target: OutreachTargetCreateOneWithoutUserIdInput
  ad_sources_added: AdSourceCreateManyWithoutAddedByInput
  ads_placed: AdPlacedCreateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetCreateManyWithoutAddedByInput
  outreach_calls: OutreachCallCreateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallCreateManyWithoutCallerInput
  reference_calls: ReferenceCreateManyWithoutCallerInput
  backgrounds_ordered: BackgroundCreateManyWithoutOrderedByInput
  articles_added: ArticleCreateManyWithoutAddedByInput
  expenses_paid: ExpenseCreateManyWithoutExpensePaidByInput
}

input UserCreateWithoutApplicationsInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  consultant_jobs: JobCreateManyWithoutConsultantsInput
  client: ClientCreateOneWithoutPersonnelInput
  clients_added: ClientCreateManyWithoutAddedByInput
  jobs_added: JobCreateManyWithoutAddedByInput
  references: ReferenceCreateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallCreateManyWithoutApplicantInput
  background: BackgroundCreateOneWithoutApplicantInput
  articles: ArticleCreateManyWithoutApplicantInput
  expenses: ExpenseCreateManyWithoutConsultantInput
  outreach_target: OutreachTargetCreateOneWithoutUserIdInput
  ad_sources_added: AdSourceCreateManyWithoutAddedByInput
  ads_placed: AdPlacedCreateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetCreateManyWithoutAddedByInput
  outreach_calls: OutreachCallCreateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallCreateManyWithoutCallerInput
  reference_calls: ReferenceCreateManyWithoutCallerInput
  backgrounds_ordered: BackgroundCreateManyWithoutOrderedByInput
  articles_added: ArticleCreateManyWithoutAddedByInput
  expenses_paid: ExpenseCreateManyWithoutExpensePaidByInput
}

input UserCreateWithoutArticles_addedInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationCreateManyWithoutApplicationInput
  consultant_jobs: JobCreateManyWithoutConsultantsInput
  client: ClientCreateOneWithoutPersonnelInput
  clients_added: ClientCreateManyWithoutAddedByInput
  jobs_added: JobCreateManyWithoutAddedByInput
  references: ReferenceCreateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallCreateManyWithoutApplicantInput
  background: BackgroundCreateOneWithoutApplicantInput
  articles: ArticleCreateManyWithoutApplicantInput
  expenses: ExpenseCreateManyWithoutConsultantInput
  outreach_target: OutreachTargetCreateOneWithoutUserIdInput
  ad_sources_added: AdSourceCreateManyWithoutAddedByInput
  ads_placed: AdPlacedCreateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetCreateManyWithoutAddedByInput
  outreach_calls: OutreachCallCreateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallCreateManyWithoutCallerInput
  reference_calls: ReferenceCreateManyWithoutCallerInput
  backgrounds_ordered: BackgroundCreateManyWithoutOrderedByInput
  expenses_paid: ExpenseCreateManyWithoutExpensePaidByInput
}

input UserCreateWithoutArticlesInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationCreateManyWithoutApplicationInput
  consultant_jobs: JobCreateManyWithoutConsultantsInput
  client: ClientCreateOneWithoutPersonnelInput
  clients_added: ClientCreateManyWithoutAddedByInput
  jobs_added: JobCreateManyWithoutAddedByInput
  references: ReferenceCreateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallCreateManyWithoutApplicantInput
  background: BackgroundCreateOneWithoutApplicantInput
  expenses: ExpenseCreateManyWithoutConsultantInput
  outreach_target: OutreachTargetCreateOneWithoutUserIdInput
  ad_sources_added: AdSourceCreateManyWithoutAddedByInput
  ads_placed: AdPlacedCreateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetCreateManyWithoutAddedByInput
  outreach_calls: OutreachCallCreateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallCreateManyWithoutCallerInput
  reference_calls: ReferenceCreateManyWithoutCallerInput
  backgrounds_ordered: BackgroundCreateManyWithoutOrderedByInput
  articles_added: ArticleCreateManyWithoutAddedByInput
  expenses_paid: ExpenseCreateManyWithoutExpensePaidByInput
}

input UserCreateWithoutBackgroundInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationCreateManyWithoutApplicationInput
  consultant_jobs: JobCreateManyWithoutConsultantsInput
  client: ClientCreateOneWithoutPersonnelInput
  clients_added: ClientCreateManyWithoutAddedByInput
  jobs_added: JobCreateManyWithoutAddedByInput
  references: ReferenceCreateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallCreateManyWithoutApplicantInput
  articles: ArticleCreateManyWithoutApplicantInput
  expenses: ExpenseCreateManyWithoutConsultantInput
  outreach_target: OutreachTargetCreateOneWithoutUserIdInput
  ad_sources_added: AdSourceCreateManyWithoutAddedByInput
  ads_placed: AdPlacedCreateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetCreateManyWithoutAddedByInput
  outreach_calls: OutreachCallCreateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallCreateManyWithoutCallerInput
  reference_calls: ReferenceCreateManyWithoutCallerInput
  backgrounds_ordered: BackgroundCreateManyWithoutOrderedByInput
  articles_added: ArticleCreateManyWithoutAddedByInput
  expenses_paid: ExpenseCreateManyWithoutExpensePaidByInput
}

input UserCreateWithoutBackgrounds_orderedInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationCreateManyWithoutApplicationInput
  consultant_jobs: JobCreateManyWithoutConsultantsInput
  client: ClientCreateOneWithoutPersonnelInput
  clients_added: ClientCreateManyWithoutAddedByInput
  jobs_added: JobCreateManyWithoutAddedByInput
  references: ReferenceCreateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallCreateManyWithoutApplicantInput
  background: BackgroundCreateOneWithoutApplicantInput
  articles: ArticleCreateManyWithoutApplicantInput
  expenses: ExpenseCreateManyWithoutConsultantInput
  outreach_target: OutreachTargetCreateOneWithoutUserIdInput
  ad_sources_added: AdSourceCreateManyWithoutAddedByInput
  ads_placed: AdPlacedCreateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetCreateManyWithoutAddedByInput
  outreach_calls: OutreachCallCreateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallCreateManyWithoutCallerInput
  reference_calls: ReferenceCreateManyWithoutCallerInput
  articles_added: ArticleCreateManyWithoutAddedByInput
  expenses_paid: ExpenseCreateManyWithoutExpensePaidByInput
}

input UserCreateWithoutClientInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationCreateManyWithoutApplicationInput
  consultant_jobs: JobCreateManyWithoutConsultantsInput
  clients_added: ClientCreateManyWithoutAddedByInput
  jobs_added: JobCreateManyWithoutAddedByInput
  references: ReferenceCreateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallCreateManyWithoutApplicantInput
  background: BackgroundCreateOneWithoutApplicantInput
  articles: ArticleCreateManyWithoutApplicantInput
  expenses: ExpenseCreateManyWithoutConsultantInput
  outreach_target: OutreachTargetCreateOneWithoutUserIdInput
  ad_sources_added: AdSourceCreateManyWithoutAddedByInput
  ads_placed: AdPlacedCreateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetCreateManyWithoutAddedByInput
  outreach_calls: OutreachCallCreateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallCreateManyWithoutCallerInput
  reference_calls: ReferenceCreateManyWithoutCallerInput
  backgrounds_ordered: BackgroundCreateManyWithoutOrderedByInput
  articles_added: ArticleCreateManyWithoutAddedByInput
  expenses_paid: ExpenseCreateManyWithoutExpensePaidByInput
}

input UserCreateWithoutClients_addedInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationCreateManyWithoutApplicationInput
  consultant_jobs: JobCreateManyWithoutConsultantsInput
  client: ClientCreateOneWithoutPersonnelInput
  jobs_added: JobCreateManyWithoutAddedByInput
  references: ReferenceCreateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallCreateManyWithoutApplicantInput
  background: BackgroundCreateOneWithoutApplicantInput
  articles: ArticleCreateManyWithoutApplicantInput
  expenses: ExpenseCreateManyWithoutConsultantInput
  outreach_target: OutreachTargetCreateOneWithoutUserIdInput
  ad_sources_added: AdSourceCreateManyWithoutAddedByInput
  ads_placed: AdPlacedCreateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetCreateManyWithoutAddedByInput
  outreach_calls: OutreachCallCreateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallCreateManyWithoutCallerInput
  reference_calls: ReferenceCreateManyWithoutCallerInput
  backgrounds_ordered: BackgroundCreateManyWithoutOrderedByInput
  articles_added: ArticleCreateManyWithoutAddedByInput
  expenses_paid: ExpenseCreateManyWithoutExpensePaidByInput
}

input UserCreateWithoutConsultant_jobsInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationCreateManyWithoutApplicationInput
  client: ClientCreateOneWithoutPersonnelInput
  clients_added: ClientCreateManyWithoutAddedByInput
  jobs_added: JobCreateManyWithoutAddedByInput
  references: ReferenceCreateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallCreateManyWithoutApplicantInput
  background: BackgroundCreateOneWithoutApplicantInput
  articles: ArticleCreateManyWithoutApplicantInput
  expenses: ExpenseCreateManyWithoutConsultantInput
  outreach_target: OutreachTargetCreateOneWithoutUserIdInput
  ad_sources_added: AdSourceCreateManyWithoutAddedByInput
  ads_placed: AdPlacedCreateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetCreateManyWithoutAddedByInput
  outreach_calls: OutreachCallCreateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallCreateManyWithoutCallerInput
  reference_calls: ReferenceCreateManyWithoutCallerInput
  backgrounds_ordered: BackgroundCreateManyWithoutOrderedByInput
  articles_added: ArticleCreateManyWithoutAddedByInput
  expenses_paid: ExpenseCreateManyWithoutExpensePaidByInput
}

input UserCreateWithoutConsultant_screen_callsInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationCreateManyWithoutApplicationInput
  consultant_jobs: JobCreateManyWithoutConsultantsInput
  client: ClientCreateOneWithoutPersonnelInput
  clients_added: ClientCreateManyWithoutAddedByInput
  jobs_added: JobCreateManyWithoutAddedByInput
  references: ReferenceCreateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallCreateManyWithoutApplicantInput
  background: BackgroundCreateOneWithoutApplicantInput
  articles: ArticleCreateManyWithoutApplicantInput
  expenses: ExpenseCreateManyWithoutConsultantInput
  outreach_target: OutreachTargetCreateOneWithoutUserIdInput
  ad_sources_added: AdSourceCreateManyWithoutAddedByInput
  ads_placed: AdPlacedCreateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetCreateManyWithoutAddedByInput
  outreach_calls: OutreachCallCreateManyWithoutCallerInput
  reference_calls: ReferenceCreateManyWithoutCallerInput
  backgrounds_ordered: BackgroundCreateManyWithoutOrderedByInput
  articles_added: ArticleCreateManyWithoutAddedByInput
  expenses_paid: ExpenseCreateManyWithoutExpensePaidByInput
}

input UserCreateWithoutExpenses_paidInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationCreateManyWithoutApplicationInput
  consultant_jobs: JobCreateManyWithoutConsultantsInput
  client: ClientCreateOneWithoutPersonnelInput
  clients_added: ClientCreateManyWithoutAddedByInput
  jobs_added: JobCreateManyWithoutAddedByInput
  references: ReferenceCreateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallCreateManyWithoutApplicantInput
  background: BackgroundCreateOneWithoutApplicantInput
  articles: ArticleCreateManyWithoutApplicantInput
  expenses: ExpenseCreateManyWithoutConsultantInput
  outreach_target: OutreachTargetCreateOneWithoutUserIdInput
  ad_sources_added: AdSourceCreateManyWithoutAddedByInput
  ads_placed: AdPlacedCreateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetCreateManyWithoutAddedByInput
  outreach_calls: OutreachCallCreateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallCreateManyWithoutCallerInput
  reference_calls: ReferenceCreateManyWithoutCallerInput
  backgrounds_ordered: BackgroundCreateManyWithoutOrderedByInput
  articles_added: ArticleCreateManyWithoutAddedByInput
}

input UserCreateWithoutExpensesInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationCreateManyWithoutApplicationInput
  consultant_jobs: JobCreateManyWithoutConsultantsInput
  client: ClientCreateOneWithoutPersonnelInput
  clients_added: ClientCreateManyWithoutAddedByInput
  jobs_added: JobCreateManyWithoutAddedByInput
  references: ReferenceCreateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallCreateManyWithoutApplicantInput
  background: BackgroundCreateOneWithoutApplicantInput
  articles: ArticleCreateManyWithoutApplicantInput
  outreach_target: OutreachTargetCreateOneWithoutUserIdInput
  ad_sources_added: AdSourceCreateManyWithoutAddedByInput
  ads_placed: AdPlacedCreateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetCreateManyWithoutAddedByInput
  outreach_calls: OutreachCallCreateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallCreateManyWithoutCallerInput
  reference_calls: ReferenceCreateManyWithoutCallerInput
  backgrounds_ordered: BackgroundCreateManyWithoutOrderedByInput
  articles_added: ArticleCreateManyWithoutAddedByInput
  expenses_paid: ExpenseCreateManyWithoutExpensePaidByInput
}

input UserCreateWithoutJobs_addedInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationCreateManyWithoutApplicationInput
  consultant_jobs: JobCreateManyWithoutConsultantsInput
  client: ClientCreateOneWithoutPersonnelInput
  clients_added: ClientCreateManyWithoutAddedByInput
  references: ReferenceCreateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallCreateManyWithoutApplicantInput
  background: BackgroundCreateOneWithoutApplicantInput
  articles: ArticleCreateManyWithoutApplicantInput
  expenses: ExpenseCreateManyWithoutConsultantInput
  outreach_target: OutreachTargetCreateOneWithoutUserIdInput
  ad_sources_added: AdSourceCreateManyWithoutAddedByInput
  ads_placed: AdPlacedCreateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetCreateManyWithoutAddedByInput
  outreach_calls: OutreachCallCreateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallCreateManyWithoutCallerInput
  reference_calls: ReferenceCreateManyWithoutCallerInput
  backgrounds_ordered: BackgroundCreateManyWithoutOrderedByInput
  articles_added: ArticleCreateManyWithoutAddedByInput
  expenses_paid: ExpenseCreateManyWithoutExpensePaidByInput
}

input UserCreateWithoutOutreach_callsInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationCreateManyWithoutApplicationInput
  consultant_jobs: JobCreateManyWithoutConsultantsInput
  client: ClientCreateOneWithoutPersonnelInput
  clients_added: ClientCreateManyWithoutAddedByInput
  jobs_added: JobCreateManyWithoutAddedByInput
  references: ReferenceCreateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallCreateManyWithoutApplicantInput
  background: BackgroundCreateOneWithoutApplicantInput
  articles: ArticleCreateManyWithoutApplicantInput
  expenses: ExpenseCreateManyWithoutConsultantInput
  outreach_target: OutreachTargetCreateOneWithoutUserIdInput
  ad_sources_added: AdSourceCreateManyWithoutAddedByInput
  ads_placed: AdPlacedCreateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetCreateManyWithoutAddedByInput
  consultant_screen_calls: ScreenCallCreateManyWithoutCallerInput
  reference_calls: ReferenceCreateManyWithoutCallerInput
  backgrounds_ordered: BackgroundCreateManyWithoutOrderedByInput
  articles_added: ArticleCreateManyWithoutAddedByInput
  expenses_paid: ExpenseCreateManyWithoutExpensePaidByInput
}

input UserCreateWithoutOutreach_targetInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationCreateManyWithoutApplicationInput
  consultant_jobs: JobCreateManyWithoutConsultantsInput
  client: ClientCreateOneWithoutPersonnelInput
  clients_added: ClientCreateManyWithoutAddedByInput
  jobs_added: JobCreateManyWithoutAddedByInput
  references: ReferenceCreateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallCreateManyWithoutApplicantInput
  background: BackgroundCreateOneWithoutApplicantInput
  articles: ArticleCreateManyWithoutApplicantInput
  expenses: ExpenseCreateManyWithoutConsultantInput
  ad_sources_added: AdSourceCreateManyWithoutAddedByInput
  ads_placed: AdPlacedCreateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetCreateManyWithoutAddedByInput
  outreach_calls: OutreachCallCreateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallCreateManyWithoutCallerInput
  reference_calls: ReferenceCreateManyWithoutCallerInput
  backgrounds_ordered: BackgroundCreateManyWithoutOrderedByInput
  articles_added: ArticleCreateManyWithoutAddedByInput
  expenses_paid: ExpenseCreateManyWithoutExpensePaidByInput
}

input UserCreateWithoutOutreach_targets_addedInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationCreateManyWithoutApplicationInput
  consultant_jobs: JobCreateManyWithoutConsultantsInput
  client: ClientCreateOneWithoutPersonnelInput
  clients_added: ClientCreateManyWithoutAddedByInput
  jobs_added: JobCreateManyWithoutAddedByInput
  references: ReferenceCreateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallCreateManyWithoutApplicantInput
  background: BackgroundCreateOneWithoutApplicantInput
  articles: ArticleCreateManyWithoutApplicantInput
  expenses: ExpenseCreateManyWithoutConsultantInput
  outreach_target: OutreachTargetCreateOneWithoutUserIdInput
  ad_sources_added: AdSourceCreateManyWithoutAddedByInput
  ads_placed: AdPlacedCreateManyWithoutPlacedByInput
  outreach_calls: OutreachCallCreateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallCreateManyWithoutCallerInput
  reference_calls: ReferenceCreateManyWithoutCallerInput
  backgrounds_ordered: BackgroundCreateManyWithoutOrderedByInput
  articles_added: ArticleCreateManyWithoutAddedByInput
  expenses_paid: ExpenseCreateManyWithoutExpensePaidByInput
}

input UserCreateWithoutReference_callsInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationCreateManyWithoutApplicationInput
  consultant_jobs: JobCreateManyWithoutConsultantsInput
  client: ClientCreateOneWithoutPersonnelInput
  clients_added: ClientCreateManyWithoutAddedByInput
  jobs_added: JobCreateManyWithoutAddedByInput
  references: ReferenceCreateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallCreateManyWithoutApplicantInput
  background: BackgroundCreateOneWithoutApplicantInput
  articles: ArticleCreateManyWithoutApplicantInput
  expenses: ExpenseCreateManyWithoutConsultantInput
  outreach_target: OutreachTargetCreateOneWithoutUserIdInput
  ad_sources_added: AdSourceCreateManyWithoutAddedByInput
  ads_placed: AdPlacedCreateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetCreateManyWithoutAddedByInput
  outreach_calls: OutreachCallCreateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallCreateManyWithoutCallerInput
  backgrounds_ordered: BackgroundCreateManyWithoutOrderedByInput
  articles_added: ArticleCreateManyWithoutAddedByInput
  expenses_paid: ExpenseCreateManyWithoutExpensePaidByInput
}

input UserCreateWithoutReferencesInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationCreateManyWithoutApplicationInput
  consultant_jobs: JobCreateManyWithoutConsultantsInput
  client: ClientCreateOneWithoutPersonnelInput
  clients_added: ClientCreateManyWithoutAddedByInput
  jobs_added: JobCreateManyWithoutAddedByInput
  applicant_screen_calls: ScreenCallCreateManyWithoutApplicantInput
  background: BackgroundCreateOneWithoutApplicantInput
  articles: ArticleCreateManyWithoutApplicantInput
  expenses: ExpenseCreateManyWithoutConsultantInput
  outreach_target: OutreachTargetCreateOneWithoutUserIdInput
  ad_sources_added: AdSourceCreateManyWithoutAddedByInput
  ads_placed: AdPlacedCreateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetCreateManyWithoutAddedByInput
  outreach_calls: OutreachCallCreateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallCreateManyWithoutCallerInput
  reference_calls: ReferenceCreateManyWithoutCallerInput
  backgrounds_ordered: BackgroundCreateManyWithoutOrderedByInput
  articles_added: ArticleCreateManyWithoutAddedByInput
  expenses_paid: ExpenseCreateManyWithoutExpensePaidByInput
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  address_ASC
  address_DESC
  city_ASC
  city_DESC
  state_ASC
  state_DESC
  zip_ASC
  zip_DESC
  phone_ASC
  phone_DESC
  last_login_ASC
  last_login_DESC
  online_ASC
  online_DESC
  type_ASC
  type_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

enum UserType {
  APPLICANT
  CONSULTANT
  CLIENT
  DIRECTOR
  RESEARCHER
  ACCOUNTANT
}

input UserUpdateDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  client: ClientUpdateOneWithoutPersonnelInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  client: ClientUpdateOneWithoutPersonnelInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateManyWithoutClientInput {
  create: [UserCreateWithoutClientInput!]
  connect: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutClientInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutClientInput!]
}

input UserUpdateManyWithoutConsultant_jobsInput {
  create: [UserCreateWithoutConsultant_jobsInput!]
  connect: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutConsultant_jobsInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutConsultant_jobsInput!]
}

input UserUpdateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
}

input UserUpdateOneWithoutAd_sources_addedInput {
  create: UserCreateWithoutAd_sources_addedInput
  connect: UserWhereUniqueInput
  delete: Boolean
  update: UserUpdateWithoutAd_sources_addedDataInput
  upsert: UserUpsertWithoutAd_sources_addedInput
}

input UserUpdateOneWithoutAds_placedInput {
  create: UserCreateWithoutAds_placedInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutAds_placedDataInput
  upsert: UserUpsertWithoutAds_placedInput
}

input UserUpdateOneWithoutApplicant_screen_callsInput {
  create: UserCreateWithoutApplicant_screen_callsInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutApplicant_screen_callsDataInput
  upsert: UserUpsertWithoutApplicant_screen_callsInput
}

input UserUpdateOneWithoutApplicationsInput {
  create: UserCreateWithoutApplicationsInput
  connect: UserWhereUniqueInput
  delete: Boolean
  update: UserUpdateWithoutApplicationsDataInput
  upsert: UserUpsertWithoutApplicationsInput
}

input UserUpdateOneWithoutArticles_addedInput {
  create: UserCreateWithoutArticles_addedInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutArticles_addedDataInput
  upsert: UserUpsertWithoutArticles_addedInput
}

input UserUpdateOneWithoutArticlesInput {
  create: UserCreateWithoutArticlesInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutArticlesDataInput
  upsert: UserUpsertWithoutArticlesInput
}

input UserUpdateOneWithoutBackgroundInput {
  create: UserCreateWithoutBackgroundInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutBackgroundDataInput
  upsert: UserUpsertWithoutBackgroundInput
}

input UserUpdateOneWithoutBackgrounds_orderedInput {
  create: UserCreateWithoutBackgrounds_orderedInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutBackgrounds_orderedDataInput
  upsert: UserUpsertWithoutBackgrounds_orderedInput
}

input UserUpdateOneWithoutClients_addedInput {
  create: UserCreateWithoutClients_addedInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutClients_addedDataInput
  upsert: UserUpsertWithoutClients_addedInput
}

input UserUpdateOneWithoutConsultant_screen_callsInput {
  create: UserCreateWithoutConsultant_screen_callsInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutConsultant_screen_callsDataInput
  upsert: UserUpsertWithoutConsultant_screen_callsInput
}

input UserUpdateOneWithoutExpenses_paidInput {
  create: UserCreateWithoutExpenses_paidInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutExpenses_paidDataInput
  upsert: UserUpsertWithoutExpenses_paidInput
}

input UserUpdateOneWithoutExpensesInput {
  create: UserCreateWithoutExpensesInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutExpensesDataInput
  upsert: UserUpsertWithoutExpensesInput
}

input UserUpdateOneWithoutJobs_addedInput {
  create: UserCreateWithoutJobs_addedInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutJobs_addedDataInput
  upsert: UserUpsertWithoutJobs_addedInput
}

input UserUpdateOneWithoutOutreach_callsInput {
  create: UserCreateWithoutOutreach_callsInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutOutreach_callsDataInput
  upsert: UserUpsertWithoutOutreach_callsInput
}

input UserUpdateOneWithoutOutreach_targetInput {
  create: UserCreateWithoutOutreach_targetInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutOutreach_targetDataInput
  upsert: UserUpsertWithoutOutreach_targetInput
}

input UserUpdateOneWithoutOutreach_targets_addedInput {
  create: UserCreateWithoutOutreach_targets_addedInput
  connect: UserWhereUniqueInput
  delete: Boolean
  update: UserUpdateWithoutOutreach_targets_addedDataInput
  upsert: UserUpsertWithoutOutreach_targets_addedInput
}

input UserUpdateOneWithoutReference_callsInput {
  create: UserCreateWithoutReference_callsInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutReference_callsDataInput
  upsert: UserUpsertWithoutReference_callsInput
}

input UserUpdateOneWithoutReferencesInput {
  create: UserCreateWithoutReferencesInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutReferencesDataInput
  upsert: UserUpsertWithoutReferencesInput
}

input UserUpdateWithoutAd_sources_addedDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  client: ClientUpdateOneWithoutPersonnelInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateWithoutAds_placedDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  client: ClientUpdateOneWithoutPersonnelInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateWithoutApplicant_screen_callsDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  client: ClientUpdateOneWithoutPersonnelInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateWithoutApplicationsDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  client: ClientUpdateOneWithoutPersonnelInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateWithoutArticles_addedDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  client: ClientUpdateOneWithoutPersonnelInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateWithoutArticlesDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  client: ClientUpdateOneWithoutPersonnelInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateWithoutBackgroundDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  client: ClientUpdateOneWithoutPersonnelInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateWithoutBackgrounds_orderedDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  client: ClientUpdateOneWithoutPersonnelInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateWithoutClientDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateWithoutClients_addedDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  client: ClientUpdateOneWithoutPersonnelInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateWithoutConsultant_jobsDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  client: ClientUpdateOneWithoutPersonnelInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateWithoutConsultant_screen_callsDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  client: ClientUpdateOneWithoutPersonnelInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateWithoutExpenses_paidDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  client: ClientUpdateOneWithoutPersonnelInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
}

input UserUpdateWithoutExpensesDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  client: ClientUpdateOneWithoutPersonnelInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateWithoutJobs_addedDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  client: ClientUpdateOneWithoutPersonnelInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateWithoutOutreach_callsDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  client: ClientUpdateOneWithoutPersonnelInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateWithoutOutreach_targetDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  client: ClientUpdateOneWithoutPersonnelInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateWithoutOutreach_targets_addedDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  client: ClientUpdateOneWithoutPersonnelInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateWithoutReference_callsDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  client: ClientUpdateOneWithoutPersonnelInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  references: ReferenceUpdateManyWithoutApplicantInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateWithoutReferencesDataInput {
  email: String
  password: String
  firstName: String
  lastName: String
  address: String
  city: String
  state: String
  zip: Int
  phone: String
  last_login: DateTime
  online: Boolean
  type: UserType
  applications: ApplicationUpdateManyWithoutApplicationInput
  consultant_jobs: JobUpdateManyWithoutConsultantsInput
  client: ClientUpdateOneWithoutPersonnelInput
  clients_added: ClientUpdateManyWithoutAddedByInput
  jobs_added: JobUpdateManyWithoutAddedByInput
  applicant_screen_calls: ScreenCallUpdateManyWithoutApplicantInput
  background: BackgroundUpdateOneWithoutApplicantInput
  articles: ArticleUpdateManyWithoutApplicantInput
  expenses: ExpenseUpdateManyWithoutConsultantInput
  outreach_target: OutreachTargetUpdateOneWithoutUserIdInput
  ad_sources_added: AdSourceUpdateManyWithoutAddedByInput
  ads_placed: AdPlacedUpdateManyWithoutPlacedByInput
  outreach_targets_added: OutreachTargetUpdateManyWithoutAddedByInput
  outreach_calls: OutreachCallUpdateManyWithoutCallerInput
  consultant_screen_calls: ScreenCallUpdateManyWithoutCallerInput
  reference_calls: ReferenceUpdateManyWithoutCallerInput
  backgrounds_ordered: BackgroundUpdateManyWithoutOrderedByInput
  articles_added: ArticleUpdateManyWithoutAddedByInput
  expenses_paid: ExpenseUpdateManyWithoutExpensePaidByInput
}

input UserUpdateWithWhereUniqueWithoutClientInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutClientDataInput!
}

input UserUpdateWithWhereUniqueWithoutConsultant_jobsInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutConsultant_jobsDataInput!
}

input UserUpsertNestedInput {
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserUpsertWithoutAd_sources_addedInput {
  update: UserUpdateWithoutAd_sources_addedDataInput!
  create: UserCreateWithoutAd_sources_addedInput!
}

input UserUpsertWithoutAds_placedInput {
  update: UserUpdateWithoutAds_placedDataInput!
  create: UserCreateWithoutAds_placedInput!
}

input UserUpsertWithoutApplicant_screen_callsInput {
  update: UserUpdateWithoutApplicant_screen_callsDataInput!
  create: UserCreateWithoutApplicant_screen_callsInput!
}

input UserUpsertWithoutApplicationsInput {
  update: UserUpdateWithoutApplicationsDataInput!
  create: UserCreateWithoutApplicationsInput!
}

input UserUpsertWithoutArticles_addedInput {
  update: UserUpdateWithoutArticles_addedDataInput!
  create: UserCreateWithoutArticles_addedInput!
}

input UserUpsertWithoutArticlesInput {
  update: UserUpdateWithoutArticlesDataInput!
  create: UserCreateWithoutArticlesInput!
}

input UserUpsertWithoutBackgroundInput {
  update: UserUpdateWithoutBackgroundDataInput!
  create: UserCreateWithoutBackgroundInput!
}

input UserUpsertWithoutBackgrounds_orderedInput {
  update: UserUpdateWithoutBackgrounds_orderedDataInput!
  create: UserCreateWithoutBackgrounds_orderedInput!
}

input UserUpsertWithoutClients_addedInput {
  update: UserUpdateWithoutClients_addedDataInput!
  create: UserCreateWithoutClients_addedInput!
}

input UserUpsertWithoutConsultant_screen_callsInput {
  update: UserUpdateWithoutConsultant_screen_callsDataInput!
  create: UserCreateWithoutConsultant_screen_callsInput!
}

input UserUpsertWithoutExpenses_paidInput {
  update: UserUpdateWithoutExpenses_paidDataInput!
  create: UserCreateWithoutExpenses_paidInput!
}

input UserUpsertWithoutExpensesInput {
  update: UserUpdateWithoutExpensesDataInput!
  create: UserCreateWithoutExpensesInput!
}

input UserUpsertWithoutJobs_addedInput {
  update: UserUpdateWithoutJobs_addedDataInput!
  create: UserCreateWithoutJobs_addedInput!
}

input UserUpsertWithoutOutreach_callsInput {
  update: UserUpdateWithoutOutreach_callsDataInput!
  create: UserCreateWithoutOutreach_callsInput!
}

input UserUpsertWithoutOutreach_targetInput {
  update: UserUpdateWithoutOutreach_targetDataInput!
  create: UserCreateWithoutOutreach_targetInput!
}

input UserUpsertWithoutOutreach_targets_addedInput {
  update: UserUpdateWithoutOutreach_targets_addedDataInput!
  create: UserCreateWithoutOutreach_targets_addedInput!
}

input UserUpsertWithoutReference_callsInput {
  update: UserUpdateWithoutReference_callsDataInput!
  create: UserCreateWithoutReference_callsInput!
}

input UserUpsertWithoutReferencesInput {
  update: UserUpdateWithoutReferencesDataInput!
  create: UserCreateWithoutReferencesInput!
}

input UserUpsertWithWhereUniqueWithoutClientInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutClientDataInput!
  create: UserCreateWithoutClientInput!
}

input UserUpsertWithWhereUniqueWithoutConsultant_jobsInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutConsultant_jobsDataInput!
  create: UserCreateWithoutConsultant_jobsInput!
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  firstName: String

  """All values that are not equal to given value."""
  firstName_not: String

  """All values that are contained in given list."""
  firstName_in: [String!]

  """All values that are not contained in given list."""
  firstName_not_in: [String!]

  """All values less than the given value."""
  firstName_lt: String

  """All values less than or equal the given value."""
  firstName_lte: String

  """All values greater than the given value."""
  firstName_gt: String

  """All values greater than or equal the given value."""
  firstName_gte: String

  """All values containing the given string."""
  firstName_contains: String

  """All values not containing the given string."""
  firstName_not_contains: String

  """All values starting with the given string."""
  firstName_starts_with: String

  """All values not starting with the given string."""
  firstName_not_starts_with: String

  """All values ending with the given string."""
  firstName_ends_with: String

  """All values not ending with the given string."""
  firstName_not_ends_with: String
  lastName: String

  """All values that are not equal to given value."""
  lastName_not: String

  """All values that are contained in given list."""
  lastName_in: [String!]

  """All values that are not contained in given list."""
  lastName_not_in: [String!]

  """All values less than the given value."""
  lastName_lt: String

  """All values less than or equal the given value."""
  lastName_lte: String

  """All values greater than the given value."""
  lastName_gt: String

  """All values greater than or equal the given value."""
  lastName_gte: String

  """All values containing the given string."""
  lastName_contains: String

  """All values not containing the given string."""
  lastName_not_contains: String

  """All values starting with the given string."""
  lastName_starts_with: String

  """All values not starting with the given string."""
  lastName_not_starts_with: String

  """All values ending with the given string."""
  lastName_ends_with: String

  """All values not ending with the given string."""
  lastName_not_ends_with: String
  address: String

  """All values that are not equal to given value."""
  address_not: String

  """All values that are contained in given list."""
  address_in: [String!]

  """All values that are not contained in given list."""
  address_not_in: [String!]

  """All values less than the given value."""
  address_lt: String

  """All values less than or equal the given value."""
  address_lte: String

  """All values greater than the given value."""
  address_gt: String

  """All values greater than or equal the given value."""
  address_gte: String

  """All values containing the given string."""
  address_contains: String

  """All values not containing the given string."""
  address_not_contains: String

  """All values starting with the given string."""
  address_starts_with: String

  """All values not starting with the given string."""
  address_not_starts_with: String

  """All values ending with the given string."""
  address_ends_with: String

  """All values not ending with the given string."""
  address_not_ends_with: String
  city: String

  """All values that are not equal to given value."""
  city_not: String

  """All values that are contained in given list."""
  city_in: [String!]

  """All values that are not contained in given list."""
  city_not_in: [String!]

  """All values less than the given value."""
  city_lt: String

  """All values less than or equal the given value."""
  city_lte: String

  """All values greater than the given value."""
  city_gt: String

  """All values greater than or equal the given value."""
  city_gte: String

  """All values containing the given string."""
  city_contains: String

  """All values not containing the given string."""
  city_not_contains: String

  """All values starting with the given string."""
  city_starts_with: String

  """All values not starting with the given string."""
  city_not_starts_with: String

  """All values ending with the given string."""
  city_ends_with: String

  """All values not ending with the given string."""
  city_not_ends_with: String
  state: String

  """All values that are not equal to given value."""
  state_not: String

  """All values that are contained in given list."""
  state_in: [String!]

  """All values that are not contained in given list."""
  state_not_in: [String!]

  """All values less than the given value."""
  state_lt: String

  """All values less than or equal the given value."""
  state_lte: String

  """All values greater than the given value."""
  state_gt: String

  """All values greater than or equal the given value."""
  state_gte: String

  """All values containing the given string."""
  state_contains: String

  """All values not containing the given string."""
  state_not_contains: String

  """All values starting with the given string."""
  state_starts_with: String

  """All values not starting with the given string."""
  state_not_starts_with: String

  """All values ending with the given string."""
  state_ends_with: String

  """All values not ending with the given string."""
  state_not_ends_with: String
  zip: Int

  """All values that are not equal to given value."""
  zip_not: Int

  """All values that are contained in given list."""
  zip_in: [Int!]

  """All values that are not contained in given list."""
  zip_not_in: [Int!]

  """All values less than the given value."""
  zip_lt: Int

  """All values less than or equal the given value."""
  zip_lte: Int

  """All values greater than the given value."""
  zip_gt: Int

  """All values greater than or equal the given value."""
  zip_gte: Int
  phone: String

  """All values that are not equal to given value."""
  phone_not: String

  """All values that are contained in given list."""
  phone_in: [String!]

  """All values that are not contained in given list."""
  phone_not_in: [String!]

  """All values less than the given value."""
  phone_lt: String

  """All values less than or equal the given value."""
  phone_lte: String

  """All values greater than the given value."""
  phone_gt: String

  """All values greater than or equal the given value."""
  phone_gte: String

  """All values containing the given string."""
  phone_contains: String

  """All values not containing the given string."""
  phone_not_contains: String

  """All values starting with the given string."""
  phone_starts_with: String

  """All values not starting with the given string."""
  phone_not_starts_with: String

  """All values ending with the given string."""
  phone_ends_with: String

  """All values not ending with the given string."""
  phone_not_ends_with: String
  last_login: DateTime

  """All values that are not equal to given value."""
  last_login_not: DateTime

  """All values that are contained in given list."""
  last_login_in: [DateTime!]

  """All values that are not contained in given list."""
  last_login_not_in: [DateTime!]

  """All values less than the given value."""
  last_login_lt: DateTime

  """All values less than or equal the given value."""
  last_login_lte: DateTime

  """All values greater than the given value."""
  last_login_gt: DateTime

  """All values greater than or equal the given value."""
  last_login_gte: DateTime
  online: Boolean

  """All values that are not equal to given value."""
  online_not: Boolean
  type: UserType

  """All values that are not equal to given value."""
  type_not: UserType

  """All values that are contained in given list."""
  type_in: [UserType!]

  """All values that are not contained in given list."""
  type_not_in: [UserType!]
  applications_every: ApplicationWhereInput
  applications_some: ApplicationWhereInput
  applications_none: ApplicationWhereInput
  consultant_jobs_every: JobWhereInput
  consultant_jobs_some: JobWhereInput
  consultant_jobs_none: JobWhereInput
  client: ClientWhereInput
  clients_added_every: ClientWhereInput
  clients_added_some: ClientWhereInput
  clients_added_none: ClientWhereInput
  jobs_added_every: JobWhereInput
  jobs_added_some: JobWhereInput
  jobs_added_none: JobWhereInput
  references_every: ReferenceWhereInput
  references_some: ReferenceWhereInput
  references_none: ReferenceWhereInput
  applicant_screen_calls_every: ScreenCallWhereInput
  applicant_screen_calls_some: ScreenCallWhereInput
  applicant_screen_calls_none: ScreenCallWhereInput
  background: BackgroundWhereInput
  articles_every: ArticleWhereInput
  articles_some: ArticleWhereInput
  articles_none: ArticleWhereInput
  expenses_every: ExpenseWhereInput
  expenses_some: ExpenseWhereInput
  expenses_none: ExpenseWhereInput
  outreach_target: OutreachTargetWhereInput
  ad_sources_added_every: AdSourceWhereInput
  ad_sources_added_some: AdSourceWhereInput
  ad_sources_added_none: AdSourceWhereInput
  ads_placed_every: AdPlacedWhereInput
  ads_placed_some: AdPlacedWhereInput
  ads_placed_none: AdPlacedWhereInput
  outreach_targets_added_every: OutreachTargetWhereInput
  outreach_targets_added_some: OutreachTargetWhereInput
  outreach_targets_added_none: OutreachTargetWhereInput
  outreach_calls_every: OutreachCallWhereInput
  outreach_calls_some: OutreachCallWhereInput
  outreach_calls_none: OutreachCallWhereInput
  consultant_screen_calls_every: ScreenCallWhereInput
  consultant_screen_calls_some: ScreenCallWhereInput
  consultant_screen_calls_none: ScreenCallWhereInput
  reference_calls_every: ReferenceWhereInput
  reference_calls_some: ReferenceWhereInput
  reference_calls_none: ReferenceWhereInput
  backgrounds_ordered_every: BackgroundWhereInput
  backgrounds_ordered_some: BackgroundWhereInput
  backgrounds_ordered_none: BackgroundWhereInput
  articles_added_every: ArticleWhereInput
  articles_added_some: ArticleWhereInput
  articles_added_none: ArticleWhereInput
  expenses_paid_every: ExpenseWhereInput
  expenses_paid_some: ExpenseWhereInput
  expenses_paid_none: ExpenseWhereInput
  _MagicalBackRelation_PaymentUser_every: JobWhereInput
  _MagicalBackRelation_PaymentUser_some: JobWhereInput
  _MagicalBackRelation_PaymentUser_none: JobWhereInput
  _MagicalBackRelation_PaidByJob_every: PaymentWhereInput
  _MagicalBackRelation_PaidByJob_some: PaymentWhereInput
  _MagicalBackRelation_PaidByJob_none: PaymentWhereInput
  _MagicalBackRelation_MainContactUser_every: JobWhereInput
  _MagicalBackRelation_MainContactUser_some: JobWhereInput
  _MagicalBackRelation_MainContactUser_none: JobWhereInput
  _MagicalBackRelation_PlacedUser_every: JobWhereInput
  _MagicalBackRelation_PlacedUser_some: JobWhereInput
  _MagicalBackRelation_PlacedUser_none: JobWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
